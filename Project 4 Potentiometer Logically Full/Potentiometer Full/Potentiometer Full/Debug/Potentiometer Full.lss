
Potentiometer Full.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001ee  00800200  00002b20  00002bb4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002b20  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00001b61  008003ee  008003ee  00002da2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002da2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002e00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  00002e40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002547  00000000  00000000  00002fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001174  00000000  00000000  000054ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f62  00000000  00000000  00006663  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000530  00000000  00000000  000075c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000985  00000000  00000000  00007af8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001276  00000000  00000000  0000847d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  000096f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	ff c0       	rjmp	.+510    	; 0x200 <__ctors_end>
       2:	00 00       	nop
       4:	1d c1       	rjmp	.+570    	; 0x240 <__bad_interrupt>
       6:	00 00       	nop
       8:	1b c1       	rjmp	.+566    	; 0x240 <__bad_interrupt>
       a:	00 00       	nop
       c:	19 c1       	rjmp	.+562    	; 0x240 <__bad_interrupt>
       e:	00 00       	nop
      10:	17 c1       	rjmp	.+558    	; 0x240 <__bad_interrupt>
      12:	00 00       	nop
      14:	15 c1       	rjmp	.+554    	; 0x240 <__bad_interrupt>
      16:	00 00       	nop
      18:	13 c1       	rjmp	.+550    	; 0x240 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	11 c1       	rjmp	.+546    	; 0x240 <__bad_interrupt>
      1e:	00 00       	nop
      20:	0f c1       	rjmp	.+542    	; 0x240 <__bad_interrupt>
      22:	00 00       	nop
      24:	0d c1       	rjmp	.+538    	; 0x240 <__bad_interrupt>
      26:	00 00       	nop
      28:	0b c1       	rjmp	.+534    	; 0x240 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	09 c1       	rjmp	.+530    	; 0x240 <__bad_interrupt>
      2e:	00 00       	nop
      30:	07 c1       	rjmp	.+526    	; 0x240 <__bad_interrupt>
      32:	00 00       	nop
      34:	05 c1       	rjmp	.+522    	; 0x240 <__bad_interrupt>
      36:	00 00       	nop
      38:	03 c1       	rjmp	.+518    	; 0x240 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	01 c1       	rjmp	.+514    	; 0x240 <__bad_interrupt>
      3e:	00 00       	nop
      40:	ff c0       	rjmp	.+510    	; 0x240 <__bad_interrupt>
      42:	00 00       	nop
      44:	fd c0       	rjmp	.+506    	; 0x240 <__bad_interrupt>
      46:	00 00       	nop
      48:	fb c0       	rjmp	.+502    	; 0x240 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	f9 c0       	rjmp	.+498    	; 0x240 <__bad_interrupt>
      4e:	00 00       	nop
      50:	f7 c0       	rjmp	.+494    	; 0x240 <__bad_interrupt>
      52:	00 00       	nop
      54:	f5 c0       	rjmp	.+490    	; 0x240 <__bad_interrupt>
      56:	00 00       	nop
      58:	f3 c0       	rjmp	.+486    	; 0x240 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f1 c0       	rjmp	.+482    	; 0x240 <__bad_interrupt>
      5e:	00 00       	nop
      60:	ef c0       	rjmp	.+478    	; 0x240 <__bad_interrupt>
      62:	00 00       	nop
      64:	70 c7       	rjmp	.+3808   	; 0xf46 <__vector_25>
      66:	00 00       	nop
      68:	eb c0       	rjmp	.+470    	; 0x240 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	e9 c0       	rjmp	.+466    	; 0x240 <__bad_interrupt>
      6e:	00 00       	nop
      70:	e7 c0       	rjmp	.+462    	; 0x240 <__bad_interrupt>
      72:	00 00       	nop
      74:	e5 c0       	rjmp	.+458    	; 0x240 <__bad_interrupt>
      76:	00 00       	nop
      78:	e3 c0       	rjmp	.+454    	; 0x240 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e1 c0       	rjmp	.+450    	; 0x240 <__bad_interrupt>
      7e:	00 00       	nop
      80:	df c0       	rjmp	.+446    	; 0x240 <__bad_interrupt>
      82:	00 00       	nop
      84:	dd c0       	rjmp	.+442    	; 0x240 <__bad_interrupt>
      86:	00 00       	nop
      88:	db c0       	rjmp	.+438    	; 0x240 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d9 c0       	rjmp	.+434    	; 0x240 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 57 08 	jmp	0x10ae	; 0x10ae <__vector_36>
      94:	d5 c0       	rjmp	.+426    	; 0x240 <__bad_interrupt>
      96:	00 00       	nop
      98:	d3 c0       	rjmp	.+422    	; 0x240 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d1 c0       	rjmp	.+418    	; 0x240 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	cf c0       	rjmp	.+414    	; 0x240 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	cd c0       	rjmp	.+410    	; 0x240 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	cb c0       	rjmp	.+406    	; 0x240 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	c9 c0       	rjmp	.+402    	; 0x240 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	c7 c0       	rjmp	.+398    	; 0x240 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c5 c0       	rjmp	.+394    	; 0x240 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c3 c0       	rjmp	.+390    	; 0x240 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	c1 c0       	rjmp	.+386    	; 0x240 <__bad_interrupt>
      be:	00 00       	nop
      c0:	bf c0       	rjmp	.+382    	; 0x240 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	bd c0       	rjmp	.+378    	; 0x240 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	bb c0       	rjmp	.+374    	; 0x240 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 ad 08 	jmp	0x115a	; 0x115a <__vector_51>
      d0:	b7 c0       	rjmp	.+366    	; 0x240 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	b5 c0       	rjmp	.+362    	; 0x240 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 f7 08 	jmp	0x11ee	; 0x11ee <__vector_54>
      dc:	b1 c0       	rjmp	.+354    	; 0x240 <__bad_interrupt>
      de:	00 00       	nop
      e0:	af c0       	rjmp	.+350    	; 0x240 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	d3 02       	muls	r29, r19
      e6:	eb 02       	muls	r30, r27
      e8:	42 03       	mulsu	r20, r18
      ea:	8c 03       	fmulsu	r16, r20
      ec:	1e 05       	cpc	r17, r14
      ee:	72 05       	cpc	r23, r2
      f0:	65 07       	cpc	r22, r21

000000f2 <__trampolines_end>:
      f2:	6e 61       	ori	r22, 0x1E	; 30
      f4:	6e 00       	.word	0x006e	; ????

000000f6 <__c.2332>:
      f6:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     106:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     116:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     126:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     136:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     146:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     156:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     166:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     176:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     186:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     196:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1a6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1b6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1c6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1d6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1e6:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001f4 <__c.2474>:
     1f4:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000200 <__ctors_end>:
     200:	11 24       	eor	r1, r1
     202:	1f be       	out	0x3f, r1	; 63
     204:	cf ef       	ldi	r28, 0xFF	; 255
     206:	d1 e2       	ldi	r29, 0x21	; 33
     208:	de bf       	out	0x3e, r29	; 62
     20a:	cd bf       	out	0x3d, r28	; 61
     20c:	00 e0       	ldi	r16, 0x00	; 0
     20e:	0c bf       	out	0x3c, r16	; 60

00000210 <__do_copy_data>:
     210:	13 e0       	ldi	r17, 0x03	; 3
     212:	a0 e0       	ldi	r26, 0x00	; 0
     214:	b2 e0       	ldi	r27, 0x02	; 2
     216:	e0 e2       	ldi	r30, 0x20	; 32
     218:	fb e2       	ldi	r31, 0x2B	; 43
     21a:	00 e0       	ldi	r16, 0x00	; 0
     21c:	0b bf       	out	0x3b, r16	; 59
     21e:	02 c0       	rjmp	.+4      	; 0x224 <__do_copy_data+0x14>
     220:	07 90       	elpm	r0, Z+
     222:	0d 92       	st	X+, r0
     224:	ae 3e       	cpi	r26, 0xEE	; 238
     226:	b1 07       	cpc	r27, r17
     228:	d9 f7       	brne	.-10     	; 0x220 <__do_copy_data+0x10>

0000022a <__do_clear_bss>:
     22a:	2f e1       	ldi	r18, 0x1F	; 31
     22c:	ae ee       	ldi	r26, 0xEE	; 238
     22e:	b3 e0       	ldi	r27, 0x03	; 3
     230:	01 c0       	rjmp	.+2      	; 0x234 <.do_clear_bss_start>

00000232 <.do_clear_bss_loop>:
     232:	1d 92       	st	X+, r1

00000234 <.do_clear_bss_start>:
     234:	af 34       	cpi	r26, 0x4F	; 79
     236:	b2 07       	cpc	r27, r18
     238:	e1 f7       	brne	.-8      	; 0x232 <.do_clear_bss_loop>
     23a:	24 d0       	rcall	.+72     	; 0x284 <main>
     23c:	0c 94 8e 15 	jmp	0x2b1c	; 0x2b1c <_exit>

00000240 <__bad_interrupt>:
     240:	df ce       	rjmp	.-578    	; 0x0 <__vectors>

00000242 <InitADC>:
	ADMUX ? ADC Multiplexer Selection Register
	Bit	  7		6	  5		4	 3	 2	  1		0
	(0x7C) REFS1 REFS0 ADLAR MUX4 MUX3 MUX2 MUX1 MUX0
	*/

	ADMUX = (1 << REFS0);
     242:	80 e4       	ldi	r24, 0x40	; 64
     244:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>

	//  ADCSRA ? ADC Control and Status Register A

	// 	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // ADC Enable, Prescaler = 128 (16MHz/128 = 125kHz)
	// 																	   /* Because the ADC frequency generally b/w 50 kHz to 200 kHz*/
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1); // Enable ADC, prescaler = 64
     248:	86 e8       	ldi	r24, 0x86	; 134
     24a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     24e:	08 95       	ret

00000250 <ReadADC>:
}

uint16_t ReadADC(uint8_t ch)
{
	// Select ADC Channel ch must be 0-15
	ADMUX = (ADMUX & 0xF0) | (ch & 0x0F);
     250:	ec e7       	ldi	r30, 0x7C	; 124
     252:	f0 e0       	ldi	r31, 0x00	; 0
     254:	90 81       	ld	r25, Z
     256:	90 7f       	andi	r25, 0xF0	; 240
     258:	8f 70       	andi	r24, 0x0F	; 15
     25a:	89 2b       	or	r24, r25
     25c:	80 83       	st	Z, r24

	// Start Single conversion
	ADCSRA |= (1 << ADSC);
     25e:	ea e7       	ldi	r30, 0x7A	; 122
     260:	f0 e0       	ldi	r31, 0x00	; 0
     262:	80 81       	ld	r24, Z
     264:	80 64       	ori	r24, 0x40	; 64
     266:	80 83       	st	Z, r24

	// Wait for conversion to complete
	while (!(ADCSRA & (1 << ADIF)));
     268:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     26c:	84 ff       	sbrs	r24, 4
     26e:	fc cf       	rjmp	.-8      	; 0x268 <ReadADC+0x18>
	// Clear ADIF by writing one to it
	// Note you may be wondering why we have write one to clear it
	// This is standard way of clearing bits in io as said in datasheets.
	// The code writes '1' but it result in setting bit to '0' !!!

	ADCSRA |= (1 << ADIF);
     270:	ea e7       	ldi	r30, 0x7A	; 122
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	80 81       	ld	r24, Z
     276:	80 61       	ori	r24, 0x10	; 16
     278:	80 83       	st	Z, r24

	return (ADC);
     27a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
     27e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
     282:	08 95       	ret

00000284 <main>:

#include "main.h"

int main(void)
{
	USART0_Init(103); // 9600 Baud FOR DOCKLIGHT
     284:	87 e6       	ldi	r24, 0x67	; 103
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	40 d6       	rcall	.+3200   	; 0xf0a <USART0_Init>
	USART1_Init(8);	  // 115200 Baud FOR BLE
     28a:	88 e0       	ldi	r24, 0x08	; 8
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	c2 d6       	rcall	.+3460   	; 0x1014 <USART1_Init>
	USART2_Init(103); // 9600 Baud FOR PLOTTER
     290:	87 e6       	ldi	r24, 0x67	; 103
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	44 d7       	rcall	.+3720   	; 0x111e <USART2_Init>
	USART3_Init(103); // 9600 Baud FOR MODBUS
     296:	87 e6       	ldi	r24, 0x67	; 103
     298:	90 e0       	ldi	r25, 0x00	; 0
	sei();			  // Enable global interrupts
     29a:	97 d7       	rcall	.+3886   	; 0x11ca <USART3_Init>

	InitADC();
     29c:	78 94       	sei
     29e:	d1 df       	rcall	.-94     	; 0x242 <InitADC>
//	USART0_Print("\nRESTART\n");
	/* Replace with your application code */
	while (1)
	{
		application();
     2a0:	68 d1       	rcall	.+720    	; 0x572 <application>
     2a2:	fe cf       	rjmp	.-4      	; 0x2a0 <main+0x1c>

000002a4 <modbus_crc16>:
     2a4:	ac 01       	movw	r20, r24
// Define the global modbus_data
ModbusPacket modbus_data;

uint16_t modbus_crc16(uint8_t *buffer, uint8_t length) {
	uint16_t crc = 0xFFFF;
	for (uint8_t i = 0; i < length; i++) {
     2a6:	30 e0       	ldi	r19, 0x00	; 0

// Define the global modbus_data
ModbusPacket modbus_data;

uint16_t modbus_crc16(uint8_t *buffer, uint8_t length) {
	uint16_t crc = 0xFFFF;
     2a8:	8f ef       	ldi	r24, 0xFF	; 255
     2aa:	9f ef       	ldi	r25, 0xFF	; 255
	for (uint8_t i = 0; i < length; i++) {
     2ac:	16 c0       	rjmp	.+44     	; 0x2da <modbus_crc16+0x36>
		crc ^= buffer[i];
     2ae:	fa 01       	movw	r30, r20
     2b0:	e3 0f       	add	r30, r19
     2b2:	f1 1d       	adc	r31, r1
     2b4:	20 81       	ld	r18, Z
     2b6:	82 27       	eor	r24, r18
		for (uint8_t j = 0; j < 8; j++) {
     2b8:	20 e0       	ldi	r18, 0x00	; 0
     2ba:	0c c0       	rjmp	.+24     	; 0x2d4 <modbus_crc16+0x30>
			if (crc & 0x0001)
     2bc:	80 ff       	sbrs	r24, 0
     2be:	07 c0       	rjmp	.+14     	; 0x2ce <modbus_crc16+0x2a>
			crc = (crc >> 1) ^ 0xA001;
     2c0:	96 95       	lsr	r25
     2c2:	87 95       	ror	r24
     2c4:	71 e0       	ldi	r23, 0x01	; 1
     2c6:	87 27       	eor	r24, r23
     2c8:	70 ea       	ldi	r23, 0xA0	; 160
     2ca:	97 27       	eor	r25, r23
     2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <modbus_crc16+0x2e>
			else
			crc >>= 1;
     2ce:	96 95       	lsr	r25
     2d0:	87 95       	ror	r24

uint16_t modbus_crc16(uint8_t *buffer, uint8_t length) {
	uint16_t crc = 0xFFFF;
	for (uint8_t i = 0; i < length; i++) {
		crc ^= buffer[i];
		for (uint8_t j = 0; j < 8; j++) {
     2d2:	2f 5f       	subi	r18, 0xFF	; 255
     2d4:	28 30       	cpi	r18, 0x08	; 8
     2d6:	90 f3       	brcs	.-28     	; 0x2bc <modbus_crc16+0x18>
// Define the global modbus_data
ModbusPacket modbus_data;

uint16_t modbus_crc16(uint8_t *buffer, uint8_t length) {
	uint16_t crc = 0xFFFF;
	for (uint8_t i = 0; i < length; i++) {
     2d8:	3f 5f       	subi	r19, 0xFF	; 255
     2da:	36 17       	cp	r19, r22
     2dc:	40 f3       	brcs	.-48     	; 0x2ae <modbus_crc16+0xa>
			else
			crc >>= 1;
		}
	}
	return crc;
}
     2de:	08 95       	ret

000002e0 <send_modbus_response>:

void send_modbus_response() {
     2e0:	0f 93       	push	r16
     2e2:	1f 93       	push	r17
     2e4:	cf 93       	push	r28
     2e6:	df 93       	push	r29
     2e8:	cd b7       	in	r28, 0x3d	; 61
     2ea:	de b7       	in	r29, 0x3e	; 62
     2ec:	65 97       	sbiw	r28, 0x15	; 21
     2ee:	0f b6       	in	r0, 0x3f	; 63
     2f0:	f8 94       	cli
     2f2:	de bf       	out	0x3e, r29	; 62
     2f4:	0f be       	out	0x3f, r0	; 63
     2f6:	cd bf       	out	0x3d, r28	; 61
	uint8_t tx_buf[21];
	uint8_t i = 0;

	tx_buf[i++] = SLAVE_ID;
     2f8:	85 e0       	ldi	r24, 0x05	; 5
     2fa:	89 83       	std	Y+1, r24	; 0x01
	tx_buf[i++] = 0x10; // Function code: Write Multiple Registers
     2fc:	80 e1       	ldi	r24, 0x10	; 16
     2fe:	8a 83       	std	Y+2, r24	; 0x02
	tx_buf[i++] = 0x00; // Start Address High
     300:	1b 82       	std	Y+3, r1	; 0x03
	tx_buf[i++] = 0x01; // Start Address Low
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	8c 83       	std	Y+4, r24	; 0x04
	tx_buf[i++] = 0x00; // Quantity High
     306:	1d 82       	std	Y+5, r1	; 0x05
	tx_buf[i++] = 0x06; // 6 registers
     308:	86 e0       	ldi	r24, 0x06	; 6
     30a:	8e 83       	std	Y+6, r24	; 0x06
	tx_buf[i++] = 12;   // Byte count: 6 * 2 = 12
     30c:	8c e0       	ldi	r24, 0x0C	; 12
     30e:	8f 83       	std	Y+7, r24	; 0x07

	tx_buf[i++] = modbus_data.ref_resistance >> 8;
     310:	e5 e3       	ldi	r30, 0x35	; 53
     312:	f7 e0       	ldi	r31, 0x07	; 7
     314:	80 81       	ld	r24, Z
     316:	91 81       	ldd	r25, Z+1	; 0x01
     318:	98 87       	std	Y+8, r25	; 0x08
	tx_buf[i++] = modbus_data.ref_resistance & 0xFF;
     31a:	89 87       	std	Y+9, r24	; 0x09

	tx_buf[i++] = modbus_data.pot_resistance >> 8;
     31c:	82 81       	ldd	r24, Z+2	; 0x02
     31e:	93 81       	ldd	r25, Z+3	; 0x03
     320:	9a 87       	std	Y+10, r25	; 0x0a
	tx_buf[i++] = modbus_data.pot_resistance & 0xFF;
     322:	8b 87       	std	Y+11, r24	; 0x0b

	tx_buf[i++] = modbus_data.voltage_mV >> 8;
     324:	84 81       	ldd	r24, Z+4	; 0x04
     326:	95 81       	ldd	r25, Z+5	; 0x05
     328:	9c 87       	std	Y+12, r25	; 0x0c
	tx_buf[i++] = modbus_data.voltage_mV & 0xFF;
     32a:	8d 87       	std	Y+13, r24	; 0x0d

	tx_buf[i++] = modbus_data.current_uA >> 8;
     32c:	86 81       	ldd	r24, Z+6	; 0x06
     32e:	97 81       	ldd	r25, Z+7	; 0x07
     330:	9e 87       	std	Y+14, r25	; 0x0e
	tx_buf[i++] = modbus_data.current_uA & 0xFF;
     332:	8f 87       	std	Y+15, r24	; 0x0f

	tx_buf[i++] = modbus_data.power_uW >> 8;
     334:	80 85       	ldd	r24, Z+8	; 0x08
     336:	91 85       	ldd	r25, Z+9	; 0x09
     338:	98 8b       	std	Y+16, r25	; 0x10
	tx_buf[i++] = modbus_data.power_uW & 0xFF;
     33a:	89 8b       	std	Y+17, r24	; 0x11

	tx_buf[i++] = modbus_data.energy_uWs >> 8;
     33c:	82 85       	ldd	r24, Z+10	; 0x0a
     33e:	93 85       	ldd	r25, Z+11	; 0x0b
     340:	9a 8b       	std	Y+18, r25	; 0x12
	tx_buf[i++] = modbus_data.energy_uWs & 0xFF;
     342:	8b 8b       	std	Y+19, r24	; 0x13

	uint16_t crc = modbus_crc16(tx_buf, i);
     344:	63 e1       	ldi	r22, 0x13	; 19
     346:	ce 01       	movw	r24, r28
     348:	01 96       	adiw	r24, 0x01	; 1
     34a:	ac df       	rcall	.-168    	; 0x2a4 <modbus_crc16>
	tx_buf[i++] = crc & 0xFF;
     34c:	8c 8b       	std	Y+20, r24	; 0x14
	tx_buf[i++] = crc >> 8;
     34e:	9d 8b       	std	Y+21, r25	; 0x15

	for (int j = 0; j < i; j++) {
     350:	00 e0       	ldi	r16, 0x00	; 0
     352:	10 e0       	ldi	r17, 0x00	; 0
     354:	0a c0       	rjmp	.+20     	; 0x36a <send_modbus_response+0x8a>
		USART3_Transmit(tx_buf[j]);
     356:	e1 e0       	ldi	r30, 0x01	; 1
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	ec 0f       	add	r30, r28
     35c:	fd 1f       	adc	r31, r29
     35e:	e0 0f       	add	r30, r16
     360:	f1 1f       	adc	r31, r17
     362:	80 81       	ld	r24, Z
     364:	3d d7       	rcall	.+3706   	; 0x11e0 <USART3_Transmit>

	uint16_t crc = modbus_crc16(tx_buf, i);
	tx_buf[i++] = crc & 0xFF;
	tx_buf[i++] = crc >> 8;

	for (int j = 0; j < i; j++) {
     366:	0f 5f       	subi	r16, 0xFF	; 255
     368:	1f 4f       	sbci	r17, 0xFF	; 255
     36a:	05 31       	cpi	r16, 0x15	; 21
     36c:	11 05       	cpc	r17, r1
     36e:	9c f3       	brlt	.-26     	; 0x356 <send_modbus_response+0x76>
		USART3_Transmit(tx_buf[j]);
	}
     370:	65 96       	adiw	r28, 0x15	; 21
     372:	0f b6       	in	r0, 0x3f	; 63
     374:	f8 94       	cli
     376:	de bf       	out	0x3e, r29	; 62
     378:	0f be       	out	0x3f, r0	; 63
     37a:	cd bf       	out	0x3d, r28	; 61
     37c:	df 91       	pop	r29
     37e:	cf 91       	pop	r28
     380:	1f 91       	pop	r17
     382:	0f 91       	pop	r16
     384:	08 95       	ret

00000386 <send_to_terminal>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     386:	2f ef       	ldi	r18, 0xFF	; 255
     388:	83 ed       	ldi	r24, 0xD3	; 211
     38a:	90 e3       	ldi	r25, 0x30	; 48
     38c:	21 50       	subi	r18, 0x01	; 1
     38e:	80 40       	sbci	r24, 0x00	; 0
     390:	90 40       	sbci	r25, 0x00	; 0
     392:	e1 f7       	brne	.-8      	; 0x38c <send_to_terminal+0x6>
     394:	00 c0       	rjmp	.+0      	; 0x396 <send_to_terminal+0x10>
     396:	00 00       	nop
#define R_KNOWN 200.5      // Define the known resistor value in ohms
#define DELAY_SEC 0.5      // Define the delay between updates in seconds

void send_to_terminal(void) { // Send to Docklight
	_delay_ms(1000); // Introduces a 1-second delay
	USART0_Print("\nConnected to Docklight\r\n"); // Sends a connection message
     398:	80 e0       	ldi	r24, 0x00	; 0
     39a:	92 e0       	ldi	r25, 0x02	; 2
     39c:	c8 d5       	rcall	.+2960   	; 0xf2e <USART0_Print>
	USART0_Print(adc); // Sends the ADC value
     39e:	85 e6       	ldi	r24, 0x65	; 101
     3a0:	96 e0       	ldi	r25, 0x06	; 6
     3a2:	c5 d5       	rcall	.+2954   	; 0xf2e <USART0_Print>
	USART0_Print(ref_R); // Sends the reference resistance
     3a4:	81 e1       	ldi	r24, 0x11	; 17
     3a6:	96 e0       	ldi	r25, 0x06	; 6
     3a8:	c2 d5       	rcall	.+2948   	; 0xf2e <USART0_Print>
	USART0_Print(pot_R); // Sends the potentiometer resistance
     3aa:	89 e9       	ldi	r24, 0x99	; 153
     3ac:	96 e0       	ldi	r25, 0x06	; 6
     3ae:	bf d5       	rcall	.+2942   	; 0xf2e <USART0_Print>
	USART0_Print(volt); // Sends the voltage
     3b0:	81 ef       	ldi	r24, 0xF1	; 241
     3b2:	96 e0       	ldi	r25, 0x06	; 6
     3b4:	bc d5       	rcall	.+2936   	; 0xf2e <USART0_Print>
	USART0_Print(cur); // Sends the current
     3b6:	89 ec       	ldi	r24, 0xC9	; 201
     3b8:	96 e0       	ldi	r25, 0x06	; 6
     3ba:	b9 d5       	rcall	.+2930   	; 0xf2e <USART0_Print>
	USART0_Print(Pow); // Sends the power
     3bc:	81 e1       	ldi	r24, 0x11	; 17
     3be:	97 e0       	ldi	r25, 0x07	; 7
     3c0:	b6 d5       	rcall	.+2924   	; 0xf2e <USART0_Print>
     3c2:	81 e4       	ldi	r24, 0x41	; 65
	USART0_Print(enrgy); // Sends the energy
     3c4:	96 e0       	ldi	r25, 0x06	; 6
     3c6:	b3 c5       	rjmp	.+2918   	; 0xf2e <USART0_Print>
     3c8:	08 95       	ret

000003ca <send_to_ble>:
     3ca:	2f ef       	ldi	r18, 0xFF	; 255
     3cc:	83 ed       	ldi	r24, 0xD3	; 211
     3ce:	90 e3       	ldi	r25, 0x30	; 48
     3d0:	21 50       	subi	r18, 0x01	; 1
     3d2:	80 40       	sbci	r24, 0x00	; 0
     3d4:	90 40       	sbci	r25, 0x00	; 0
     3d6:	e1 f7       	brne	.-8      	; 0x3d0 <send_to_ble+0x6>
     3d8:	00 c0       	rjmp	.+0      	; 0x3da <send_to_ble+0x10>
     3da:	00 00       	nop
}

void send_to_ble(void) { // Send to BLE
	_delay_ms(1000); // Introduces a 1-second delay
	USART1_Print("\nConnect to BM71 BLE \r\n"); // Sends a connection message for BLE
     3dc:	8a e1       	ldi	r24, 0x1A	; 26
     3de:	92 e0       	ldi	r25, 0x02	; 2
     3e0:	2b d6       	rcall	.+3158   	; 0x1038 <USART1_Print>
	USART1_Print(adc); // Sends the ADC value
     3e2:	85 e6       	ldi	r24, 0x65	; 101
     3e4:	96 e0       	ldi	r25, 0x06	; 6
     3e6:	28 d6       	rcall	.+3152   	; 0x1038 <USART1_Print>
     3e8:	2f ef       	ldi	r18, 0xFF	; 255
     3ea:	81 ee       	ldi	r24, 0xE1	; 225
     3ec:	94 e0       	ldi	r25, 0x04	; 4
     3ee:	21 50       	subi	r18, 0x01	; 1
     3f0:	80 40       	sbci	r24, 0x00	; 0
     3f2:	90 40       	sbci	r25, 0x00	; 0
     3f4:	e1 f7       	brne	.-8      	; 0x3ee <send_to_ble+0x24>
     3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <send_to_ble+0x2e>
     3f8:	00 00       	nop
	_delay_ms(100);
	USART1_Print(ref_R); // Sends the reference resistance
     3fa:	81 e1       	ldi	r24, 0x11	; 17
     3fc:	96 e0       	ldi	r25, 0x06	; 6
     3fe:	1c d6       	rcall	.+3128   	; 0x1038 <USART1_Print>
     400:	2f ef       	ldi	r18, 0xFF	; 255
     402:	81 ee       	ldi	r24, 0xE1	; 225
     404:	94 e0       	ldi	r25, 0x04	; 4
     406:	21 50       	subi	r18, 0x01	; 1
     408:	80 40       	sbci	r24, 0x00	; 0
     40a:	90 40       	sbci	r25, 0x00	; 0
     40c:	e1 f7       	brne	.-8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     40e:	00 c0       	rjmp	.+0      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
	_delay_ms(100);
	USART1_Print(pot_R); // Sends the potentiometer resistance
     410:	00 00       	nop
     412:	89 e9       	ldi	r24, 0x99	; 153
     414:	96 e0       	ldi	r25, 0x06	; 6
     416:	10 d6       	rcall	.+3104   	; 0x1038 <USART1_Print>
     418:	2f ef       	ldi	r18, 0xFF	; 255
     41a:	81 ee       	ldi	r24, 0xE1	; 225
     41c:	94 e0       	ldi	r25, 0x04	; 4
     41e:	21 50       	subi	r18, 0x01	; 1
     420:	80 40       	sbci	r24, 0x00	; 0
     422:	90 40       	sbci	r25, 0x00	; 0
     424:	e1 f7       	brne	.-8      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     426:	00 c0       	rjmp	.+0      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
	_delay_ms(100);
	USART1_Print(volt); // Sends the voltage
     428:	00 00       	nop
     42a:	81 ef       	ldi	r24, 0xF1	; 241
     42c:	96 e0       	ldi	r25, 0x06	; 6
     42e:	04 d6       	rcall	.+3080   	; 0x1038 <USART1_Print>
     430:	2f ef       	ldi	r18, 0xFF	; 255
     432:	81 ee       	ldi	r24, 0xE1	; 225
     434:	94 e0       	ldi	r25, 0x04	; 4
     436:	21 50       	subi	r18, 0x01	; 1
     438:	80 40       	sbci	r24, 0x00	; 0
     43a:	90 40       	sbci	r25, 0x00	; 0
     43c:	e1 f7       	brne	.-8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     43e:	00 c0       	rjmp	.+0      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
	_delay_ms(100);
	USART1_Print(cur); // Sends the current
     440:	00 00       	nop
     442:	89 ec       	ldi	r24, 0xC9	; 201
     444:	96 e0       	ldi	r25, 0x06	; 6
     446:	f8 d5       	rcall	.+3056   	; 0x1038 <USART1_Print>
     448:	2f ef       	ldi	r18, 0xFF	; 255
     44a:	81 ee       	ldi	r24, 0xE1	; 225
     44c:	94 e0       	ldi	r25, 0x04	; 4
     44e:	21 50       	subi	r18, 0x01	; 1
     450:	80 40       	sbci	r24, 0x00	; 0
     452:	90 40       	sbci	r25, 0x00	; 0
     454:	e1 f7       	brne	.-8      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     456:	00 c0       	rjmp	.+0      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
	_delay_ms(100);
	USART1_Print(Pow); // Sends the power
     458:	00 00       	nop
     45a:	81 e1       	ldi	r24, 0x11	; 17
     45c:	97 e0       	ldi	r25, 0x07	; 7
     45e:	ec d5       	rcall	.+3032   	; 0x1038 <USART1_Print>
     460:	2f ef       	ldi	r18, 0xFF	; 255
     462:	81 ee       	ldi	r24, 0xE1	; 225
     464:	94 e0       	ldi	r25, 0x04	; 4
     466:	21 50       	subi	r18, 0x01	; 1
     468:	80 40       	sbci	r24, 0x00	; 0
     46a:	90 40       	sbci	r25, 0x00	; 0
     46c:	e1 f7       	brne	.-8      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     46e:	00 c0       	rjmp	.+0      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
	_delay_ms(100);
	USART1_Print(enrgy); // Sends the energy
     470:	00 00       	nop
     472:	81 e4       	ldi	r24, 0x41	; 65
     474:	96 e0       	ldi	r25, 0x06	; 6
     476:	e0 d5       	rcall	.+3008   	; 0x1038 <USART1_Print>
     478:	2f ef       	ldi	r18, 0xFF	; 255
     47a:	81 ee       	ldi	r24, 0xE1	; 225
     47c:	94 e0       	ldi	r25, 0x04	; 4
     47e:	21 50       	subi	r18, 0x01	; 1
     480:	80 40       	sbci	r24, 0x00	; 0
     482:	90 40       	sbci	r25, 0x00	; 0
     484:	e1 f7       	brne	.-8      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     486:	00 c0       	rjmp	.+0      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     488:	00 00       	nop
     48a:	08 95       	ret

0000048c <send_to_plotter>:
	_delay_ms(100);
}

void send_to_plotter(void) {// Send to plotter
     48c:	0f 93       	push	r16
     48e:	1f 93       	push	r17
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	cd b7       	in	r28, 0x3d	; 61
     496:	de b7       	in	r29, 0x3e	; 62
     498:	d2 50       	subi	r29, 0x02	; 2
     49a:	0f b6       	in	r0, 0x3f	; 63
     49c:	f8 94       	cli
     49e:	de bf       	out	0x3e, r29	; 62
     4a0:	0f be       	out	0x3f, r0	; 63
     4a2:	cd bf       	out	0x3d, r28	; 61
	char dbg[512]; // Buffer to hold the formatted string
	
	//sprintf(dbg, "%f %f %f %f %f %f\n", ref_resistance, pot_resistance, voltage_out, current, power, energy); // Formats the data Better Serial Plotter
	
	sprintf(dbg, "$%f %f %f %f %f %f;", ref_resistance, pot_resistance, voltage_out, current, power, energy); // Formats the data for the Serial Port Plotter
     4a4:	80 91 ec 06 	lds	r24, 0x06EC	; 0x8006ec <energy+0x3>
     4a8:	8f 93       	push	r24
     4aa:	80 91 eb 06 	lds	r24, 0x06EB	; 0x8006eb <energy+0x2>
     4ae:	8f 93       	push	r24
     4b0:	80 91 ea 06 	lds	r24, 0x06EA	; 0x8006ea <energy+0x1>
     4b4:	8f 93       	push	r24
     4b6:	80 91 e9 06 	lds	r24, 0x06E9	; 0x8006e9 <energy>
     4ba:	8f 93       	push	r24
     4bc:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <power+0x3>
     4c0:	8f 93       	push	r24
     4c2:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <power+0x2>
     4c6:	8f 93       	push	r24
     4c8:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <power+0x1>
     4cc:	8f 93       	push	r24
     4ce:	80 91 01 04 	lds	r24, 0x0401	; 0x800401 <power>
     4d2:	8f 93       	push	r24
     4d4:	80 91 64 06 	lds	r24, 0x0664	; 0x800664 <current+0x3>
     4d8:	8f 93       	push	r24
     4da:	80 91 63 06 	lds	r24, 0x0663	; 0x800663 <current+0x2>
     4de:	8f 93       	push	r24
     4e0:	80 91 62 06 	lds	r24, 0x0662	; 0x800662 <current+0x1>
     4e4:	8f 93       	push	r24
     4e6:	80 91 61 06 	lds	r24, 0x0661	; 0x800661 <current>
     4ea:	8f 93       	push	r24
     4ec:	80 91 f0 06 	lds	r24, 0x06F0	; 0x8006f0 <voltage_out+0x3>
     4f0:	8f 93       	push	r24
     4f2:	80 91 ef 06 	lds	r24, 0x06EF	; 0x8006ef <voltage_out+0x2>
     4f6:	8f 93       	push	r24
     4f8:	80 91 ee 06 	lds	r24, 0x06EE	; 0x8006ee <voltage_out+0x1>
     4fc:	8f 93       	push	r24
     4fe:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <voltage_out>
     502:	8f 93       	push	r24
     504:	80 91 88 06 	lds	r24, 0x0688	; 0x800688 <pot_resistance+0x3>
     508:	8f 93       	push	r24
     50a:	80 91 87 06 	lds	r24, 0x0687	; 0x800687 <pot_resistance+0x2>
     50e:	8f 93       	push	r24
     510:	80 91 86 06 	lds	r24, 0x0686	; 0x800686 <pot_resistance+0x1>
     514:	8f 93       	push	r24
     516:	80 91 85 06 	lds	r24, 0x0685	; 0x800685 <pot_resistance>
     51a:	8f 93       	push	r24
     51c:	80 91 34 07 	lds	r24, 0x0734	; 0x800734 <ref_resistance+0x3>
     520:	8f 93       	push	r24
     522:	80 91 33 07 	lds	r24, 0x0733	; 0x800733 <ref_resistance+0x2>
     526:	8f 93       	push	r24
     528:	80 91 32 07 	lds	r24, 0x0732	; 0x800732 <ref_resistance+0x1>
     52c:	8f 93       	push	r24
     52e:	80 91 31 07 	lds	r24, 0x0731	; 0x800731 <ref_resistance>
     532:	8f 93       	push	r24
     534:	82 e3       	ldi	r24, 0x32	; 50
     536:	92 e0       	ldi	r25, 0x02	; 2
     538:	9f 93       	push	r25
     53a:	8f 93       	push	r24
     53c:	8e 01       	movw	r16, r28
     53e:	0f 5f       	subi	r16, 0xFF	; 255
     540:	1f 4f       	sbci	r17, 0xFF	; 255
     542:	1f 93       	push	r17
     544:	0f 93       	push	r16
     546:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
	
	USART2_Print(dbg); // Sends the formatted string to the plotter
     54a:	c8 01       	movw	r24, r16
     54c:	fa d5       	rcall	.+3060   	; 0x1142 <USART2_Print>
}
     54e:	0f b6       	in	r0, 0x3f	; 63
     550:	f8 94       	cli
     552:	de bf       	out	0x3e, r29	; 62
     554:	0f be       	out	0x3f, r0	; 63
     556:	cd bf       	out	0x3d, r28	; 61
     558:	de 5f       	subi	r29, 0xFE	; 254
     55a:	0f b6       	in	r0, 0x3f	; 63
     55c:	f8 94       	cli
     55e:	de bf       	out	0x3e, r29	; 62
     560:	0f be       	out	0x3f, r0	; 63
     562:	cd bf       	out	0x3d, r28	; 61
     564:	df 91       	pop	r29
     566:	cf 91       	pop	r28
     568:	1f 91       	pop	r17
     56a:	0f 91       	pop	r16
     56c:	08 95       	ret

0000056e <send_to_modbus>:

void send_to_modbus(void) { // Send to Modbus
	send_modbus_response(); // Sends a response via Modbus
     56e:	b8 ce       	rjmp	.-656    	; 0x2e0 <send_modbus_response>
     570:	08 95       	ret

00000572 <application>:
}


void application(void)
{
     572:	8f 92       	push	r8
     574:	9f 92       	push	r9
     576:	af 92       	push	r10
     578:	bf 92       	push	r11
     57a:	cf 92       	push	r12
     57c:	df 92       	push	r13
     57e:	ef 92       	push	r14
     580:	ff 92       	push	r15
     582:	0f 93       	push	r16
     584:	1f 93       	push	r17
     586:	cf 93       	push	r28
     588:	df 93       	push	r29
	// 		prevState = current_state; // Update the previous state
	// 		sprintf(hex, " \n State = %d \n", current_state); // Format the output
	// 		USART0_Print(hex); // Send the output to USART
	// 	}
	
	switch (current_state)
     58a:	80 91 f6 03 	lds	r24, 0x03F6	; 0x8003f6 <current_state>
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	87 30       	cpi	r24, 0x07	; 7
     592:	91 05       	cpc	r25, r1
     594:	08 f0       	brcs	.+2      	; 0x598 <application+0x26>
     596:	ac c4       	rjmp	.+2392   	; 0xef0 <application+0x97e>
     598:	fc 01       	movw	r30, r24
     59a:	88 27       	eor	r24, r24
     59c:	ee 58       	subi	r30, 0x8E	; 142
     59e:	ff 4f       	sbci	r31, 0xFF	; 255
     5a0:	8f 4f       	sbci	r24, 0xFF	; 255
     5a2:	0c 94 97 0e 	jmp	0x1d2e	; 0x1d2e <__tablejump2__>
	{
		case ST_INIT:
		{
			USART0_Print("SEND CMD LINE\n");
     5a6:	86 e4       	ldi	r24, 0x46	; 70
     5a8:	92 e0       	ldi	r25, 0x02	; 2
     5aa:	c1 d4       	rcall	.+2434   	; 0xf2e <USART0_Print>
			USART0_Print("1. TERMINAL\n2. BLE\n3. PLOT\n4. MODBUS\n5. ALL");
     5ac:	85 e5       	ldi	r24, 0x55	; 85
     5ae:	92 e0       	ldi	r25, 0x02	; 2
     5b0:	be d4       	rcall	.+2428   	; 0xf2e <USART0_Print>
			USART1_Print("SEND CMD LINE");
     5b2:	81 e8       	ldi	r24, 0x81	; 129
     5b4:	92 e0       	ldi	r25, 0x02	; 2
     5b6:	40 d5       	rcall	.+2688   	; 0x1038 <USART1_Print>
			USART1_Print("1. TERMINAL\n2. BLE\n3. PLOT\n4. MODBUS\n5. ALL");
     5b8:	85 e5       	ldi	r24, 0x55	; 85
     5ba:	92 e0       	ldi	r25, 0x02	; 2
     5bc:	3d d5       	rcall	.+2682   	; 0x1038 <USART1_Print>
     5be:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <cmd_len>
			cmd_len = 0; // Reset command length
     5c2:	10 92 f1 03 	sts	0x03F1, r1	; 0x8003f1 <cmd_len+0x1>
     5c6:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <cmd_len+0x2>
     5ca:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <cmd_len+0x3>
     5ce:	81 e0       	ldi	r24, 0x01	; 1
			current_state = SEND_WAIT_CMD; // Move to the next state
     5d0:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <current_state>
			break;
     5d4:	8d c4       	rjmp	.+2330   	; 0xef0 <application+0x97e>
		}
		
		case SEND_WAIT_CMD:
		{
			if (USART0_RxByte(&byte) || USART1_RxByte(&byte)) {
     5d6:	8d e4       	ldi	r24, 0x4D	; 77
     5d8:	99 e0       	ldi	r25, 0x09	; 9
     5da:	ed d4       	rcall	.+2522   	; 0xfb6 <USART0_RxByte>
     5dc:	81 11       	cpse	r24, r1
     5de:	06 c0       	rjmp	.+12     	; 0x5ec <application+0x7a>
     5e0:	8d e4       	ldi	r24, 0x4D	; 77
     5e2:	99 e0       	ldi	r25, 0x09	; 9
     5e4:	35 d5       	rcall	.+2666   	; 0x1050 <USART1_RxByte>
     5e6:	88 23       	and	r24, r24
     5e8:	09 f4       	brne	.+2      	; 0x5ec <application+0x7a>
     5ea:	82 c4       	rjmp	.+2308   	; 0xef0 <application+0x97e>
				USART0_Transmit(byte); // Echo to USART0
     5ec:	80 91 4d 09 	lds	r24, 0x094D	; 0x80094d <byte>
     5f0:	97 d4       	rcall	.+2350   	; 0xf20 <USART0_Transmit>
     5f2:	80 91 4d 09 	lds	r24, 0x094D	; 0x80094d <byte>
				if (byte == '\r' || byte == '\n') {
     5f6:	90 91 4e 09 	lds	r25, 0x094E	; 0x80094e <byte+0x1>
     5fa:	8d 30       	cpi	r24, 0x0D	; 13
     5fc:	91 05       	cpc	r25, r1
     5fe:	19 f0       	breq	.+6      	; 0x606 <application+0x94>
     600:	8a 30       	cpi	r24, 0x0A	; 10
     602:	91 05       	cpc	r25, r1
     604:	e9 f4       	brne	.+58     	; 0x640 <application+0xce>
     606:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <cmd_len>
					if (cmd_len > 0) {
     60a:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <cmd_len+0x1>
     60e:	a0 91 f2 03 	lds	r26, 0x03F2	; 0x8003f2 <cmd_len+0x2>
     612:	b0 91 f3 03 	lds	r27, 0x03F3	; 0x8003f3 <cmd_len+0x3>
     616:	00 97       	sbiw	r24, 0x00	; 0
     618:	a1 05       	cpc	r26, r1
     61a:	b1 05       	cpc	r27, r1
     61c:	41 f0       	breq	.+16     	; 0x62e <application+0xbc>
     61e:	fc 01       	movw	r30, r24
						cmd[cmd_len] = '\0'; // Null-terminate the command
     620:	e1 5b       	subi	r30, 0xB1	; 177
     622:	f4 4f       	sbci	r31, 0xF4	; 244
     624:	10 82       	st	Z, r1
     626:	82 e0       	ldi	r24, 0x02	; 2
						current_state = STATE_PARSE_COMMAND; // Transition to parsing state
     628:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <current_state>
     62c:	61 c4       	rjmp	.+2242   	; 0xef0 <application+0x97e>
     62e:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <cmd_len>
					}
					else {
						cmd_len = 0; // Reset buffer length if no command
     632:	10 92 f1 03 	sts	0x03F1, r1	; 0x8003f1 <cmd_len+0x1>
     636:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <cmd_len+0x2>
     63a:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <cmd_len+0x3>
     63e:	58 c4       	rjmp	.+2224   	; 0xef0 <application+0x97e>
     640:	40 91 f0 03 	lds	r20, 0x03F0	; 0x8003f0 <cmd_len>
					}
				}
				else if (cmd_len < CMD_BUFFER_SIZE - 1) {
     644:	50 91 f1 03 	lds	r21, 0x03F1	; 0x8003f1 <cmd_len+0x1>
     648:	60 91 f2 03 	lds	r22, 0x03F2	; 0x8003f2 <cmd_len+0x2>
     64c:	70 91 f3 03 	lds	r23, 0x03F3	; 0x8003f3 <cmd_len+0x3>
     650:	4f 3f       	cpi	r20, 0xFF	; 255
     652:	23 e0       	ldi	r18, 0x03	; 3
     654:	52 07       	cpc	r21, r18
     656:	61 05       	cpc	r22, r1
     658:	71 05       	cpc	r23, r1
     65a:	08 f0       	brcs	.+2      	; 0x65e <application+0xec>
     65c:	49 c4       	rjmp	.+2194   	; 0xef0 <application+0x97e>
     65e:	8a 01       	movw	r16, r20
					cmd[cmd_len++] = byte; // Append byte to command buffer
     660:	9b 01       	movw	r18, r22
     662:	0f 5f       	subi	r16, 0xFF	; 255
     664:	1f 4f       	sbci	r17, 0xFF	; 255
     666:	2f 4f       	sbci	r18, 0xFF	; 255
     668:	3f 4f       	sbci	r19, 0xFF	; 255
     66a:	00 93 f0 03 	sts	0x03F0, r16	; 0x8003f0 <cmd_len>
     66e:	10 93 f1 03 	sts	0x03F1, r17	; 0x8003f1 <cmd_len+0x1>
     672:	20 93 f2 03 	sts	0x03F2, r18	; 0x8003f2 <cmd_len+0x2>
     676:	30 93 f3 03 	sts	0x03F3, r19	; 0x8003f3 <cmd_len+0x3>
     67a:	fa 01       	movw	r30, r20
     67c:	e1 5b       	subi	r30, 0xB1	; 177
     67e:	f4 4f       	sbci	r31, 0xF4	; 244
     680:	80 83       	st	Z, r24
     682:	36 c4       	rjmp	.+2156   	; 0xef0 <application+0x97e>
     684:	8f e4       	ldi	r24, 0x4F	; 79
			break;
		}
		
		case STATE_PARSE_COMMAND:
		{
			int parsed = sscanf(cmd, "%511s", cmdline); // Parse command
     686:	99 e0       	ldi	r25, 0x09	; 9
     688:	9f 93       	push	r25
     68a:	8f 93       	push	r24
     68c:	8f e8       	ldi	r24, 0x8F	; 143
     68e:	92 e0       	ldi	r25, 0x02	; 2
     690:	9f 93       	push	r25
     692:	8f 93       	push	r24
     694:	cf e4       	ldi	r28, 0x4F	; 79
     696:	db e0       	ldi	r29, 0x0B	; 11
     698:	df 93       	push	r29
     69a:	cf 93       	push	r28
     69c:	0e 94 63 10 	call	0x20c6	; 0x20c6 <sscanf>
     6a0:	8c 01       	movw	r16, r24
     6a2:	df 93       	push	r29
			snprintf(dbg1, sizeof(dbg1), "P = %d CMD = \"%s\" \r\n", parsed, cmd);
     6a4:	cf 93       	push	r28
     6a6:	1f 93       	push	r17
     6a8:	0f 93       	push	r16
     6aa:	85 e9       	ldi	r24, 0x95	; 149
     6ac:	92 e0       	ldi	r25, 0x02	; 2
     6ae:	9f 93       	push	r25
     6b0:	8f 93       	push	r24
     6b2:	82 e0       	ldi	r24, 0x02	; 2
     6b4:	8f 93       	push	r24
     6b6:	1f 92       	push	r1
     6b8:	8d e4       	ldi	r24, 0x4D	; 77
     6ba:	97 e0       	ldi	r25, 0x07	; 7
     6bc:	9f 93       	push	r25
     6be:	8f 93       	push	r24
     6c0:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <snprintf>
			USART0_Print(dbg1); // Print debug information
     6c4:	8d e4       	ldi	r24, 0x4D	; 77
     6c6:	97 e0       	ldi	r25, 0x07	; 7
     6c8:	32 d4       	rcall	.+2148   	; 0xf2e <USART0_Print>
     6ca:	8d b7       	in	r24, 0x3d	; 61

			for (int i = 0; cmdline[i]; i++){
     6cc:	9e b7       	in	r25, 0x3e	; 62
     6ce:	40 96       	adiw	r24, 0x10	; 16
     6d0:	0f b6       	in	r0, 0x3f	; 63
     6d2:	f8 94       	cli
     6d4:	9e bf       	out	0x3e, r25	; 62
     6d6:	0f be       	out	0x3f, r0	; 63
     6d8:	8d bf       	out	0x3d, r24	; 61
     6da:	c0 e0       	ldi	r28, 0x00	; 0
     6dc:	d0 e0       	ldi	r29, 0x00	; 0
     6de:	08 c0       	rjmp	.+16     	; 0x6f0 <application+0x17e>
     6e0:	90 e0       	ldi	r25, 0x00	; 0
				cmdline[i] = tolower(cmdline[i]); // Convert command to lowercase
     6e2:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <tolower>
     6e6:	fe 01       	movw	r30, r28
     6e8:	e1 5b       	subi	r30, 0xB1	; 177
     6ea:	f6 4f       	sbci	r31, 0xF6	; 246
     6ec:	80 83       	st	Z, r24
     6ee:	21 96       	adiw	r28, 0x01	; 1
		{
			int parsed = sscanf(cmd, "%511s", cmdline); // Parse command
			snprintf(dbg1, sizeof(dbg1), "P = %d CMD = \"%s\" \r\n", parsed, cmd);
			USART0_Print(dbg1); // Print debug information

			for (int i = 0; cmdline[i]; i++){
     6f0:	fe 01       	movw	r30, r28
     6f2:	e1 5b       	subi	r30, 0xB1	; 177
     6f4:	f6 4f       	sbci	r31, 0xF6	; 246
     6f6:	80 81       	ld	r24, Z
     6f8:	81 11       	cpse	r24, r1
     6fa:	f2 cf       	rjmp	.-28     	; 0x6e0 <application+0x16e>
     6fc:	01 30       	cpi	r16, 0x01	; 1
				cmdline[i] = tolower(cmdline[i]); // Convert command to lowercase
			}

			if (parsed == 1) {
     6fe:	11 05       	cpc	r17, r1
     700:	09 f0       	breq	.+2      	; 0x704 <application+0x192>
     702:	f6 c3       	rjmp	.+2028   	; 0xef0 <application+0x97e>
     704:	81 e0       	ldi	r24, 0x01	; 1
				valid = 1; // Command is valid
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	90 93 f5 03 	sts	0x03F5, r25	; 0x8003f5 <valid+0x1>
     70c:	80 93 f4 03 	sts	0x03F4, r24	; 0x8003f4 <valid>
				current_state = ST_READADC; // Transition to read ADC state
     710:	83 e0       	ldi	r24, 0x03	; 3
     712:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <current_state>
		}

		
		case ST_READADC:
		{
			adc_value = ReadADC(3); // Read from A3 (ADC3)
     716:	ec c3       	rjmp	.+2008   	; 0xef0 <application+0x97e>
     718:	83 e0       	ldi	r24, 0x03	; 3
     71a:	9a dd       	rcall	.-1228   	; 0x250 <ReadADC>
     71c:	bc 01       	movw	r22, r24
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	8b d6       	rcall	.+3350   	; 0x143a <__floatunsisf>
     724:	4b 01       	movw	r8, r22
     726:	5c 01       	movw	r10, r24
     728:	60 93 05 06 	sts	0x0605, r22	; 0x800605 <adc_value>
     72c:	70 93 06 06 	sts	0x0606, r23	; 0x800606 <adc_value+0x1>
     730:	80 93 07 06 	sts	0x0607, r24	; 0x800607 <adc_value+0x2>
     734:	90 93 08 06 	sts	0x0608, r25	; 0x800608 <adc_value+0x3>
			voltage_out = (adc_value * voltage_ref) / 1023.0; // Convert ADC value to voltage (in Volts)
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	40 ea       	ldi	r20, 0xA0	; 160
     73e:	50 e4       	ldi	r21, 0x40	; 64
     740:	0a d7       	rcall	.+3604   	; 0x1556 <__mulsf3>
     742:	20 e0       	ldi	r18, 0x00	; 0
     744:	30 ec       	ldi	r19, 0xC0	; 192
     746:	4f e7       	ldi	r20, 0x7F	; 127
     748:	54 e4       	ldi	r21, 0x44	; 68
     74a:	e3 d5       	rcall	.+3014   	; 0x1312 <__divsf3>
     74c:	6b 01       	movw	r12, r22
     74e:	7c 01       	movw	r14, r24
     750:	60 93 ed 06 	sts	0x06ED, r22	; 0x8006ed <voltage_out>
     754:	70 93 ee 06 	sts	0x06EE, r23	; 0x8006ee <voltage_out+0x1>
     758:	80 93 ef 06 	sts	0x06EF, r24	; 0x8006ef <voltage_out+0x2>
     75c:	90 93 f0 06 	sts	0x06F0, r25	; 0x8006f0 <voltage_out+0x3>
     760:	20 e0       	ldi	r18, 0x00	; 0
			ref_resistance = (adc_value * 100) / 1023.0; // Calculate reference resistance (in kOhm)
     762:	30 e0       	ldi	r19, 0x00	; 0
     764:	48 ec       	ldi	r20, 0xC8	; 200
     766:	52 e4       	ldi	r21, 0x42	; 66
     768:	c5 01       	movw	r24, r10
     76a:	b4 01       	movw	r22, r8
     76c:	f4 d6       	rcall	.+3560   	; 0x1556 <__mulsf3>
     76e:	20 e0       	ldi	r18, 0x00	; 0
     770:	30 ec       	ldi	r19, 0xC0	; 192
     772:	4f e7       	ldi	r20, 0x7F	; 127
     774:	54 e4       	ldi	r21, 0x44	; 68
     776:	cd d5       	rcall	.+2970   	; 0x1312 <__divsf3>
     778:	60 93 31 07 	sts	0x0731, r22	; 0x800731 <ref_resistance>
     77c:	70 93 32 07 	sts	0x0732, r23	; 0x800732 <ref_resistance+0x1>
     780:	80 93 33 07 	sts	0x0733, r24	; 0x800733 <ref_resistance+0x2>
     784:	90 93 34 07 	sts	0x0734, r25	; 0x800734 <ref_resistance+0x3>
     788:	a7 01       	movw	r20, r14
			pot_resistance = R_KNOWN * (voltage_out / (voltage_ref - voltage_out)); // Calculate potential resistance (in Ohm)
     78a:	96 01       	movw	r18, r12
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	80 ea       	ldi	r24, 0xA0	; 160
     792:	90 e4       	ldi	r25, 0x40	; 64
     794:	59 d5       	rcall	.+2738   	; 0x1248 <__subsf3>
     796:	9b 01       	movw	r18, r22
     798:	ac 01       	movw	r20, r24
     79a:	c7 01       	movw	r24, r14
     79c:	b6 01       	movw	r22, r12
     79e:	b9 d5       	rcall	.+2930   	; 0x1312 <__divsf3>
     7a0:	20 e0       	ldi	r18, 0x00	; 0
     7a2:	30 e8       	ldi	r19, 0x80	; 128
     7a4:	48 e4       	ldi	r20, 0x48	; 72
     7a6:	53 e4       	ldi	r21, 0x43	; 67
     7a8:	d6 d6       	rcall	.+3500   	; 0x1556 <__mulsf3>
     7aa:	9b 01       	movw	r18, r22
     7ac:	ac 01       	movw	r20, r24
     7ae:	60 93 85 06 	sts	0x0685, r22	; 0x800685 <pot_resistance>
     7b2:	70 93 86 06 	sts	0x0686, r23	; 0x800686 <pot_resistance+0x1>
     7b6:	80 93 87 06 	sts	0x0687, r24	; 0x800687 <pot_resistance+0x2>
     7ba:	90 93 88 06 	sts	0x0688, r25	; 0x800688 <pot_resistance+0x3>
     7be:	c7 01       	movw	r24, r14
     7c0:	b6 01       	movw	r22, r12
			current = voltage_out / pot_resistance; // Calculate current (in Amperes)
     7c2:	a7 d5       	rcall	.+2894   	; 0x1312 <__divsf3>
     7c4:	9b 01       	movw	r18, r22
     7c6:	ac 01       	movw	r20, r24
     7c8:	60 93 61 06 	sts	0x0661, r22	; 0x800661 <current>
     7cc:	70 93 62 06 	sts	0x0662, r23	; 0x800662 <current+0x1>
     7d0:	80 93 63 06 	sts	0x0663, r24	; 0x800663 <current+0x2>
     7d4:	90 93 64 06 	sts	0x0664, r25	; 0x800664 <current+0x3>
     7d8:	c7 01       	movw	r24, r14
     7da:	b6 01       	movw	r22, r12
			power = (voltage_out * current); // Calculate power (in Watts)
     7dc:	bc d6       	rcall	.+3448   	; 0x1556 <__mulsf3>
     7de:	60 93 01 04 	sts	0x0401, r22	; 0x800401 <power>
     7e2:	70 93 02 04 	sts	0x0402, r23	; 0x800402 <power+0x1>
     7e6:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <power+0x2>
     7ea:	90 93 04 04 	sts	0x0404, r25	; 0x800404 <power+0x3>
     7ee:	20 e0       	ldi	r18, 0x00	; 0
     7f0:	30 e0       	ldi	r19, 0x00	; 0
			energy += power * DELAY_SEC; // Accumulate energy (in Watt-seconds)
     7f2:	40 e0       	ldi	r20, 0x00	; 0
     7f4:	5f e3       	ldi	r21, 0x3F	; 63
     7f6:	af d6       	rcall	.+3422   	; 0x1556 <__mulsf3>
     7f8:	9b 01       	movw	r18, r22
     7fa:	ac 01       	movw	r20, r24
     7fc:	60 91 e9 06 	lds	r22, 0x06E9	; 0x8006e9 <energy>
     800:	70 91 ea 06 	lds	r23, 0x06EA	; 0x8006ea <energy+0x1>
     804:	80 91 eb 06 	lds	r24, 0x06EB	; 0x8006eb <energy+0x2>
     808:	90 91 ec 06 	lds	r25, 0x06EC	; 0x8006ec <energy+0x3>
     80c:	1e d5       	rcall	.+2620   	; 0x124a <__addsf3>
     80e:	60 93 e9 06 	sts	0x06E9, r22	; 0x8006e9 <energy>
     812:	70 93 ea 06 	sts	0x06EA, r23	; 0x8006ea <energy+0x1>
     816:	80 93 eb 06 	sts	0x06EB, r24	; 0x8006eb <energy+0x2>
     81a:	90 93 ec 06 	sts	0x06EC, r25	; 0x8006ec <energy+0x3>
     81e:	09 e8       	ldi	r16, 0x89	; 137
     820:	16 e0       	ldi	r17, 0x06	; 6
     822:	23 e0       	ldi	r18, 0x03	; 3
     824:	46 e0       	ldi	r20, 0x06	; 6
			
			// Format output strings using dtostrf for BLE-safe ASCII
			dtostrf(adc_value, 6, 3, val_buf);
     826:	c5 01       	movw	r24, r10
     828:	b4 01       	movw	r22, r8
     82a:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <dtostrf>
     82e:	e8 01       	movw	r28, r16
     830:	df 93       	push	r29
     832:	0f 93       	push	r16
     834:	8a ea       	ldi	r24, 0xAA	; 170
			sprintf(adc, "ADC = %s\r\n", val_buf);
     836:	92 e0       	ldi	r25, 0x02	; 2
     838:	9f 93       	push	r25
     83a:	8f 93       	push	r24
     83c:	85 e6       	ldi	r24, 0x65	; 101
     83e:	96 e0       	ldi	r25, 0x06	; 6
     840:	9f 93       	push	r25
     842:	8f 93       	push	r24
     844:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
     848:	60 91 ed 06 	lds	r22, 0x06ED	; 0x8006ed <voltage_out>
     84c:	70 91 ee 06 	lds	r23, 0x06EE	; 0x8006ee <voltage_out+0x1>

			dtostrf(voltage_out, 6, 3, val_buf);
     850:	80 91 ef 06 	lds	r24, 0x06EF	; 0x8006ef <voltage_out+0x2>
     854:	90 91 f0 06 	lds	r25, 0x06F0	; 0x8006f0 <voltage_out+0x3>
     858:	23 e0       	ldi	r18, 0x03	; 3
     85a:	46 e0       	ldi	r20, 0x06	; 6
     85c:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <dtostrf>
     860:	df 93       	push	r29
     862:	0f 93       	push	r16
     864:	85 eb       	ldi	r24, 0xB5	; 181
     866:	92 e0       	ldi	r25, 0x02	; 2
			sprintf(volt, "Voltage = %s V\r\n", val_buf);
     868:	9f 93       	push	r25
     86a:	8f 93       	push	r24
     86c:	81 ef       	ldi	r24, 0xF1	; 241
     86e:	96 e0       	ldi	r25, 0x06	; 6
     870:	9f 93       	push	r25
     872:	8f 93       	push	r24
     874:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
     878:	60 91 31 07 	lds	r22, 0x0731	; 0x800731 <ref_resistance>
     87c:	70 91 32 07 	lds	r23, 0x0732	; 0x800732 <ref_resistance+0x1>

			dtostrf(ref_resistance, 6, 3, val_buf);
     880:	80 91 33 07 	lds	r24, 0x0733	; 0x800733 <ref_resistance+0x2>
     884:	90 91 34 07 	lds	r25, 0x0734	; 0x800734 <ref_resistance+0x3>
     888:	23 e0       	ldi	r18, 0x03	; 3
     88a:	46 e0       	ldi	r20, 0x06	; 6
     88c:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <dtostrf>
     890:	df 93       	push	r29
     892:	0f 93       	push	r16
     894:	86 ec       	ldi	r24, 0xC6	; 198
     896:	92 e0       	ldi	r25, 0x02	; 2
			sprintf(ref_R, "Resistance Reference = %s kOhm\r\n", val_buf);
     898:	9f 93       	push	r25
     89a:	8f 93       	push	r24
     89c:	81 e1       	ldi	r24, 0x11	; 17
     89e:	96 e0       	ldi	r25, 0x06	; 6
     8a0:	9f 93       	push	r25
     8a2:	8f 93       	push	r24
     8a4:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
     8a8:	60 91 85 06 	lds	r22, 0x0685	; 0x800685 <pot_resistance>
     8ac:	70 91 86 06 	lds	r23, 0x0686	; 0x800686 <pot_resistance+0x1>

			dtostrf(pot_resistance, 6, 3, val_buf);
     8b0:	80 91 87 06 	lds	r24, 0x0687	; 0x800687 <pot_resistance+0x2>
     8b4:	90 91 88 06 	lds	r25, 0x0688	; 0x800688 <pot_resistance+0x3>
     8b8:	23 e0       	ldi	r18, 0x03	; 3
     8ba:	46 e0       	ldi	r20, 0x06	; 6
     8bc:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <dtostrf>
     8c0:	df 93       	push	r29
     8c2:	0f 93       	push	r16
     8c4:	87 ee       	ldi	r24, 0xE7	; 231
     8c6:	92 e0       	ldi	r25, 0x02	; 2
			sprintf(pot_R, "Resistance Potential = %s Ohm\r\n", val_buf);
     8c8:	9f 93       	push	r25
     8ca:	8f 93       	push	r24
     8cc:	89 e9       	ldi	r24, 0x99	; 153
     8ce:	96 e0       	ldi	r25, 0x06	; 6
     8d0:	9f 93       	push	r25
     8d2:	8f 93       	push	r24
     8d4:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
     8d8:	60 91 61 06 	lds	r22, 0x0661	; 0x800661 <current>
     8dc:	70 91 62 06 	lds	r23, 0x0662	; 0x800662 <current+0x1>

			dtostrf(current, 6, 6, val_buf);
     8e0:	80 91 63 06 	lds	r24, 0x0663	; 0x800663 <current+0x2>
     8e4:	90 91 64 06 	lds	r25, 0x0664	; 0x800664 <current+0x3>
     8e8:	26 e0       	ldi	r18, 0x06	; 6
     8ea:	46 e0       	ldi	r20, 0x06	; 6
     8ec:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <dtostrf>
     8f0:	df 93       	push	r29
     8f2:	0f 93       	push	r16
     8f4:	87 e0       	ldi	r24, 0x07	; 7
     8f6:	93 e0       	ldi	r25, 0x03	; 3
			sprintf(cur, "Current = %s A\r\n", val_buf);
     8f8:	9f 93       	push	r25
     8fa:	8f 93       	push	r24
     8fc:	89 ec       	ldi	r24, 0xC9	; 201
     8fe:	96 e0       	ldi	r25, 0x06	; 6
     900:	9f 93       	push	r25
     902:	8f 93       	push	r24
     904:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
     908:	60 91 01 04 	lds	r22, 0x0401	; 0x800401 <power>
     90c:	70 91 02 04 	lds	r23, 0x0402	; 0x800402 <power+0x1>

			dtostrf(power, 6, 6, val_buf);
     910:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <power+0x2>
     914:	90 91 04 04 	lds	r25, 0x0404	; 0x800404 <power+0x3>
     918:	26 e0       	ldi	r18, 0x06	; 6
     91a:	46 e0       	ldi	r20, 0x06	; 6
     91c:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <dtostrf>
     920:	df 93       	push	r29
     922:	0f 93       	push	r16
     924:	88 e1       	ldi	r24, 0x18	; 24
     926:	93 e0       	ldi	r25, 0x03	; 3
			sprintf(Pow, "Power = %s W\r\n", val_buf);
     928:	9f 93       	push	r25
     92a:	8f 93       	push	r24
     92c:	81 e1       	ldi	r24, 0x11	; 17
     92e:	97 e0       	ldi	r25, 0x07	; 7
     930:	9f 93       	push	r25
     932:	8f 93       	push	r24
     934:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
     938:	8d b7       	in	r24, 0x3d	; 61
     93a:	9e b7       	in	r25, 0x3e	; 62
     93c:	84 96       	adiw	r24, 0x24	; 36
     93e:	0f b6       	in	r0, 0x3f	; 63

			dtostrf(energy, 6, 6, val_buf);
     940:	f8 94       	cli
     942:	9e bf       	out	0x3e, r25	; 62
     944:	0f be       	out	0x3f, r0	; 63
     946:	8d bf       	out	0x3d, r24	; 61
     948:	60 91 e9 06 	lds	r22, 0x06E9	; 0x8006e9 <energy>
     94c:	70 91 ea 06 	lds	r23, 0x06EA	; 0x8006ea <energy+0x1>
     950:	80 91 eb 06 	lds	r24, 0x06EB	; 0x8006eb <energy+0x2>
     954:	90 91 ec 06 	lds	r25, 0x06EC	; 0x8006ec <energy+0x3>
     958:	26 e0       	ldi	r18, 0x06	; 6
     95a:	46 e0       	ldi	r20, 0x06	; 6
     95c:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <dtostrf>
     960:	df 93       	push	r29
     962:	0f 93       	push	r16
     964:	87 e2       	ldi	r24, 0x27	; 39
			sprintf(enrgy, "Energy = %s Ws\r\n", val_buf);
     966:	93 e0       	ldi	r25, 0x03	; 3
     968:	9f 93       	push	r25
     96a:	8f 93       	push	r24
     96c:	81 e4       	ldi	r24, 0x41	; 65
     96e:	96 e0       	ldi	r25, 0x06	; 6
     970:	9f 93       	push	r25
     972:	8f 93       	push	r24
     974:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
     978:	60 91 31 07 	lds	r22, 0x0731	; 0x800731 <ref_resistance>
     97c:	70 91 32 07 	lds	r23, 0x0732	; 0x800732 <ref_resistance+0x1>
			
			// Store calculated values in a data structure for further processing
			modbus_data.ref_resistance = (uint16_t)(ref_resistance);
     980:	80 91 33 07 	lds	r24, 0x0733	; 0x800733 <ref_resistance+0x2>
     984:	90 91 34 07 	lds	r25, 0x0734	; 0x800734 <ref_resistance+0x3>
     988:	2c d5       	rcall	.+2648   	; 0x13e2 <__fixunssfsi>
     98a:	c5 e3       	ldi	r28, 0x35	; 53
     98c:	d7 e0       	ldi	r29, 0x07	; 7
     98e:	79 83       	std	Y+1, r23	; 0x01
     990:	68 83       	st	Y, r22
     992:	60 91 85 06 	lds	r22, 0x0685	; 0x800685 <pot_resistance>
     996:	70 91 86 06 	lds	r23, 0x0686	; 0x800686 <pot_resistance+0x1>
			modbus_data.pot_resistance = (uint16_t)(pot_resistance);
     99a:	80 91 87 06 	lds	r24, 0x0687	; 0x800687 <pot_resistance+0x2>
     99e:	90 91 88 06 	lds	r25, 0x0688	; 0x800688 <pot_resistance+0x3>
     9a2:	1f d5       	rcall	.+2622   	; 0x13e2 <__fixunssfsi>
     9a4:	7b 83       	std	Y+3, r23	; 0x03
     9a6:	6a 83       	std	Y+2, r22	; 0x02
     9a8:	20 e0       	ldi	r18, 0x00	; 0
     9aa:	30 e0       	ldi	r19, 0x00	; 0
			modbus_data.voltage_mV = (uint16_t)(voltage_out * 100);
     9ac:	48 ec       	ldi	r20, 0xC8	; 200
     9ae:	52 e4       	ldi	r21, 0x42	; 66
     9b0:	60 91 ed 06 	lds	r22, 0x06ED	; 0x8006ed <voltage_out>
     9b4:	70 91 ee 06 	lds	r23, 0x06EE	; 0x8006ee <voltage_out+0x1>
     9b8:	80 91 ef 06 	lds	r24, 0x06EF	; 0x8006ef <voltage_out+0x2>
     9bc:	90 91 f0 06 	lds	r25, 0x06F0	; 0x8006f0 <voltage_out+0x3>
     9c0:	ca d5       	rcall	.+2964   	; 0x1556 <__mulsf3>
     9c2:	0f d5       	rcall	.+2590   	; 0x13e2 <__fixunssfsi>
     9c4:	7d 83       	std	Y+5, r23	; 0x05
     9c6:	6c 83       	std	Y+4, r22	; 0x04
     9c8:	20 e0       	ldi	r18, 0x00	; 0
     9ca:	34 e2       	ldi	r19, 0x24	; 36
			modbus_data.current_uA = (uint16_t)(current * 1000000);
     9cc:	44 e7       	ldi	r20, 0x74	; 116
     9ce:	59 e4       	ldi	r21, 0x49	; 73
     9d0:	60 91 61 06 	lds	r22, 0x0661	; 0x800661 <current>
     9d4:	70 91 62 06 	lds	r23, 0x0662	; 0x800662 <current+0x1>
     9d8:	80 91 63 06 	lds	r24, 0x0663	; 0x800663 <current+0x2>
     9dc:	90 91 64 06 	lds	r25, 0x0664	; 0x800664 <current+0x3>
     9e0:	ba d5       	rcall	.+2932   	; 0x1556 <__mulsf3>
     9e2:	ff d4       	rcall	.+2558   	; 0x13e2 <__fixunssfsi>
     9e4:	7f 83       	std	Y+7, r23	; 0x07
     9e6:	6e 83       	std	Y+6, r22	; 0x06
     9e8:	20 e0       	ldi	r18, 0x00	; 0
     9ea:	34 e2       	ldi	r19, 0x24	; 36
			modbus_data.power_uW = (uint16_t)(power * 1000000);
     9ec:	44 e7       	ldi	r20, 0x74	; 116
     9ee:	59 e4       	ldi	r21, 0x49	; 73
     9f0:	60 91 01 04 	lds	r22, 0x0401	; 0x800401 <power>
     9f4:	70 91 02 04 	lds	r23, 0x0402	; 0x800402 <power+0x1>
     9f8:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <power+0x2>
     9fc:	90 91 04 04 	lds	r25, 0x0404	; 0x800404 <power+0x3>
     a00:	aa d5       	rcall	.+2900   	; 0x1556 <__mulsf3>
     a02:	ef d4       	rcall	.+2526   	; 0x13e2 <__fixunssfsi>
     a04:	79 87       	std	Y+9, r23	; 0x09
     a06:	68 87       	std	Y+8, r22	; 0x08
     a08:	20 e0       	ldi	r18, 0x00	; 0
     a0a:	30 e0       	ldi	r19, 0x00	; 0
			modbus_data.energy_uWs = (uint16_t)(energy * 1000);
     a0c:	4a e7       	ldi	r20, 0x7A	; 122
     a0e:	54 e4       	ldi	r21, 0x44	; 68
     a10:	60 91 e9 06 	lds	r22, 0x06E9	; 0x8006e9 <energy>
     a14:	70 91 ea 06 	lds	r23, 0x06EA	; 0x8006ea <energy+0x1>
     a18:	80 91 eb 06 	lds	r24, 0x06EB	; 0x8006eb <energy+0x2>
     a1c:	90 91 ec 06 	lds	r25, 0x06EC	; 0x8006ec <energy+0x3>
     a20:	9a d5       	rcall	.+2868   	; 0x1556 <__mulsf3>
     a22:	df d4       	rcall	.+2494   	; 0x13e2 <__fixunssfsi>
     a24:	7b 87       	std	Y+11, r23	; 0x0b
     a26:	6a 87       	std	Y+10, r22	; 0x0a
     a28:	85 e0       	ldi	r24, 0x05	; 5
     a2a:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <current_state>
     a2e:	0f 90       	pop	r0
			
			current_state = SEND_2_ALL; // Transition to the next state
     a30:	0f 90       	pop	r0
     a32:	0f 90       	pop	r0
     a34:	0f 90       	pop	r0
			break;
     a36:	0f 90       	pop	r0
     a38:	0f 90       	pop	r0
     a3a:	5a c2       	rjmp	.+1204   	; 0xef0 <application+0x97e>
     a3c:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <__data_end>
     a40:	88 23       	and	r24, r24
     a42:	09 f4       	brne	.+2      	; 0xa46 <application+0x4d4>

		
		case ST_WAIT_REQUEST:
		{
			// Check if a request is ready to be processed
			if (request_ready) {
     a44:	55 c2       	rjmp	.+1194   	; 0xef0 <application+0x97e>
     a46:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <__data_end>
     a4a:	10 92 ef 03 	sts	0x03EF, r1	; 0x8003ef <rx_index>
				request_ready = 0; // Reset the request flag
     a4e:	80 91 09 06 	lds	r24, 0x0609	; 0x800609 <rx_buffer>
				rx_index = 0; // Reset the receive index
     a52:	85 30       	cpi	r24, 0x05	; 5
     a54:	09 f0       	breq	.+2      	; 0xa58 <application+0x4e6>

				// Validate the request by checking the slave ID and function code
				if (rx_buffer[0] == SLAVE_ID && rx_buffer[1] == 0x10) {
     a56:	4c c2       	rjmp	.+1176   	; 0xef0 <application+0x97e>
     a58:	80 91 0a 06 	lds	r24, 0x060A	; 0x80060a <rx_buffer+0x1>
     a5c:	80 31       	cpi	r24, 0x10	; 16
     a5e:	09 f0       	breq	.+2      	; 0xa62 <application+0x4f0>
     a60:	47 c2       	rjmp	.+1166   	; 0xef0 <application+0x97e>
     a62:	10 91 0f 06 	lds	r17, 0x060F	; 0x80060f <rx_buffer+0x6>
     a66:	89 e0       	ldi	r24, 0x09	; 9
					uint8_t byte_count = rx_buffer[6]; // Get the byte count from the request
     a68:	81 0f       	add	r24, r17
     a6a:	90 e0       	ldi	r25, 0x00	; 0
					uint8_t expected_length = 7 + byte_count + 2; // Calculate expected length
     a6c:	fc 01       	movw	r30, r24
     a6e:	e8 5f       	subi	r30, 0xF8	; 248

					// Extract the received CRC from the buffer
					uint16_t crc_received = (rx_buffer[expected_length - 1] << 8) | rx_buffer[expected_length - 2];
     a70:	f9 4f       	sbci	r31, 0xF9	; 249
     a72:	c0 81       	ld	r28, Z
     a74:	d0 e0       	ldi	r29, 0x00	; 0
     a76:	dc 2f       	mov	r29, r28
     a78:	cc 27       	eor	r28, r28
     a7a:	fc 01       	movw	r30, r24
     a7c:	e9 5f       	subi	r30, 0xF9	; 249
     a7e:	f9 4f       	sbci	r31, 0xF9	; 249
     a80:	80 81       	ld	r24, Z
     a82:	c8 2b       	or	r28, r24
     a84:	67 e0       	ldi	r22, 0x07	; 7
     a86:	61 0f       	add	r22, r17
     a88:	89 e0       	ldi	r24, 0x09	; 9
					// Calculate the CRC for validation
					uint16_t crc_calc = modbus_crc16((uint8_t *)rx_buffer, expected_length - 2);
     a8a:	96 e0       	ldi	r25, 0x06	; 6
     a8c:	0b dc       	rcall	.-2026   	; 0x2a4 <modbus_crc16>
     a8e:	c8 17       	cp	r28, r24
     a90:	d9 07       	cpc	r29, r25
     a92:	09 f0       	breq	.+2      	; 0xa96 <application+0x524>
     a94:	2d c2       	rjmp	.+1114   	; 0xef0 <application+0x97e>

					// Compare received CRC with calculated CRC
					if (crc_received == crc_calc) {
     a96:	1d c0       	rjmp	.+58     	; 0xad2 <application+0x560>
     a98:	84 2f       	mov	r24, r20
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	fc 01       	movw	r30, r24
     a9e:	ee 0f       	add	r30, r30
						// If valid, process the data
						for (uint8_t i = 0; i < byte_count / 2; i++) {
							modbus_data.registers[i] = (rx_buffer[7 + i * 2] << 8) | rx_buffer[8 + i * 2];
     aa0:	ff 1f       	adc	r31, r31
     aa2:	e0 5f       	subi	r30, 0xF0	; 240
     aa4:	f9 4f       	sbci	r31, 0xF9	; 249
     aa6:	20 81       	ld	r18, Z
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	32 2f       	mov	r19, r18
     aac:	22 27       	eor	r18, r18
     aae:	fc 01       	movw	r30, r24
     ab0:	34 96       	adiw	r30, 0x04	; 4
     ab2:	ee 0f       	add	r30, r30
     ab4:	ff 1f       	adc	r31, r31
     ab6:	e7 5f       	subi	r30, 0xF7	; 247
     ab8:	f9 4f       	sbci	r31, 0xF9	; 249
     aba:	50 81       	ld	r21, Z
     abc:	25 2b       	or	r18, r21
     abe:	fc 01       	movw	r30, r24
     ac0:	36 96       	adiw	r30, 0x06	; 6
     ac2:	ee 0f       	add	r30, r30
     ac4:	ff 1f       	adc	r31, r31
     ac6:	eb 5c       	subi	r30, 0xCB	; 203
     ac8:	f8 4f       	sbci	r31, 0xF8	; 248
     aca:	31 83       	std	Z+1, r19	; 0x01
     acc:	20 83       	st	Z, r18
     ace:	4f 5f       	subi	r20, 0xFF	; 255
     ad0:	01 c0       	rjmp	.+2      	; 0xad4 <application+0x562>
					uint16_t crc_calc = modbus_crc16((uint8_t *)rx_buffer, expected_length - 2);

					// Compare received CRC with calculated CRC
					if (crc_received == crc_calc) {
						// If valid, process the data
						for (uint8_t i = 0; i < byte_count / 2; i++) {
     ad2:	40 e0       	ldi	r20, 0x00	; 0
     ad4:	81 2f       	mov	r24, r17
     ad6:	86 95       	lsr	r24
     ad8:	48 17       	cp	r20, r24
     ada:	f0 f2       	brcs	.-68     	; 0xa98 <application+0x526>
     adc:	85 e0       	ldi	r24, 0x05	; 5
     ade:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <current_state>
							modbus_data.registers[i] = (rx_buffer[7 + i * 2] << 8) | rx_buffer[8 + i * 2];
						}
						current_state = SEND_2_ALL; // Transition to the next state
     ae2:	06 c2       	rjmp	.+1036   	; 0xef0 <application+0x97e>
     ae4:	68 e3       	ldi	r22, 0x38	; 56
			break;
		}
		
		case SEND_2_ALL:
		{
			if (strcmp(cmdline, "terminal") == 0)  // bitwise check
     ae6:	73 e0       	ldi	r23, 0x03	; 3
     ae8:	8f e4       	ldi	r24, 0x4F	; 79
     aea:	99 e0       	ldi	r25, 0x09	; 9
     aec:	0e 94 a9 0f 	call	0x1f52	; 0x1f52 <strcmp>
     af0:	89 2b       	or	r24, r25
     af2:	11 f4       	brne	.+4      	; 0xaf8 <application+0x586>
			{
				send_to_terminal();
     af4:	48 dc       	rcall	.-1904   	; 0x386 <send_to_terminal>
     af6:	e9 c1       	rjmp	.+978    	; 0xeca <application+0x958>
     af8:	61 e4       	ldi	r22, 0x41	; 65
			}

			else if (strcmp(cmdline, "ble") == 0)
     afa:	73 e0       	ldi	r23, 0x03	; 3
     afc:	8f e4       	ldi	r24, 0x4F	; 79
     afe:	99 e0       	ldi	r25, 0x09	; 9
     b00:	0e 94 a9 0f 	call	0x1f52	; 0x1f52 <strcmp>
     b04:	89 2b       	or	r24, r25
     b06:	11 f4       	brne	.+4      	; 0xb0c <application+0x59a>
     b08:	60 dc       	rcall	.-1856   	; 0x3ca <send_to_ble>
			{
				send_to_ble();
     b0a:	df c1       	rjmp	.+958    	; 0xeca <application+0x958>
     b0c:	65 e4       	ldi	r22, 0x45	; 69
			}

			else if (strcmp(cmdline,"plot") ==0)
     b0e:	73 e0       	ldi	r23, 0x03	; 3
     b10:	8f e4       	ldi	r24, 0x4F	; 79
     b12:	99 e0       	ldi	r25, 0x09	; 9
     b14:	0e 94 a9 0f 	call	0x1f52	; 0x1f52 <strcmp>
     b18:	89 2b       	or	r24, r25
     b1a:	11 f4       	brne	.+4      	; 0xb20 <application+0x5ae>
			{
				send_to_plotter();
     b1c:	b7 dc       	rcall	.-1682   	; 0x48c <send_to_plotter>
     b1e:	d5 c1       	rjmp	.+938    	; 0xeca <application+0x958>
     b20:	6a e4       	ldi	r22, 0x4A	; 74
			}

			else if (strcmp(cmdline, "modbus") == 0)
     b22:	73 e0       	ldi	r23, 0x03	; 3
     b24:	8f e4       	ldi	r24, 0x4F	; 79
     b26:	99 e0       	ldi	r25, 0x09	; 9
     b28:	0e 94 a9 0f 	call	0x1f52	; 0x1f52 <strcmp>
     b2c:	89 2b       	or	r24, r25
     b2e:	11 f4       	brne	.+4      	; 0xb34 <application+0x5c2>
     b30:	1e dd       	rcall	.-1476   	; 0x56e <send_to_modbus>
			{
				send_to_modbus();
     b32:	cb c1       	rjmp	.+918    	; 0xeca <application+0x958>
     b34:	61 e5       	ldi	r22, 0x51	; 81
     b36:	73 e0       	ldi	r23, 0x03	; 3
			}
			
			else if (strcmp(cmdline, "all") == 0)
     b38:	8f e4       	ldi	r24, 0x4F	; 79
     b3a:	99 e0       	ldi	r25, 0x09	; 9
     b3c:	0e 94 a9 0f 	call	0x1f52	; 0x1f52 <strcmp>
     b40:	89 2b       	or	r24, r25
     b42:	09 f4       	brne	.+2      	; 0xb46 <application+0x5d4>
     b44:	aa c1       	rjmp	.+852    	; 0xe9a <application+0x928>
     b46:	b3 c1       	rjmp	.+870    	; 0xeae <application+0x93c>
     b48:	83 e0       	ldi	r24, 0x03	; 3
			{
				int count = 0;
				while (count < 30) // or any number of cycles you want
				{
					// ?? Read and process new ADC data
					adc_value = ReadADC(3);
     b4a:	82 db       	rcall	.-2300   	; 0x250 <ReadADC>
     b4c:	bc 01       	movw	r22, r24
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	73 d4       	rcall	.+2278   	; 0x143a <__floatunsisf>
     b54:	c6 2f       	mov	r28, r22
     b56:	d7 2f       	mov	r29, r23
     b58:	b8 2e       	mov	r11, r24
     b5a:	a9 2e       	mov	r10, r25
     b5c:	86 2f       	mov	r24, r22
     b5e:	9d 2f       	mov	r25, r29
     b60:	ab 2d       	mov	r26, r11
     b62:	ba 2d       	mov	r27, r10
     b64:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <adc_value>
     b68:	90 93 06 06 	sts	0x0606, r25	; 0x800606 <adc_value+0x1>
     b6c:	a0 93 07 06 	sts	0x0607, r26	; 0x800607 <adc_value+0x2>
     b70:	b0 93 08 06 	sts	0x0608, r27	; 0x800608 <adc_value+0x3>
     b74:	20 e0       	ldi	r18, 0x00	; 0
     b76:	30 e0       	ldi	r19, 0x00	; 0
					voltage_out = (adc_value * voltage_ref) / 1023.0;
     b78:	40 ea       	ldi	r20, 0xA0	; 160
     b7a:	50 e4       	ldi	r21, 0x40	; 64
     b7c:	6c 2f       	mov	r22, r28
     b7e:	7d 2f       	mov	r23, r29
     b80:	8b 2d       	mov	r24, r11
     b82:	9a 2d       	mov	r25, r10
     b84:	e8 d4       	rcall	.+2512   	; 0x1556 <__mulsf3>
     b86:	20 e0       	ldi	r18, 0x00	; 0
     b88:	30 ec       	ldi	r19, 0xC0	; 192
     b8a:	4f e7       	ldi	r20, 0x7F	; 127
     b8c:	54 e4       	ldi	r21, 0x44	; 68
     b8e:	c1 d3       	rcall	.+1922   	; 0x1312 <__divsf3>
     b90:	6b 01       	movw	r12, r22
     b92:	7c 01       	movw	r14, r24
     b94:	60 93 ed 06 	sts	0x06ED, r22	; 0x8006ed <voltage_out>
     b98:	70 93 ee 06 	sts	0x06EE, r23	; 0x8006ee <voltage_out+0x1>
     b9c:	80 93 ef 06 	sts	0x06EF, r24	; 0x8006ef <voltage_out+0x2>
     ba0:	90 93 f0 06 	sts	0x06F0, r25	; 0x8006f0 <voltage_out+0x3>
     ba4:	20 e0       	ldi	r18, 0x00	; 0
     ba6:	30 e0       	ldi	r19, 0x00	; 0
					ref_resistance = (adc_value * 100) / 1023.0;
     ba8:	48 ec       	ldi	r20, 0xC8	; 200
     baa:	52 e4       	ldi	r21, 0x42	; 66
     bac:	6c 2f       	mov	r22, r28
     bae:	7d 2f       	mov	r23, r29
     bb0:	8b 2d       	mov	r24, r11
     bb2:	9a 2d       	mov	r25, r10
     bb4:	d0 d4       	rcall	.+2464   	; 0x1556 <__mulsf3>
     bb6:	20 e0       	ldi	r18, 0x00	; 0
     bb8:	30 ec       	ldi	r19, 0xC0	; 192
     bba:	4f e7       	ldi	r20, 0x7F	; 127
     bbc:	54 e4       	ldi	r21, 0x44	; 68
     bbe:	a9 d3       	rcall	.+1874   	; 0x1312 <__divsf3>
     bc0:	60 93 31 07 	sts	0x0731, r22	; 0x800731 <ref_resistance>
     bc4:	70 93 32 07 	sts	0x0732, r23	; 0x800732 <ref_resistance+0x1>
     bc8:	80 93 33 07 	sts	0x0733, r24	; 0x800733 <ref_resistance+0x2>
     bcc:	90 93 34 07 	sts	0x0734, r25	; 0x800734 <ref_resistance+0x3>
     bd0:	a7 01       	movw	r20, r14
     bd2:	96 01       	movw	r18, r12
     bd4:	60 e0       	ldi	r22, 0x00	; 0
					pot_resistance = R_KNOWN * (voltage_out / (voltage_ref - voltage_out));
     bd6:	70 e0       	ldi	r23, 0x00	; 0
     bd8:	80 ea       	ldi	r24, 0xA0	; 160
     bda:	90 e4       	ldi	r25, 0x40	; 64
     bdc:	35 d3       	rcall	.+1642   	; 0x1248 <__subsf3>
     bde:	9b 01       	movw	r18, r22
     be0:	ac 01       	movw	r20, r24
     be2:	c7 01       	movw	r24, r14
     be4:	b6 01       	movw	r22, r12
     be6:	95 d3       	rcall	.+1834   	; 0x1312 <__divsf3>
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	30 e8       	ldi	r19, 0x80	; 128
     bec:	48 e4       	ldi	r20, 0x48	; 72
     bee:	53 e4       	ldi	r21, 0x43	; 67
     bf0:	b2 d4       	rcall	.+2404   	; 0x1556 <__mulsf3>
     bf2:	9b 01       	movw	r18, r22
     bf4:	ac 01       	movw	r20, r24
     bf6:	60 93 85 06 	sts	0x0685, r22	; 0x800685 <pot_resistance>
     bfa:	70 93 86 06 	sts	0x0686, r23	; 0x800686 <pot_resistance+0x1>
     bfe:	80 93 87 06 	sts	0x0687, r24	; 0x800687 <pot_resistance+0x2>
     c02:	90 93 88 06 	sts	0x0688, r25	; 0x800688 <pot_resistance+0x3>
     c06:	c7 01       	movw	r24, r14
     c08:	b6 01       	movw	r22, r12
     c0a:	83 d3       	rcall	.+1798   	; 0x1312 <__divsf3>
					current = voltage_out / pot_resistance;
     c0c:	9b 01       	movw	r18, r22
     c0e:	ac 01       	movw	r20, r24
     c10:	60 93 61 06 	sts	0x0661, r22	; 0x800661 <current>
     c14:	70 93 62 06 	sts	0x0662, r23	; 0x800662 <current+0x1>
     c18:	80 93 63 06 	sts	0x0663, r24	; 0x800663 <current+0x2>
     c1c:	90 93 64 06 	sts	0x0664, r25	; 0x800664 <current+0x3>
     c20:	c7 01       	movw	r24, r14
     c22:	b6 01       	movw	r22, r12
     c24:	98 d4       	rcall	.+2352   	; 0x1556 <__mulsf3>
     c26:	60 93 01 04 	sts	0x0401, r22	; 0x800401 <power>
					power = voltage_out * current;
     c2a:	70 93 02 04 	sts	0x0402, r23	; 0x800402 <power+0x1>
     c2e:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <power+0x2>
     c32:	90 93 04 04 	sts	0x0404, r25	; 0x800404 <power+0x3>
     c36:	20 e0       	ldi	r18, 0x00	; 0
     c38:	30 e0       	ldi	r19, 0x00	; 0
     c3a:	40 e0       	ldi	r20, 0x00	; 0
     c3c:	5f e3       	ldi	r21, 0x3F	; 63
     c3e:	8b d4       	rcall	.+2326   	; 0x1556 <__mulsf3>
					energy += power * DELAY_SEC;
     c40:	9b 01       	movw	r18, r22
     c42:	ac 01       	movw	r20, r24
     c44:	60 91 e9 06 	lds	r22, 0x06E9	; 0x8006e9 <energy>
     c48:	70 91 ea 06 	lds	r23, 0x06EA	; 0x8006ea <energy+0x1>
     c4c:	80 91 eb 06 	lds	r24, 0x06EB	; 0x8006eb <energy+0x2>
     c50:	90 91 ec 06 	lds	r25, 0x06EC	; 0x8006ec <energy+0x3>
     c54:	fa d2       	rcall	.+1524   	; 0x124a <__addsf3>
     c56:	60 93 e9 06 	sts	0x06E9, r22	; 0x8006e9 <energy>
     c5a:	70 93 ea 06 	sts	0x06EA, r23	; 0x8006ea <energy+0x1>
     c5e:	80 93 eb 06 	sts	0x06EB, r24	; 0x8006eb <energy+0x2>
     c62:	90 93 ec 06 	sts	0x06EC, r25	; 0x8006ec <energy+0x3>
     c66:	af 92       	push	r10
     c68:	bf 92       	push	r11
     c6a:	df 93       	push	r29
     c6c:	cf 93       	push	r28
     c6e:	85 e5       	ldi	r24, 0x55	; 85
     c70:	93 e0       	ldi	r25, 0x03	; 3
     c72:	9f 93       	push	r25

					// ?? Format updated values into strings
					snprintf(adc, sizeof(adc), "Adc = %f \r\n", adc_value);
     c74:	8f 93       	push	r24
     c76:	1f 92       	push	r1
     c78:	c0 e2       	ldi	r28, 0x20	; 32
     c7a:	cf 93       	push	r28
     c7c:	85 e6       	ldi	r24, 0x65	; 101
     c7e:	96 e0       	ldi	r25, 0x06	; 6
     c80:	9f 93       	push	r25
     c82:	8f 93       	push	r24
     c84:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <snprintf>
     c88:	80 91 f0 06 	lds	r24, 0x06F0	; 0x8006f0 <voltage_out+0x3>
     c8c:	8f 93       	push	r24
     c8e:	80 91 ef 06 	lds	r24, 0x06EF	; 0x8006ef <voltage_out+0x2>
     c92:	8f 93       	push	r24
     c94:	80 91 ee 06 	lds	r24, 0x06EE	; 0x8006ee <voltage_out+0x1>
					snprintf(volt, sizeof(volt), "Voltage = %f V\r\n", voltage_out);
     c98:	8f 93       	push	r24
     c9a:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <voltage_out>
     c9e:	8f 93       	push	r24
     ca0:	81 e6       	ldi	r24, 0x61	; 97
     ca2:	93 e0       	ldi	r25, 0x03	; 3
     ca4:	9f 93       	push	r25
     ca6:	8f 93       	push	r24
     ca8:	1f 92       	push	r1
     caa:	cf 93       	push	r28
     cac:	81 ef       	ldi	r24, 0xF1	; 241
     cae:	96 e0       	ldi	r25, 0x06	; 6
     cb0:	9f 93       	push	r25
     cb2:	8f 93       	push	r24
     cb4:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <snprintf>
     cb8:	80 91 34 07 	lds	r24, 0x0734	; 0x800734 <ref_resistance+0x3>
     cbc:	8f 93       	push	r24
     cbe:	80 91 33 07 	lds	r24, 0x0733	; 0x800733 <ref_resistance+0x2>
     cc2:	8f 93       	push	r24
     cc4:	80 91 32 07 	lds	r24, 0x0732	; 0x800732 <ref_resistance+0x1>
					snprintf(ref_R, sizeof(ref_R), "Resistance Reference = %f kOhm\r\n", ref_resistance);
     cc8:	8f 93       	push	r24
     cca:	80 91 31 07 	lds	r24, 0x0731	; 0x800731 <ref_resistance>
     cce:	8f 93       	push	r24
     cd0:	82 e7       	ldi	r24, 0x72	; 114
     cd2:	93 e0       	ldi	r25, 0x03	; 3
     cd4:	9f 93       	push	r25
     cd6:	8f 93       	push	r24
     cd8:	1f 92       	push	r1
     cda:	d0 e3       	ldi	r29, 0x30	; 48
     cdc:	df 93       	push	r29
     cde:	81 e1       	ldi	r24, 0x11	; 17
     ce0:	96 e0       	ldi	r25, 0x06	; 6
     ce2:	9f 93       	push	r25
     ce4:	8f 93       	push	r24
     ce6:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <snprintf>
     cea:	80 91 88 06 	lds	r24, 0x0688	; 0x800688 <pot_resistance+0x3>
     cee:	8f 93       	push	r24
     cf0:	80 91 87 06 	lds	r24, 0x0687	; 0x800687 <pot_resistance+0x2>
     cf4:	8f 93       	push	r24
     cf6:	80 91 86 06 	lds	r24, 0x0686	; 0x800686 <pot_resistance+0x1>
					snprintf(pot_R, sizeof(pot_R), "Resistance Potential = %f Ohm\r\n", pot_resistance);
     cfa:	8f 93       	push	r24
     cfc:	80 91 85 06 	lds	r24, 0x0685	; 0x800685 <pot_resistance>
     d00:	8f 93       	push	r24
     d02:	83 e9       	ldi	r24, 0x93	; 147
     d04:	93 e0       	ldi	r25, 0x03	; 3
     d06:	9f 93       	push	r25
     d08:	8f 93       	push	r24
     d0a:	1f 92       	push	r1
     d0c:	df 93       	push	r29
     d0e:	89 e9       	ldi	r24, 0x99	; 153
     d10:	96 e0       	ldi	r25, 0x06	; 6
     d12:	9f 93       	push	r25
     d14:	8f 93       	push	r24
     d16:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <snprintf>
     d1a:	8d b7       	in	r24, 0x3d	; 61
     d1c:	9e b7       	in	r25, 0x3e	; 62
     d1e:	88 96       	adiw	r24, 0x28	; 40
     d20:	0f b6       	in	r0, 0x3f	; 63
     d22:	f8 94       	cli
     d24:	9e bf       	out	0x3e, r25	; 62
     d26:	0f be       	out	0x3f, r0	; 63
					snprintf(cur, sizeof(cur), "Current = %f A\r\n", current);
     d28:	8d bf       	out	0x3d, r24	; 61
     d2a:	80 91 64 06 	lds	r24, 0x0664	; 0x800664 <current+0x3>
     d2e:	8f 93       	push	r24
     d30:	80 91 63 06 	lds	r24, 0x0663	; 0x800663 <current+0x2>
     d34:	8f 93       	push	r24
     d36:	80 91 62 06 	lds	r24, 0x0662	; 0x800662 <current+0x1>
     d3a:	8f 93       	push	r24
     d3c:	80 91 61 06 	lds	r24, 0x0661	; 0x800661 <current>
     d40:	8f 93       	push	r24
     d42:	83 eb       	ldi	r24, 0xB3	; 179
     d44:	93 e0       	ldi	r25, 0x03	; 3
     d46:	9f 93       	push	r25
     d48:	8f 93       	push	r24
     d4a:	1f 92       	push	r1
     d4c:	cf 93       	push	r28
     d4e:	89 ec       	ldi	r24, 0xC9	; 201
     d50:	96 e0       	ldi	r25, 0x06	; 6
     d52:	9f 93       	push	r25
     d54:	8f 93       	push	r24
     d56:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <snprintf>
     d5a:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <power+0x3>
     d5e:	8f 93       	push	r24
     d60:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <power+0x2>
     d64:	8f 93       	push	r24
     d66:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <power+0x1>
					snprintf(Pow, sizeof(Pow), "Power = %f W\r\n", power);
     d6a:	8f 93       	push	r24
     d6c:	80 91 01 04 	lds	r24, 0x0401	; 0x800401 <power>
     d70:	8f 93       	push	r24
     d72:	84 ec       	ldi	r24, 0xC4	; 196
     d74:	93 e0       	ldi	r25, 0x03	; 3
     d76:	9f 93       	push	r25
     d78:	8f 93       	push	r24
     d7a:	1f 92       	push	r1
     d7c:	cf 93       	push	r28
     d7e:	81 e1       	ldi	r24, 0x11	; 17
     d80:	97 e0       	ldi	r25, 0x07	; 7
     d82:	9f 93       	push	r25
     d84:	8f 93       	push	r24
     d86:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <snprintf>
     d8a:	80 91 ec 06 	lds	r24, 0x06EC	; 0x8006ec <energy+0x3>
     d8e:	8f 93       	push	r24
     d90:	80 91 eb 06 	lds	r24, 0x06EB	; 0x8006eb <energy+0x2>
					snprintf(enrgy, sizeof(enrgy), "Energy = %f Ws\r\n", energy);
     d94:	8f 93       	push	r24
     d96:	80 91 ea 06 	lds	r24, 0x06EA	; 0x8006ea <energy+0x1>
     d9a:	8f 93       	push	r24
     d9c:	80 91 e9 06 	lds	r24, 0x06E9	; 0x8006e9 <energy>
     da0:	8f 93       	push	r24
     da2:	83 ed       	ldi	r24, 0xD3	; 211
     da4:	93 e0       	ldi	r25, 0x03	; 3
     da6:	9f 93       	push	r25
     da8:	8f 93       	push	r24
     daa:	1f 92       	push	r1
     dac:	cf 93       	push	r28
     dae:	81 e4       	ldi	r24, 0x41	; 65
     db0:	96 e0       	ldi	r25, 0x06	; 6
     db2:	9f 93       	push	r25
     db4:	8f 93       	push	r24
     db6:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <snprintf>
     dba:	60 91 31 07 	lds	r22, 0x0731	; 0x800731 <ref_resistance>
     dbe:	70 91 32 07 	lds	r23, 0x0732	; 0x800732 <ref_resistance+0x1>

					// ?? Update MODBUS structure
					modbus_data.ref_resistance = (uint16_t)(ref_resistance);
     dc2:	80 91 33 07 	lds	r24, 0x0733	; 0x800733 <ref_resistance+0x2>
     dc6:	90 91 34 07 	lds	r25, 0x0734	; 0x800734 <ref_resistance+0x3>
     dca:	0b d3       	rcall	.+1558   	; 0x13e2 <__fixunssfsi>
     dcc:	c5 e3       	ldi	r28, 0x35	; 53
     dce:	d7 e0       	ldi	r29, 0x07	; 7
     dd0:	79 83       	std	Y+1, r23	; 0x01
     dd2:	68 83       	st	Y, r22
     dd4:	60 91 85 06 	lds	r22, 0x0685	; 0x800685 <pot_resistance>
					modbus_data.pot_resistance = (uint16_t)(pot_resistance);
     dd8:	70 91 86 06 	lds	r23, 0x0686	; 0x800686 <pot_resistance+0x1>
     ddc:	80 91 87 06 	lds	r24, 0x0687	; 0x800687 <pot_resistance+0x2>
     de0:	90 91 88 06 	lds	r25, 0x0688	; 0x800688 <pot_resistance+0x3>
     de4:	fe d2       	rcall	.+1532   	; 0x13e2 <__fixunssfsi>
     de6:	7b 83       	std	Y+3, r23	; 0x03
     de8:	6a 83       	std	Y+2, r22	; 0x02
     dea:	20 e0       	ldi	r18, 0x00	; 0
					modbus_data.voltage_mV = (uint16_t)(voltage_out * 100);
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	48 ec       	ldi	r20, 0xC8	; 200
     df0:	52 e4       	ldi	r21, 0x42	; 66
     df2:	60 91 ed 06 	lds	r22, 0x06ED	; 0x8006ed <voltage_out>
     df6:	70 91 ee 06 	lds	r23, 0x06EE	; 0x8006ee <voltage_out+0x1>
     dfa:	80 91 ef 06 	lds	r24, 0x06EF	; 0x8006ef <voltage_out+0x2>
     dfe:	90 91 f0 06 	lds	r25, 0x06F0	; 0x8006f0 <voltage_out+0x3>
     e02:	a9 d3       	rcall	.+1874   	; 0x1556 <__mulsf3>
     e04:	ee d2       	rcall	.+1500   	; 0x13e2 <__fixunssfsi>
     e06:	7d 83       	std	Y+5, r23	; 0x05
					modbus_data.current_uA = (uint16_t)(current * 1000000);
     e08:	6c 83       	std	Y+4, r22	; 0x04
     e0a:	20 e0       	ldi	r18, 0x00	; 0
     e0c:	34 e2       	ldi	r19, 0x24	; 36
     e0e:	44 e7       	ldi	r20, 0x74	; 116
     e10:	59 e4       	ldi	r21, 0x49	; 73
     e12:	60 91 61 06 	lds	r22, 0x0661	; 0x800661 <current>
     e16:	70 91 62 06 	lds	r23, 0x0662	; 0x800662 <current+0x1>
     e1a:	80 91 63 06 	lds	r24, 0x0663	; 0x800663 <current+0x2>
     e1e:	90 91 64 06 	lds	r25, 0x0664	; 0x800664 <current+0x3>
     e22:	99 d3       	rcall	.+1842   	; 0x1556 <__mulsf3>
     e24:	de d2       	rcall	.+1468   	; 0x13e2 <__fixunssfsi>
     e26:	7f 83       	std	Y+7, r23	; 0x07
     e28:	6e 83       	std	Y+6, r22	; 0x06
     e2a:	20 e0       	ldi	r18, 0x00	; 0
					modbus_data.power_uW = (uint16_t)(power * 1000000);
     e2c:	34 e2       	ldi	r19, 0x24	; 36
     e2e:	44 e7       	ldi	r20, 0x74	; 116
     e30:	59 e4       	ldi	r21, 0x49	; 73
     e32:	60 91 01 04 	lds	r22, 0x0401	; 0x800401 <power>
     e36:	70 91 02 04 	lds	r23, 0x0402	; 0x800402 <power+0x1>
     e3a:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <power+0x2>
     e3e:	90 91 04 04 	lds	r25, 0x0404	; 0x800404 <power+0x3>
     e42:	89 d3       	rcall	.+1810   	; 0x1556 <__mulsf3>
     e44:	ce d2       	rcall	.+1436   	; 0x13e2 <__fixunssfsi>
     e46:	79 87       	std	Y+9, r23	; 0x09
     e48:	68 87       	std	Y+8, r22	; 0x08
     e4a:	20 e0       	ldi	r18, 0x00	; 0
     e4c:	30 e0       	ldi	r19, 0x00	; 0
					modbus_data.energy_uWs = (uint16_t)(energy * 1000);
     e4e:	4a e7       	ldi	r20, 0x7A	; 122
     e50:	54 e4       	ldi	r21, 0x44	; 68
     e52:	60 91 e9 06 	lds	r22, 0x06E9	; 0x8006e9 <energy>
     e56:	70 91 ea 06 	lds	r23, 0x06EA	; 0x8006ea <energy+0x1>
     e5a:	80 91 eb 06 	lds	r24, 0x06EB	; 0x8006eb <energy+0x2>
     e5e:	90 91 ec 06 	lds	r25, 0x06EC	; 0x8006ec <energy+0x3>
     e62:	79 d3       	rcall	.+1778   	; 0x1556 <__mulsf3>
     e64:	be d2       	rcall	.+1404   	; 0x13e2 <__fixunssfsi>
     e66:	7b 87       	std	Y+11, r23	; 0x0b
     e68:	6a 87       	std	Y+10, r22	; 0x0a
     e6a:	8d da       	rcall	.-2790   	; 0x386 <send_to_terminal>
     e6c:	80 db       	rcall	.-2304   	; 0x56e <send_to_modbus>
     e6e:	ad da       	rcall	.-2726   	; 0x3ca <send_to_ble>

					// ?? Send updated values
					send_to_terminal();
     e70:	0d db       	rcall	.-2534   	; 0x48c <send_to_plotter>
     e72:	9f ef       	ldi	r25, 0xFF	; 255
					send_to_modbus();
     e74:	21 ee       	ldi	r18, 0xE1	; 225
     e76:	84 e0       	ldi	r24, 0x04	; 4
					send_to_ble();
     e78:	91 50       	subi	r25, 0x01	; 1
     e7a:	20 40       	sbci	r18, 0x00	; 0
					send_to_plotter();
     e7c:	80 40       	sbci	r24, 0x00	; 0
     e7e:	e1 f7       	brne	.-8      	; 0xe78 <application+0x906>
     e80:	00 c0       	rjmp	.+0      	; 0xe82 <application+0x910>
     e82:	00 00       	nop
     e84:	0f 5f       	subi	r16, 0xFF	; 255
     e86:	1f 4f       	sbci	r17, 0xFF	; 255
     e88:	8d b7       	in	r24, 0x3d	; 61
     e8a:	9e b7       	in	r25, 0x3e	; 62
     e8c:	4e 96       	adiw	r24, 0x1e	; 30
     e8e:	0f b6       	in	r0, 0x3f	; 63
     e90:	f8 94       	cli

					_delay_ms(100);  // Wait before next round
					count++;
     e92:	9e bf       	out	0x3e, r25	; 62
     e94:	0f be       	out	0x3f, r0	; 63
     e96:	8d bf       	out	0x3d, r24	; 61
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <application+0x92c>
     e9a:	00 e0       	ldi	r16, 0x00	; 0
     e9c:	10 e0       	ldi	r17, 0x00	; 0
     e9e:	0e 31       	cpi	r16, 0x1E	; 30
     ea0:	11 05       	cpc	r17, r1
     ea2:	0c f4       	brge	.+2      	; 0xea6 <application+0x934>
     ea4:	51 ce       	rjmp	.-862    	; 0xb48 <application+0x5d6>
     ea6:	86 e0       	ldi	r24, 0x06	; 6
     ea8:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <current_state>
			}
			
			else if (strcmp(cmdline, "all") == 0)
			{
				int count = 0;
				while (count < 30) // or any number of cycles you want
     eac:	21 c0       	rjmp	.+66     	; 0xef0 <application+0x97e>
     eae:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <valid+0x1>
     eb2:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <valid>
					send_to_plotter();

					_delay_ms(100);  // Wait before next round
					count++;
				}
				current_state = ST_RESET; // Reset at the end of loop
     eb6:	84 ee       	ldi	r24, 0xE4	; 228
     eb8:	93 e0       	ldi	r25, 0x03	; 3
				break;
     eba:	39 d0       	rcall	.+114    	; 0xf2e <USART0_Print>
			}
			
			else
			{
				valid = 0;
     ebc:	84 ee       	ldi	r24, 0xE4	; 228
     ebe:	93 e0       	ldi	r25, 0x03	; 3
     ec0:	bb d0       	rcall	.+374    	; 0x1038 <USART1_Print>
     ec2:	86 e0       	ldi	r24, 0x06	; 6
				USART0_Print("ERR CMD\r\n");
     ec4:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <current_state>
     ec8:	13 c0       	rjmp	.+38     	; 0xef0 <application+0x97e>
     eca:	9f ef       	ldi	r25, 0xFF	; 255
				USART1_Print("ERR CMD\r\n");
     ecc:	23 ed       	ldi	r18, 0xD3	; 211
     ece:	80 e3       	ldi	r24, 0x30	; 48
     ed0:	91 50       	subi	r25, 0x01	; 1
     ed2:	20 40       	sbci	r18, 0x00	; 0
				current_state = ST_RESET; //move to next state
     ed4:	80 40       	sbci	r24, 0x00	; 0
     ed6:	e1 f7       	brne	.-8      	; 0xed0 <application+0x95e>
     ed8:	00 c0       	rjmp	.+0      	; 0xeda <application+0x968>
				break;
     eda:	00 00       	nop
     edc:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <cmd_len>
     ee0:	10 92 f1 03 	sts	0x03F1, r1	; 0x8003f1 <cmd_len+0x1>
     ee4:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <cmd_len+0x2>
     ee8:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <cmd_len+0x3>
     eec:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <current_state>
		}
		
		case ST_RESET:
		{
			_delay_ms(1000);
			cmd_len = 0;
     ef0:	df 91       	pop	r29
     ef2:	cf 91       	pop	r28
     ef4:	1f 91       	pop	r17
     ef6:	0f 91       	pop	r16
     ef8:	ff 90       	pop	r15
     efa:	ef 90       	pop	r14
     efc:	df 90       	pop	r13
			current_state = ST_INIT; //move to next state
     efe:	cf 90       	pop	r12
     f00:	bf 90       	pop	r11
			break;
		}
	}
     f02:	af 90       	pop	r10
     f04:	9f 90       	pop	r9
     f06:	8f 90       	pop	r8
     f08:	08 95       	ret

00000f0a <USART0_Init>:
     f0a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
     f0e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
     f12:	86 e0       	ldi	r24, 0x06	; 6
     f14:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
     f18:	88 e9       	ldi	r24, 0x98	; 152
     f1a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
		if (rx3Done >= RX_BUFFER_SIZE)
		rx3Done = 0;
		return 1;
	}
	return 0;
}
     f1e:	08 95       	ret

00000f20 <USART0_Transmit>:
     f20:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
     f24:	95 ff       	sbrs	r25, 5
     f26:	fc cf       	rjmp	.-8      	; 0xf20 <USART0_Transmit>
     f28:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
     f2c:	08 95       	ret

00000f2e <USART0_Print>:
     f2e:	cf 93       	push	r28
     f30:	df 93       	push	r29
     f32:	ec 01       	movw	r28, r24
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <USART0_Print+0xc>
     f36:	21 96       	adiw	r28, 0x01	; 1
     f38:	f3 df       	rcall	.-26     	; 0xf20 <USART0_Transmit>
     f3a:	88 81       	ld	r24, Y
     f3c:	81 11       	cpse	r24, r1
     f3e:	fb cf       	rjmp	.-10     	; 0xf36 <USART0_Print+0x8>
     f40:	df 91       	pop	r29
     f42:	cf 91       	pop	r28
     f44:	08 95       	ret

00000f46 <__vector_25>:
     f46:	1f 92       	push	r1
     f48:	0f 92       	push	r0
     f4a:	0f b6       	in	r0, 0x3f	; 63
     f4c:	0f 92       	push	r0
     f4e:	11 24       	eor	r1, r1
     f50:	0b b6       	in	r0, 0x3b	; 59
     f52:	0f 92       	push	r0
     f54:	2f 93       	push	r18
     f56:	4f 93       	push	r20
     f58:	5f 93       	push	r21
     f5a:	8f 93       	push	r24
     f5c:	9f 93       	push	r25
     f5e:	ef 93       	push	r30
     f60:	ff 93       	push	r31
     f62:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
     f66:	80 91 ff 03 	lds	r24, 0x03FF	; 0x8003ff <rx0ToDo>
     f6a:	90 91 00 04 	lds	r25, 0x0400	; 0x800400 <rx0ToDo+0x1>
     f6e:	ac 01       	movw	r20, r24
     f70:	4f 5f       	subi	r20, 0xFF	; 255
     f72:	5f 4f       	sbci	r21, 0xFF	; 255
     f74:	50 93 00 04 	sts	0x0400, r21	; 0x800400 <rx0ToDo+0x1>
     f78:	40 93 ff 03 	sts	0x03FF, r20	; 0x8003ff <rx0ToDo>
     f7c:	fc 01       	movw	r30, r24
     f7e:	e1 5b       	subi	r30, 0xB1	; 177
     f80:	f8 4e       	sbci	r31, 0xE8	; 232
     f82:	20 83       	st	Z, r18
     f84:	80 91 ff 03 	lds	r24, 0x03FF	; 0x8003ff <rx0ToDo>
     f88:	90 91 00 04 	lds	r25, 0x0400	; 0x800400 <rx0ToDo+0x1>
     f8c:	81 15       	cp	r24, r1
     f8e:	94 40       	sbci	r25, 0x04	; 4
     f90:	20 f0       	brcs	.+8      	; 0xf9a <__vector_25+0x54>
     f92:	10 92 00 04 	sts	0x0400, r1	; 0x800400 <rx0ToDo+0x1>
     f96:	10 92 ff 03 	sts	0x03FF, r1	; 0x8003ff <rx0ToDo>
     f9a:	ff 91       	pop	r31
     f9c:	ef 91       	pop	r30
     f9e:	9f 91       	pop	r25
     fa0:	8f 91       	pop	r24
     fa2:	5f 91       	pop	r21
     fa4:	4f 91       	pop	r20
     fa6:	2f 91       	pop	r18
     fa8:	0f 90       	pop	r0
     faa:	0b be       	out	0x3b, r0	; 59
     fac:	0f 90       	pop	r0
     fae:	0f be       	out	0x3f, r0	; 63
     fb0:	0f 90       	pop	r0
     fb2:	1f 90       	pop	r1
     fb4:	18 95       	reti

00000fb6 <USART0_RxByte>:
     fb6:	40 91 ff 03 	lds	r20, 0x03FF	; 0x8003ff <rx0ToDo>
     fba:	50 91 00 04 	lds	r21, 0x0400	; 0x800400 <rx0ToDo+0x1>
     fbe:	20 91 fd 03 	lds	r18, 0x03FD	; 0x8003fd <rx0Done>
     fc2:	30 91 fe 03 	lds	r19, 0x03FE	; 0x8003fe <rx0Done+0x1>
     fc6:	42 17       	cp	r20, r18
     fc8:	53 07       	cpc	r21, r19
     fca:	01 f1       	breq	.+64     	; 0x100c <__EEPROM_REGION_LENGTH__+0xc>
     fcc:	20 91 fd 03 	lds	r18, 0x03FD	; 0x8003fd <rx0Done>
     fd0:	30 91 fe 03 	lds	r19, 0x03FE	; 0x8003fe <rx0Done+0x1>
     fd4:	a9 01       	movw	r20, r18
     fd6:	4f 5f       	subi	r20, 0xFF	; 255
     fd8:	5f 4f       	sbci	r21, 0xFF	; 255
     fda:	50 93 fe 03 	sts	0x03FE, r21	; 0x8003fe <rx0Done+0x1>
     fde:	40 93 fd 03 	sts	0x03FD, r20	; 0x8003fd <rx0Done>
     fe2:	f9 01       	movw	r30, r18
     fe4:	e1 5b       	subi	r30, 0xB1	; 177
     fe6:	f8 4e       	sbci	r31, 0xE8	; 232
     fe8:	20 81       	ld	r18, Z
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	fc 01       	movw	r30, r24
     fee:	31 83       	std	Z+1, r19	; 0x01
     ff0:	20 83       	st	Z, r18
     ff2:	80 91 fd 03 	lds	r24, 0x03FD	; 0x8003fd <rx0Done>
     ff6:	90 91 fe 03 	lds	r25, 0x03FE	; 0x8003fe <rx0Done+0x1>
     ffa:	81 15       	cp	r24, r1
     ffc:	94 40       	sbci	r25, 0x04	; 4
     ffe:	40 f0       	brcs	.+16     	; 0x1010 <__EEPROM_REGION_LENGTH__+0x10>
    1000:	10 92 fe 03 	sts	0x03FE, r1	; 0x8003fe <rx0Done+0x1>
    1004:	10 92 fd 03 	sts	0x03FD, r1	; 0x8003fd <rx0Done>
    1008:	81 e0       	ldi	r24, 0x01	; 1
    100a:	08 95       	ret
    100c:	80 e0       	ldi	r24, 0x00	; 0
    100e:	08 95       	ret
    1010:	81 e0       	ldi	r24, 0x01	; 1
    1012:	08 95       	ret

00001014 <USART1_Init>:
    1014:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
    1018:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
    101c:	86 e0       	ldi	r24, 0x06	; 6
    101e:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    1022:	88 e9       	ldi	r24, 0x98	; 152
    1024:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    1028:	08 95       	ret

0000102a <USART1_Transmit>:
    102a:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
    102e:	95 ff       	sbrs	r25, 5
    1030:	fc cf       	rjmp	.-8      	; 0x102a <USART1_Transmit>
    1032:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    1036:	08 95       	ret

00001038 <USART1_Print>:
    1038:	cf 93       	push	r28
    103a:	df 93       	push	r29
    103c:	ec 01       	movw	r28, r24
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <USART1_Print+0xc>
    1040:	21 96       	adiw	r28, 0x01	; 1
    1042:	f3 df       	rcall	.-26     	; 0x102a <USART1_Transmit>
    1044:	88 81       	ld	r24, Y
    1046:	81 11       	cpse	r24, r1
    1048:	fb cf       	rjmp	.-10     	; 0x1040 <USART1_Print+0x8>
    104a:	df 91       	pop	r29
    104c:	cf 91       	pop	r28
    104e:	08 95       	ret

00001050 <USART1_RxByte>:
    1050:	40 91 fb 03 	lds	r20, 0x03FB	; 0x8003fb <rx1ToDo>
    1054:	50 91 fc 03 	lds	r21, 0x03FC	; 0x8003fc <rx1ToDo+0x1>
    1058:	20 91 f9 03 	lds	r18, 0x03F9	; 0x8003f9 <rx1Done>
    105c:	30 91 fa 03 	lds	r19, 0x03FA	; 0x8003fa <rx1Done+0x1>
    1060:	42 17       	cp	r20, r18
    1062:	53 07       	cpc	r21, r19
    1064:	01 f1       	breq	.+64     	; 0x10a6 <USART1_RxByte+0x56>
    1066:	20 91 f9 03 	lds	r18, 0x03F9	; 0x8003f9 <rx1Done>
    106a:	30 91 fa 03 	lds	r19, 0x03FA	; 0x8003fa <rx1Done+0x1>
    106e:	a9 01       	movw	r20, r18
    1070:	4f 5f       	subi	r20, 0xFF	; 255
    1072:	5f 4f       	sbci	r21, 0xFF	; 255
    1074:	50 93 fa 03 	sts	0x03FA, r21	; 0x8003fa <rx1Done+0x1>
    1078:	40 93 f9 03 	sts	0x03F9, r20	; 0x8003f9 <rx1Done>
    107c:	f9 01       	movw	r30, r18
    107e:	e1 5b       	subi	r30, 0xB1	; 177
    1080:	f0 4f       	sbci	r31, 0xF0	; 240
    1082:	20 81       	ld	r18, Z
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	fc 01       	movw	r30, r24
    1088:	31 83       	std	Z+1, r19	; 0x01
    108a:	20 83       	st	Z, r18
    108c:	80 91 f9 03 	lds	r24, 0x03F9	; 0x8003f9 <rx1Done>
    1090:	90 91 fa 03 	lds	r25, 0x03FA	; 0x8003fa <rx1Done+0x1>
    1094:	81 15       	cp	r24, r1
    1096:	94 40       	sbci	r25, 0x04	; 4
    1098:	40 f0       	brcs	.+16     	; 0x10aa <USART1_RxByte+0x5a>
    109a:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <rx1Done+0x1>
    109e:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <rx1Done>
    10a2:	81 e0       	ldi	r24, 0x01	; 1
    10a4:	08 95       	ret
    10a6:	80 e0       	ldi	r24, 0x00	; 0
    10a8:	08 95       	ret
    10aa:	81 e0       	ldi	r24, 0x01	; 1
    10ac:	08 95       	ret

000010ae <__vector_36>:
    10ae:	1f 92       	push	r1
    10b0:	0f 92       	push	r0
    10b2:	0f b6       	in	r0, 0x3f	; 63
    10b4:	0f 92       	push	r0
    10b6:	11 24       	eor	r1, r1
    10b8:	0b b6       	in	r0, 0x3b	; 59
    10ba:	0f 92       	push	r0
    10bc:	2f 93       	push	r18
    10be:	4f 93       	push	r20
    10c0:	5f 93       	push	r21
    10c2:	8f 93       	push	r24
    10c4:	9f 93       	push	r25
    10c6:	ef 93       	push	r30
    10c8:	ff 93       	push	r31
    10ca:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    10ce:	80 91 fb 03 	lds	r24, 0x03FB	; 0x8003fb <rx1ToDo>
    10d2:	90 91 fc 03 	lds	r25, 0x03FC	; 0x8003fc <rx1ToDo+0x1>
    10d6:	ac 01       	movw	r20, r24
    10d8:	4f 5f       	subi	r20, 0xFF	; 255
    10da:	5f 4f       	sbci	r21, 0xFF	; 255
    10dc:	50 93 fc 03 	sts	0x03FC, r21	; 0x8003fc <rx1ToDo+0x1>
    10e0:	40 93 fb 03 	sts	0x03FB, r20	; 0x8003fb <rx1ToDo>
    10e4:	fc 01       	movw	r30, r24
    10e6:	e1 5b       	subi	r30, 0xB1	; 177
    10e8:	f0 4f       	sbci	r31, 0xF0	; 240
    10ea:	20 83       	st	Z, r18
    10ec:	80 91 fb 03 	lds	r24, 0x03FB	; 0x8003fb <rx1ToDo>
    10f0:	90 91 fc 03 	lds	r25, 0x03FC	; 0x8003fc <rx1ToDo+0x1>
    10f4:	81 15       	cp	r24, r1
    10f6:	94 40       	sbci	r25, 0x04	; 4
    10f8:	20 f0       	brcs	.+8      	; 0x1102 <__vector_36+0x54>
    10fa:	10 92 fc 03 	sts	0x03FC, r1	; 0x8003fc <rx1ToDo+0x1>
    10fe:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <rx1ToDo>
    1102:	ff 91       	pop	r31
    1104:	ef 91       	pop	r30
    1106:	9f 91       	pop	r25
    1108:	8f 91       	pop	r24
    110a:	5f 91       	pop	r21
    110c:	4f 91       	pop	r20
    110e:	2f 91       	pop	r18
    1110:	0f 90       	pop	r0
    1112:	0b be       	out	0x3b, r0	; 59
    1114:	0f 90       	pop	r0
    1116:	0f be       	out	0x3f, r0	; 63
    1118:	0f 90       	pop	r0
    111a:	1f 90       	pop	r1
    111c:	18 95       	reti

0000111e <USART2_Init>:
    111e:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7c00d5>
    1122:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7c00d4>
    1126:	86 e0       	ldi	r24, 0x06	; 6
    1128:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7c00d2>
    112c:	88 e9       	ldi	r24, 0x98	; 152
    112e:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7c00d1>
    1132:	08 95       	ret

00001134 <USART2_Transmit>:
    1134:	90 91 d0 00 	lds	r25, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7c00d0>
    1138:	95 ff       	sbrs	r25, 5
    113a:	fc cf       	rjmp	.-8      	; 0x1134 <USART2_Transmit>
    113c:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
    1140:	08 95       	ret

00001142 <USART2_Print>:
    1142:	cf 93       	push	r28
    1144:	df 93       	push	r29
    1146:	ec 01       	movw	r28, r24
    1148:	02 c0       	rjmp	.+4      	; 0x114e <USART2_Print+0xc>
    114a:	21 96       	adiw	r28, 0x01	; 1
    114c:	f3 df       	rcall	.-26     	; 0x1134 <USART2_Transmit>
    114e:	88 81       	ld	r24, Y
    1150:	81 11       	cpse	r24, r1
    1152:	fb cf       	rjmp	.-10     	; 0x114a <USART2_Print+0x8>
    1154:	df 91       	pop	r29
    1156:	cf 91       	pop	r28
    1158:	08 95       	ret

0000115a <__vector_51>:
    115a:	1f 92       	push	r1
    115c:	0f 92       	push	r0
    115e:	0f b6       	in	r0, 0x3f	; 63
    1160:	0f 92       	push	r0
    1162:	11 24       	eor	r1, r1
    1164:	0b b6       	in	r0, 0x3b	; 59
    1166:	0f 92       	push	r0
    1168:	2f 93       	push	r18
    116a:	4f 93       	push	r20
    116c:	5f 93       	push	r21
    116e:	8f 93       	push	r24
    1170:	9f 93       	push	r25
    1172:	ef 93       	push	r30
    1174:	ff 93       	push	r31
    1176:	20 91 d6 00 	lds	r18, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
    117a:	80 91 f7 03 	lds	r24, 0x03F7	; 0x8003f7 <rx2ToDo>
    117e:	90 91 f8 03 	lds	r25, 0x03F8	; 0x8003f8 <rx2ToDo+0x1>
    1182:	ac 01       	movw	r20, r24
    1184:	4f 5f       	subi	r20, 0xFF	; 255
    1186:	5f 4f       	sbci	r21, 0xFF	; 255
    1188:	50 93 f8 03 	sts	0x03F8, r21	; 0x8003f8 <rx2ToDo+0x1>
    118c:	40 93 f7 03 	sts	0x03F7, r20	; 0x8003f7 <rx2ToDo>
    1190:	fc 01       	movw	r30, r24
    1192:	e1 5b       	subi	r30, 0xB1	; 177
    1194:	fc 4e       	sbci	r31, 0xEC	; 236
    1196:	20 83       	st	Z, r18
    1198:	80 91 f7 03 	lds	r24, 0x03F7	; 0x8003f7 <rx2ToDo>
    119c:	90 91 f8 03 	lds	r25, 0x03F8	; 0x8003f8 <rx2ToDo+0x1>
    11a0:	81 15       	cp	r24, r1
    11a2:	94 40       	sbci	r25, 0x04	; 4
    11a4:	20 f0       	brcs	.+8      	; 0x11ae <__vector_51+0x54>
    11a6:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <rx2ToDo+0x1>
    11aa:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <rx2ToDo>
    11ae:	ff 91       	pop	r31
    11b0:	ef 91       	pop	r30
    11b2:	9f 91       	pop	r25
    11b4:	8f 91       	pop	r24
    11b6:	5f 91       	pop	r21
    11b8:	4f 91       	pop	r20
    11ba:	2f 91       	pop	r18
    11bc:	0f 90       	pop	r0
    11be:	0b be       	out	0x3b, r0	; 59
    11c0:	0f 90       	pop	r0
    11c2:	0f be       	out	0x3f, r0	; 63
    11c4:	0f 90       	pop	r0
    11c6:	1f 90       	pop	r1
    11c8:	18 95       	reti

000011ca <USART3_Init>:
    11ca:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__TEXT_REGION_LENGTH__+0x7c0135>
    11ce:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__TEXT_REGION_LENGTH__+0x7c0134>
    11d2:	86 e0       	ldi	r24, 0x06	; 6
    11d4:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__TEXT_REGION_LENGTH__+0x7c0132>
    11d8:	88 e9       	ldi	r24, 0x98	; 152
    11da:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__TEXT_REGION_LENGTH__+0x7c0131>
    11de:	08 95       	ret

000011e0 <USART3_Transmit>:
    11e0:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <__TEXT_REGION_LENGTH__+0x7c0130>
    11e4:	95 ff       	sbrs	r25, 5
    11e6:	fc cf       	rjmp	.-8      	; 0x11e0 <USART3_Transmit>
    11e8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
    11ec:	08 95       	ret

000011ee <__vector_54>:

//=== ISR: MODBUS ? Arduino ===
ISR(USART3_RX_vect)
{
    11ee:	1f 92       	push	r1
    11f0:	0f 92       	push	r0
    11f2:	0f b6       	in	r0, 0x3f	; 63
    11f4:	0f 92       	push	r0
    11f6:	11 24       	eor	r1, r1
    11f8:	0b b6       	in	r0, 0x3b	; 59
    11fa:	0f 92       	push	r0
    11fc:	8f 93       	push	r24
    11fe:	9f 93       	push	r25
    1200:	ef 93       	push	r30
    1202:	ff 93       	push	r31
	uint8_t data = UDR3;
    1204:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
	if (rx_index < sizeof(rx_buffer)) {
    1208:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <rx_index>
    120c:	88 30       	cpi	r24, 0x08	; 8
    120e:	88 f4       	brcc	.+34     	; 0x1232 <__vector_54+0x44>
		rx_buffer[rx_index++] = data;
    1210:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <rx_index>
    1214:	81 e0       	ldi	r24, 0x01	; 1
    1216:	8e 0f       	add	r24, r30
    1218:	80 93 ef 03 	sts	0x03EF, r24	; 0x8003ef <rx_index>
    121c:	f0 e0       	ldi	r31, 0x00	; 0
    121e:	e7 5f       	subi	r30, 0xF7	; 247
    1220:	f9 4f       	sbci	r31, 0xF9	; 249
    1222:	90 83       	st	Z, r25
		if (rx_index >= 8) {
    1224:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <rx_index>
    1228:	88 30       	cpi	r24, 0x08	; 8
    122a:	18 f0       	brcs	.+6      	; 0x1232 <__vector_54+0x44>
			request_ready = 1;
    122c:	81 e0       	ldi	r24, 0x01	; 1
    122e:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <__data_end>
		}
	}
    1232:	ff 91       	pop	r31
    1234:	ef 91       	pop	r30
    1236:	9f 91       	pop	r25
    1238:	8f 91       	pop	r24
    123a:	0f 90       	pop	r0
    123c:	0b be       	out	0x3b, r0	; 59
    123e:	0f 90       	pop	r0
    1240:	0f be       	out	0x3f, r0	; 63
    1242:	0f 90       	pop	r0
    1244:	1f 90       	pop	r1
    1246:	18 95       	reti

00001248 <__subsf3>:
    1248:	50 58       	subi	r21, 0x80	; 128

0000124a <__addsf3>:
    124a:	bb 27       	eor	r27, r27
    124c:	aa 27       	eor	r26, r26
    124e:	0e d0       	rcall	.+28     	; 0x126c <__addsf3x>
    1250:	48 c1       	rjmp	.+656    	; 0x14e2 <__fp_round>
    1252:	39 d1       	rcall	.+626    	; 0x14c6 <__fp_pscA>
    1254:	30 f0       	brcs	.+12     	; 0x1262 <__addsf3+0x18>
    1256:	3e d1       	rcall	.+636    	; 0x14d4 <__fp_pscB>
    1258:	20 f0       	brcs	.+8      	; 0x1262 <__addsf3+0x18>
    125a:	31 f4       	brne	.+12     	; 0x1268 <__addsf3+0x1e>
    125c:	9f 3f       	cpi	r25, 0xFF	; 255
    125e:	11 f4       	brne	.+4      	; 0x1264 <__addsf3+0x1a>
    1260:	1e f4       	brtc	.+6      	; 0x1268 <__addsf3+0x1e>
    1262:	2e c1       	rjmp	.+604    	; 0x14c0 <__fp_nan>
    1264:	0e f4       	brtc	.+2      	; 0x1268 <__addsf3+0x1e>
    1266:	e0 95       	com	r30
    1268:	e7 fb       	bst	r30, 7
    126a:	24 c1       	rjmp	.+584    	; 0x14b4 <__fp_inf>

0000126c <__addsf3x>:
    126c:	e9 2f       	mov	r30, r25
    126e:	4a d1       	rcall	.+660    	; 0x1504 <__fp_split3>
    1270:	80 f3       	brcs	.-32     	; 0x1252 <__addsf3+0x8>
    1272:	ba 17       	cp	r27, r26
    1274:	62 07       	cpc	r22, r18
    1276:	73 07       	cpc	r23, r19
    1278:	84 07       	cpc	r24, r20
    127a:	95 07       	cpc	r25, r21
    127c:	18 f0       	brcs	.+6      	; 0x1284 <__addsf3x+0x18>
    127e:	71 f4       	brne	.+28     	; 0x129c <__addsf3x+0x30>
    1280:	9e f5       	brtc	.+102    	; 0x12e8 <__addsf3x+0x7c>
    1282:	62 c1       	rjmp	.+708    	; 0x1548 <__fp_zero>
    1284:	0e f4       	brtc	.+2      	; 0x1288 <__addsf3x+0x1c>
    1286:	e0 95       	com	r30
    1288:	0b 2e       	mov	r0, r27
    128a:	ba 2f       	mov	r27, r26
    128c:	a0 2d       	mov	r26, r0
    128e:	0b 01       	movw	r0, r22
    1290:	b9 01       	movw	r22, r18
    1292:	90 01       	movw	r18, r0
    1294:	0c 01       	movw	r0, r24
    1296:	ca 01       	movw	r24, r20
    1298:	a0 01       	movw	r20, r0
    129a:	11 24       	eor	r1, r1
    129c:	ff 27       	eor	r31, r31
    129e:	59 1b       	sub	r21, r25
    12a0:	99 f0       	breq	.+38     	; 0x12c8 <__addsf3x+0x5c>
    12a2:	59 3f       	cpi	r21, 0xF9	; 249
    12a4:	50 f4       	brcc	.+20     	; 0x12ba <__addsf3x+0x4e>
    12a6:	50 3e       	cpi	r21, 0xE0	; 224
    12a8:	68 f1       	brcs	.+90     	; 0x1304 <__addsf3x+0x98>
    12aa:	1a 16       	cp	r1, r26
    12ac:	f0 40       	sbci	r31, 0x00	; 0
    12ae:	a2 2f       	mov	r26, r18
    12b0:	23 2f       	mov	r18, r19
    12b2:	34 2f       	mov	r19, r20
    12b4:	44 27       	eor	r20, r20
    12b6:	58 5f       	subi	r21, 0xF8	; 248
    12b8:	f3 cf       	rjmp	.-26     	; 0x12a0 <__addsf3x+0x34>
    12ba:	46 95       	lsr	r20
    12bc:	37 95       	ror	r19
    12be:	27 95       	ror	r18
    12c0:	a7 95       	ror	r26
    12c2:	f0 40       	sbci	r31, 0x00	; 0
    12c4:	53 95       	inc	r21
    12c6:	c9 f7       	brne	.-14     	; 0x12ba <__addsf3x+0x4e>
    12c8:	7e f4       	brtc	.+30     	; 0x12e8 <__addsf3x+0x7c>
    12ca:	1f 16       	cp	r1, r31
    12cc:	ba 0b       	sbc	r27, r26
    12ce:	62 0b       	sbc	r22, r18
    12d0:	73 0b       	sbc	r23, r19
    12d2:	84 0b       	sbc	r24, r20
    12d4:	ba f0       	brmi	.+46     	; 0x1304 <__addsf3x+0x98>
    12d6:	91 50       	subi	r25, 0x01	; 1
    12d8:	a1 f0       	breq	.+40     	; 0x1302 <__addsf3x+0x96>
    12da:	ff 0f       	add	r31, r31
    12dc:	bb 1f       	adc	r27, r27
    12de:	66 1f       	adc	r22, r22
    12e0:	77 1f       	adc	r23, r23
    12e2:	88 1f       	adc	r24, r24
    12e4:	c2 f7       	brpl	.-16     	; 0x12d6 <__addsf3x+0x6a>
    12e6:	0e c0       	rjmp	.+28     	; 0x1304 <__addsf3x+0x98>
    12e8:	ba 0f       	add	r27, r26
    12ea:	62 1f       	adc	r22, r18
    12ec:	73 1f       	adc	r23, r19
    12ee:	84 1f       	adc	r24, r20
    12f0:	48 f4       	brcc	.+18     	; 0x1304 <__addsf3x+0x98>
    12f2:	87 95       	ror	r24
    12f4:	77 95       	ror	r23
    12f6:	67 95       	ror	r22
    12f8:	b7 95       	ror	r27
    12fa:	f7 95       	ror	r31
    12fc:	9e 3f       	cpi	r25, 0xFE	; 254
    12fe:	08 f0       	brcs	.+2      	; 0x1302 <__addsf3x+0x96>
    1300:	b3 cf       	rjmp	.-154    	; 0x1268 <__addsf3+0x1e>
    1302:	93 95       	inc	r25
    1304:	88 0f       	add	r24, r24
    1306:	08 f0       	brcs	.+2      	; 0x130a <__addsf3x+0x9e>
    1308:	99 27       	eor	r25, r25
    130a:	ee 0f       	add	r30, r30
    130c:	97 95       	ror	r25
    130e:	87 95       	ror	r24
    1310:	08 95       	ret

00001312 <__divsf3>:
    1312:	0c d0       	rcall	.+24     	; 0x132c <__divsf3x>
    1314:	e6 c0       	rjmp	.+460    	; 0x14e2 <__fp_round>
    1316:	de d0       	rcall	.+444    	; 0x14d4 <__fp_pscB>
    1318:	40 f0       	brcs	.+16     	; 0x132a <__divsf3+0x18>
    131a:	d5 d0       	rcall	.+426    	; 0x14c6 <__fp_pscA>
    131c:	30 f0       	brcs	.+12     	; 0x132a <__divsf3+0x18>
    131e:	21 f4       	brne	.+8      	; 0x1328 <__divsf3+0x16>
    1320:	5f 3f       	cpi	r21, 0xFF	; 255
    1322:	19 f0       	breq	.+6      	; 0x132a <__divsf3+0x18>
    1324:	c7 c0       	rjmp	.+398    	; 0x14b4 <__fp_inf>
    1326:	51 11       	cpse	r21, r1
    1328:	10 c1       	rjmp	.+544    	; 0x154a <__fp_szero>
    132a:	ca c0       	rjmp	.+404    	; 0x14c0 <__fp_nan>

0000132c <__divsf3x>:
    132c:	eb d0       	rcall	.+470    	; 0x1504 <__fp_split3>
    132e:	98 f3       	brcs	.-26     	; 0x1316 <__divsf3+0x4>

00001330 <__divsf3_pse>:
    1330:	99 23       	and	r25, r25
    1332:	c9 f3       	breq	.-14     	; 0x1326 <__divsf3+0x14>
    1334:	55 23       	and	r21, r21
    1336:	b1 f3       	breq	.-20     	; 0x1324 <__divsf3+0x12>
    1338:	95 1b       	sub	r25, r21
    133a:	55 0b       	sbc	r21, r21
    133c:	bb 27       	eor	r27, r27
    133e:	aa 27       	eor	r26, r26
    1340:	62 17       	cp	r22, r18
    1342:	73 07       	cpc	r23, r19
    1344:	84 07       	cpc	r24, r20
    1346:	38 f0       	brcs	.+14     	; 0x1356 <__divsf3_pse+0x26>
    1348:	9f 5f       	subi	r25, 0xFF	; 255
    134a:	5f 4f       	sbci	r21, 0xFF	; 255
    134c:	22 0f       	add	r18, r18
    134e:	33 1f       	adc	r19, r19
    1350:	44 1f       	adc	r20, r20
    1352:	aa 1f       	adc	r26, r26
    1354:	a9 f3       	breq	.-22     	; 0x1340 <__divsf3_pse+0x10>
    1356:	33 d0       	rcall	.+102    	; 0x13be <__divsf3_pse+0x8e>
    1358:	0e 2e       	mov	r0, r30
    135a:	3a f0       	brmi	.+14     	; 0x136a <__divsf3_pse+0x3a>
    135c:	e0 e8       	ldi	r30, 0x80	; 128
    135e:	30 d0       	rcall	.+96     	; 0x13c0 <__divsf3_pse+0x90>
    1360:	91 50       	subi	r25, 0x01	; 1
    1362:	50 40       	sbci	r21, 0x00	; 0
    1364:	e6 95       	lsr	r30
    1366:	00 1c       	adc	r0, r0
    1368:	ca f7       	brpl	.-14     	; 0x135c <__divsf3_pse+0x2c>
    136a:	29 d0       	rcall	.+82     	; 0x13be <__divsf3_pse+0x8e>
    136c:	fe 2f       	mov	r31, r30
    136e:	27 d0       	rcall	.+78     	; 0x13be <__divsf3_pse+0x8e>
    1370:	66 0f       	add	r22, r22
    1372:	77 1f       	adc	r23, r23
    1374:	88 1f       	adc	r24, r24
    1376:	bb 1f       	adc	r27, r27
    1378:	26 17       	cp	r18, r22
    137a:	37 07       	cpc	r19, r23
    137c:	48 07       	cpc	r20, r24
    137e:	ab 07       	cpc	r26, r27
    1380:	b0 e8       	ldi	r27, 0x80	; 128
    1382:	09 f0       	breq	.+2      	; 0x1386 <__divsf3_pse+0x56>
    1384:	bb 0b       	sbc	r27, r27
    1386:	80 2d       	mov	r24, r0
    1388:	bf 01       	movw	r22, r30
    138a:	ff 27       	eor	r31, r31
    138c:	93 58       	subi	r25, 0x83	; 131
    138e:	5f 4f       	sbci	r21, 0xFF	; 255
    1390:	2a f0       	brmi	.+10     	; 0x139c <__divsf3_pse+0x6c>
    1392:	9e 3f       	cpi	r25, 0xFE	; 254
    1394:	51 05       	cpc	r21, r1
    1396:	68 f0       	brcs	.+26     	; 0x13b2 <__divsf3_pse+0x82>
    1398:	8d c0       	rjmp	.+282    	; 0x14b4 <__fp_inf>
    139a:	d7 c0       	rjmp	.+430    	; 0x154a <__fp_szero>
    139c:	5f 3f       	cpi	r21, 0xFF	; 255
    139e:	ec f3       	brlt	.-6      	; 0x139a <__divsf3_pse+0x6a>
    13a0:	98 3e       	cpi	r25, 0xE8	; 232
    13a2:	dc f3       	brlt	.-10     	; 0x139a <__divsf3_pse+0x6a>
    13a4:	86 95       	lsr	r24
    13a6:	77 95       	ror	r23
    13a8:	67 95       	ror	r22
    13aa:	b7 95       	ror	r27
    13ac:	f7 95       	ror	r31
    13ae:	9f 5f       	subi	r25, 0xFF	; 255
    13b0:	c9 f7       	brne	.-14     	; 0x13a4 <__divsf3_pse+0x74>
    13b2:	88 0f       	add	r24, r24
    13b4:	91 1d       	adc	r25, r1
    13b6:	96 95       	lsr	r25
    13b8:	87 95       	ror	r24
    13ba:	97 f9       	bld	r25, 7
    13bc:	08 95       	ret
    13be:	e1 e0       	ldi	r30, 0x01	; 1
    13c0:	66 0f       	add	r22, r22
    13c2:	77 1f       	adc	r23, r23
    13c4:	88 1f       	adc	r24, r24
    13c6:	bb 1f       	adc	r27, r27
    13c8:	62 17       	cp	r22, r18
    13ca:	73 07       	cpc	r23, r19
    13cc:	84 07       	cpc	r24, r20
    13ce:	ba 07       	cpc	r27, r26
    13d0:	20 f0       	brcs	.+8      	; 0x13da <__divsf3_pse+0xaa>
    13d2:	62 1b       	sub	r22, r18
    13d4:	73 0b       	sbc	r23, r19
    13d6:	84 0b       	sbc	r24, r20
    13d8:	ba 0b       	sbc	r27, r26
    13da:	ee 1f       	adc	r30, r30
    13dc:	88 f7       	brcc	.-30     	; 0x13c0 <__divsf3_pse+0x90>
    13de:	e0 95       	com	r30
    13e0:	08 95       	ret

000013e2 <__fixunssfsi>:
    13e2:	98 d0       	rcall	.+304    	; 0x1514 <__fp_splitA>
    13e4:	88 f0       	brcs	.+34     	; 0x1408 <__fixunssfsi+0x26>
    13e6:	9f 57       	subi	r25, 0x7F	; 127
    13e8:	90 f0       	brcs	.+36     	; 0x140e <__fixunssfsi+0x2c>
    13ea:	b9 2f       	mov	r27, r25
    13ec:	99 27       	eor	r25, r25
    13ee:	b7 51       	subi	r27, 0x17	; 23
    13f0:	a0 f0       	brcs	.+40     	; 0x141a <__fixunssfsi+0x38>
    13f2:	d1 f0       	breq	.+52     	; 0x1428 <__fixunssfsi+0x46>
    13f4:	66 0f       	add	r22, r22
    13f6:	77 1f       	adc	r23, r23
    13f8:	88 1f       	adc	r24, r24
    13fa:	99 1f       	adc	r25, r25
    13fc:	1a f0       	brmi	.+6      	; 0x1404 <__fixunssfsi+0x22>
    13fe:	ba 95       	dec	r27
    1400:	c9 f7       	brne	.-14     	; 0x13f4 <__fixunssfsi+0x12>
    1402:	12 c0       	rjmp	.+36     	; 0x1428 <__fixunssfsi+0x46>
    1404:	b1 30       	cpi	r27, 0x01	; 1
    1406:	81 f0       	breq	.+32     	; 0x1428 <__fixunssfsi+0x46>
    1408:	9f d0       	rcall	.+318    	; 0x1548 <__fp_zero>
    140a:	b1 e0       	ldi	r27, 0x01	; 1
    140c:	08 95       	ret
    140e:	9c c0       	rjmp	.+312    	; 0x1548 <__fp_zero>
    1410:	67 2f       	mov	r22, r23
    1412:	78 2f       	mov	r23, r24
    1414:	88 27       	eor	r24, r24
    1416:	b8 5f       	subi	r27, 0xF8	; 248
    1418:	39 f0       	breq	.+14     	; 0x1428 <__fixunssfsi+0x46>
    141a:	b9 3f       	cpi	r27, 0xF9	; 249
    141c:	cc f3       	brlt	.-14     	; 0x1410 <__fixunssfsi+0x2e>
    141e:	86 95       	lsr	r24
    1420:	77 95       	ror	r23
    1422:	67 95       	ror	r22
    1424:	b3 95       	inc	r27
    1426:	d9 f7       	brne	.-10     	; 0x141e <__fixunssfsi+0x3c>
    1428:	3e f4       	brtc	.+14     	; 0x1438 <__fixunssfsi+0x56>
    142a:	90 95       	com	r25
    142c:	80 95       	com	r24
    142e:	70 95       	com	r23
    1430:	61 95       	neg	r22
    1432:	7f 4f       	sbci	r23, 0xFF	; 255
    1434:	8f 4f       	sbci	r24, 0xFF	; 255
    1436:	9f 4f       	sbci	r25, 0xFF	; 255
    1438:	08 95       	ret

0000143a <__floatunsisf>:
    143a:	e8 94       	clt
    143c:	09 c0       	rjmp	.+18     	; 0x1450 <__floatsisf+0x12>

0000143e <__floatsisf>:
    143e:	97 fb       	bst	r25, 7
    1440:	3e f4       	brtc	.+14     	; 0x1450 <__floatsisf+0x12>
    1442:	90 95       	com	r25
    1444:	80 95       	com	r24
    1446:	70 95       	com	r23
    1448:	61 95       	neg	r22
    144a:	7f 4f       	sbci	r23, 0xFF	; 255
    144c:	8f 4f       	sbci	r24, 0xFF	; 255
    144e:	9f 4f       	sbci	r25, 0xFF	; 255
    1450:	99 23       	and	r25, r25
    1452:	a9 f0       	breq	.+42     	; 0x147e <__floatsisf+0x40>
    1454:	f9 2f       	mov	r31, r25
    1456:	96 e9       	ldi	r25, 0x96	; 150
    1458:	bb 27       	eor	r27, r27
    145a:	93 95       	inc	r25
    145c:	f6 95       	lsr	r31
    145e:	87 95       	ror	r24
    1460:	77 95       	ror	r23
    1462:	67 95       	ror	r22
    1464:	b7 95       	ror	r27
    1466:	f1 11       	cpse	r31, r1
    1468:	f8 cf       	rjmp	.-16     	; 0x145a <__floatsisf+0x1c>
    146a:	fa f4       	brpl	.+62     	; 0x14aa <__floatsisf+0x6c>
    146c:	bb 0f       	add	r27, r27
    146e:	11 f4       	brne	.+4      	; 0x1474 <__floatsisf+0x36>
    1470:	60 ff       	sbrs	r22, 0
    1472:	1b c0       	rjmp	.+54     	; 0x14aa <__floatsisf+0x6c>
    1474:	6f 5f       	subi	r22, 0xFF	; 255
    1476:	7f 4f       	sbci	r23, 0xFF	; 255
    1478:	8f 4f       	sbci	r24, 0xFF	; 255
    147a:	9f 4f       	sbci	r25, 0xFF	; 255
    147c:	16 c0       	rjmp	.+44     	; 0x14aa <__floatsisf+0x6c>
    147e:	88 23       	and	r24, r24
    1480:	11 f0       	breq	.+4      	; 0x1486 <__floatsisf+0x48>
    1482:	96 e9       	ldi	r25, 0x96	; 150
    1484:	11 c0       	rjmp	.+34     	; 0x14a8 <__floatsisf+0x6a>
    1486:	77 23       	and	r23, r23
    1488:	21 f0       	breq	.+8      	; 0x1492 <__floatsisf+0x54>
    148a:	9e e8       	ldi	r25, 0x8E	; 142
    148c:	87 2f       	mov	r24, r23
    148e:	76 2f       	mov	r23, r22
    1490:	05 c0       	rjmp	.+10     	; 0x149c <__floatsisf+0x5e>
    1492:	66 23       	and	r22, r22
    1494:	71 f0       	breq	.+28     	; 0x14b2 <__floatsisf+0x74>
    1496:	96 e8       	ldi	r25, 0x86	; 134
    1498:	86 2f       	mov	r24, r22
    149a:	70 e0       	ldi	r23, 0x00	; 0
    149c:	60 e0       	ldi	r22, 0x00	; 0
    149e:	2a f0       	brmi	.+10     	; 0x14aa <__floatsisf+0x6c>
    14a0:	9a 95       	dec	r25
    14a2:	66 0f       	add	r22, r22
    14a4:	77 1f       	adc	r23, r23
    14a6:	88 1f       	adc	r24, r24
    14a8:	da f7       	brpl	.-10     	; 0x14a0 <__floatsisf+0x62>
    14aa:	88 0f       	add	r24, r24
    14ac:	96 95       	lsr	r25
    14ae:	87 95       	ror	r24
    14b0:	97 f9       	bld	r25, 7
    14b2:	08 95       	ret

000014b4 <__fp_inf>:
    14b4:	97 f9       	bld	r25, 7
    14b6:	9f 67       	ori	r25, 0x7F	; 127
    14b8:	80 e8       	ldi	r24, 0x80	; 128
    14ba:	70 e0       	ldi	r23, 0x00	; 0
    14bc:	60 e0       	ldi	r22, 0x00	; 0
    14be:	08 95       	ret

000014c0 <__fp_nan>:
    14c0:	9f ef       	ldi	r25, 0xFF	; 255
    14c2:	80 ec       	ldi	r24, 0xC0	; 192
    14c4:	08 95       	ret

000014c6 <__fp_pscA>:
    14c6:	00 24       	eor	r0, r0
    14c8:	0a 94       	dec	r0
    14ca:	16 16       	cp	r1, r22
    14cc:	17 06       	cpc	r1, r23
    14ce:	18 06       	cpc	r1, r24
    14d0:	09 06       	cpc	r0, r25
    14d2:	08 95       	ret

000014d4 <__fp_pscB>:
    14d4:	00 24       	eor	r0, r0
    14d6:	0a 94       	dec	r0
    14d8:	12 16       	cp	r1, r18
    14da:	13 06       	cpc	r1, r19
    14dc:	14 06       	cpc	r1, r20
    14de:	05 06       	cpc	r0, r21
    14e0:	08 95       	ret

000014e2 <__fp_round>:
    14e2:	09 2e       	mov	r0, r25
    14e4:	03 94       	inc	r0
    14e6:	00 0c       	add	r0, r0
    14e8:	11 f4       	brne	.+4      	; 0x14ee <__fp_round+0xc>
    14ea:	88 23       	and	r24, r24
    14ec:	52 f0       	brmi	.+20     	; 0x1502 <__fp_round+0x20>
    14ee:	bb 0f       	add	r27, r27
    14f0:	40 f4       	brcc	.+16     	; 0x1502 <__fp_round+0x20>
    14f2:	bf 2b       	or	r27, r31
    14f4:	11 f4       	brne	.+4      	; 0x14fa <__fp_round+0x18>
    14f6:	60 ff       	sbrs	r22, 0
    14f8:	04 c0       	rjmp	.+8      	; 0x1502 <__fp_round+0x20>
    14fa:	6f 5f       	subi	r22, 0xFF	; 255
    14fc:	7f 4f       	sbci	r23, 0xFF	; 255
    14fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1500:	9f 4f       	sbci	r25, 0xFF	; 255
    1502:	08 95       	ret

00001504 <__fp_split3>:
    1504:	57 fd       	sbrc	r21, 7
    1506:	90 58       	subi	r25, 0x80	; 128
    1508:	44 0f       	add	r20, r20
    150a:	55 1f       	adc	r21, r21
    150c:	59 f0       	breq	.+22     	; 0x1524 <__fp_splitA+0x10>
    150e:	5f 3f       	cpi	r21, 0xFF	; 255
    1510:	71 f0       	breq	.+28     	; 0x152e <__fp_splitA+0x1a>
    1512:	47 95       	ror	r20

00001514 <__fp_splitA>:
    1514:	88 0f       	add	r24, r24
    1516:	97 fb       	bst	r25, 7
    1518:	99 1f       	adc	r25, r25
    151a:	61 f0       	breq	.+24     	; 0x1534 <__fp_splitA+0x20>
    151c:	9f 3f       	cpi	r25, 0xFF	; 255
    151e:	79 f0       	breq	.+30     	; 0x153e <__fp_splitA+0x2a>
    1520:	87 95       	ror	r24
    1522:	08 95       	ret
    1524:	12 16       	cp	r1, r18
    1526:	13 06       	cpc	r1, r19
    1528:	14 06       	cpc	r1, r20
    152a:	55 1f       	adc	r21, r21
    152c:	f2 cf       	rjmp	.-28     	; 0x1512 <__fp_split3+0xe>
    152e:	46 95       	lsr	r20
    1530:	f1 df       	rcall	.-30     	; 0x1514 <__fp_splitA>
    1532:	08 c0       	rjmp	.+16     	; 0x1544 <__fp_splitA+0x30>
    1534:	16 16       	cp	r1, r22
    1536:	17 06       	cpc	r1, r23
    1538:	18 06       	cpc	r1, r24
    153a:	99 1f       	adc	r25, r25
    153c:	f1 cf       	rjmp	.-30     	; 0x1520 <__fp_splitA+0xc>
    153e:	86 95       	lsr	r24
    1540:	71 05       	cpc	r23, r1
    1542:	61 05       	cpc	r22, r1
    1544:	08 94       	sec
    1546:	08 95       	ret

00001548 <__fp_zero>:
    1548:	e8 94       	clt

0000154a <__fp_szero>:
    154a:	bb 27       	eor	r27, r27
    154c:	66 27       	eor	r22, r22
    154e:	77 27       	eor	r23, r23
    1550:	cb 01       	movw	r24, r22
    1552:	97 f9       	bld	r25, 7
    1554:	08 95       	ret

00001556 <__mulsf3>:
    1556:	0b d0       	rcall	.+22     	; 0x156e <__mulsf3x>
    1558:	c4 cf       	rjmp	.-120    	; 0x14e2 <__fp_round>
    155a:	b5 df       	rcall	.-150    	; 0x14c6 <__fp_pscA>
    155c:	28 f0       	brcs	.+10     	; 0x1568 <__mulsf3+0x12>
    155e:	ba df       	rcall	.-140    	; 0x14d4 <__fp_pscB>
    1560:	18 f0       	brcs	.+6      	; 0x1568 <__mulsf3+0x12>
    1562:	95 23       	and	r25, r21
    1564:	09 f0       	breq	.+2      	; 0x1568 <__mulsf3+0x12>
    1566:	a6 cf       	rjmp	.-180    	; 0x14b4 <__fp_inf>
    1568:	ab cf       	rjmp	.-170    	; 0x14c0 <__fp_nan>
    156a:	11 24       	eor	r1, r1
    156c:	ee cf       	rjmp	.-36     	; 0x154a <__fp_szero>

0000156e <__mulsf3x>:
    156e:	ca df       	rcall	.-108    	; 0x1504 <__fp_split3>
    1570:	a0 f3       	brcs	.-24     	; 0x155a <__mulsf3+0x4>

00001572 <__mulsf3_pse>:
    1572:	95 9f       	mul	r25, r21
    1574:	d1 f3       	breq	.-12     	; 0x156a <__mulsf3+0x14>
    1576:	95 0f       	add	r25, r21
    1578:	50 e0       	ldi	r21, 0x00	; 0
    157a:	55 1f       	adc	r21, r21
    157c:	62 9f       	mul	r22, r18
    157e:	f0 01       	movw	r30, r0
    1580:	72 9f       	mul	r23, r18
    1582:	bb 27       	eor	r27, r27
    1584:	f0 0d       	add	r31, r0
    1586:	b1 1d       	adc	r27, r1
    1588:	63 9f       	mul	r22, r19
    158a:	aa 27       	eor	r26, r26
    158c:	f0 0d       	add	r31, r0
    158e:	b1 1d       	adc	r27, r1
    1590:	aa 1f       	adc	r26, r26
    1592:	64 9f       	mul	r22, r20
    1594:	66 27       	eor	r22, r22
    1596:	b0 0d       	add	r27, r0
    1598:	a1 1d       	adc	r26, r1
    159a:	66 1f       	adc	r22, r22
    159c:	82 9f       	mul	r24, r18
    159e:	22 27       	eor	r18, r18
    15a0:	b0 0d       	add	r27, r0
    15a2:	a1 1d       	adc	r26, r1
    15a4:	62 1f       	adc	r22, r18
    15a6:	73 9f       	mul	r23, r19
    15a8:	b0 0d       	add	r27, r0
    15aa:	a1 1d       	adc	r26, r1
    15ac:	62 1f       	adc	r22, r18
    15ae:	83 9f       	mul	r24, r19
    15b0:	a0 0d       	add	r26, r0
    15b2:	61 1d       	adc	r22, r1
    15b4:	22 1f       	adc	r18, r18
    15b6:	74 9f       	mul	r23, r20
    15b8:	33 27       	eor	r19, r19
    15ba:	a0 0d       	add	r26, r0
    15bc:	61 1d       	adc	r22, r1
    15be:	23 1f       	adc	r18, r19
    15c0:	84 9f       	mul	r24, r20
    15c2:	60 0d       	add	r22, r0
    15c4:	21 1d       	adc	r18, r1
    15c6:	82 2f       	mov	r24, r18
    15c8:	76 2f       	mov	r23, r22
    15ca:	6a 2f       	mov	r22, r26
    15cc:	11 24       	eor	r1, r1
    15ce:	9f 57       	subi	r25, 0x7F	; 127
    15d0:	50 40       	sbci	r21, 0x00	; 0
    15d2:	8a f0       	brmi	.+34     	; 0x15f6 <__mulsf3_pse+0x84>
    15d4:	e1 f0       	breq	.+56     	; 0x160e <__mulsf3_pse+0x9c>
    15d6:	88 23       	and	r24, r24
    15d8:	4a f0       	brmi	.+18     	; 0x15ec <__mulsf3_pse+0x7a>
    15da:	ee 0f       	add	r30, r30
    15dc:	ff 1f       	adc	r31, r31
    15de:	bb 1f       	adc	r27, r27
    15e0:	66 1f       	adc	r22, r22
    15e2:	77 1f       	adc	r23, r23
    15e4:	88 1f       	adc	r24, r24
    15e6:	91 50       	subi	r25, 0x01	; 1
    15e8:	50 40       	sbci	r21, 0x00	; 0
    15ea:	a9 f7       	brne	.-22     	; 0x15d6 <__mulsf3_pse+0x64>
    15ec:	9e 3f       	cpi	r25, 0xFE	; 254
    15ee:	51 05       	cpc	r21, r1
    15f0:	70 f0       	brcs	.+28     	; 0x160e <__mulsf3_pse+0x9c>
    15f2:	60 cf       	rjmp	.-320    	; 0x14b4 <__fp_inf>
    15f4:	aa cf       	rjmp	.-172    	; 0x154a <__fp_szero>
    15f6:	5f 3f       	cpi	r21, 0xFF	; 255
    15f8:	ec f3       	brlt	.-6      	; 0x15f4 <__mulsf3_pse+0x82>
    15fa:	98 3e       	cpi	r25, 0xE8	; 232
    15fc:	dc f3       	brlt	.-10     	; 0x15f4 <__mulsf3_pse+0x82>
    15fe:	86 95       	lsr	r24
    1600:	77 95       	ror	r23
    1602:	67 95       	ror	r22
    1604:	b7 95       	ror	r27
    1606:	f7 95       	ror	r31
    1608:	e7 95       	ror	r30
    160a:	9f 5f       	subi	r25, 0xFF	; 255
    160c:	c1 f7       	brne	.-16     	; 0x15fe <__mulsf3_pse+0x8c>
    160e:	fe 2b       	or	r31, r30
    1610:	88 0f       	add	r24, r24
    1612:	91 1d       	adc	r25, r1
    1614:	96 95       	lsr	r25
    1616:	87 95       	ror	r24
    1618:	97 f9       	bld	r25, 7
    161a:	08 95       	ret

0000161c <vfprintf>:
    161c:	2f 92       	push	r2
    161e:	3f 92       	push	r3
    1620:	4f 92       	push	r4
    1622:	5f 92       	push	r5
    1624:	6f 92       	push	r6
    1626:	7f 92       	push	r7
    1628:	8f 92       	push	r8
    162a:	9f 92       	push	r9
    162c:	af 92       	push	r10
    162e:	bf 92       	push	r11
    1630:	cf 92       	push	r12
    1632:	df 92       	push	r13
    1634:	ef 92       	push	r14
    1636:	ff 92       	push	r15
    1638:	0f 93       	push	r16
    163a:	1f 93       	push	r17
    163c:	cf 93       	push	r28
    163e:	df 93       	push	r29
    1640:	cd b7       	in	r28, 0x3d	; 61
    1642:	de b7       	in	r29, 0x3e	; 62
    1644:	60 97       	sbiw	r28, 0x10	; 16
    1646:	0f b6       	in	r0, 0x3f	; 63
    1648:	f8 94       	cli
    164a:	de bf       	out	0x3e, r29	; 62
    164c:	0f be       	out	0x3f, r0	; 63
    164e:	cd bf       	out	0x3d, r28	; 61
    1650:	7c 01       	movw	r14, r24
    1652:	1b 01       	movw	r2, r22
    1654:	6a 01       	movw	r12, r20
    1656:	fc 01       	movw	r30, r24
    1658:	17 82       	std	Z+7, r1	; 0x07
    165a:	16 82       	std	Z+6, r1	; 0x06
    165c:	83 81       	ldd	r24, Z+3	; 0x03
    165e:	81 ff       	sbrs	r24, 1
    1660:	2a c3       	rjmp	.+1620   	; 0x1cb6 <vfprintf+0x69a>
    1662:	9e 01       	movw	r18, r28
    1664:	2f 5f       	subi	r18, 0xFF	; 255
    1666:	3f 4f       	sbci	r19, 0xFF	; 255
    1668:	39 01       	movw	r6, r18
    166a:	f7 01       	movw	r30, r14
    166c:	93 81       	ldd	r25, Z+3	; 0x03
    166e:	f1 01       	movw	r30, r2
    1670:	93 fd       	sbrc	r25, 3
    1672:	85 91       	lpm	r24, Z+
    1674:	93 ff       	sbrs	r25, 3
    1676:	81 91       	ld	r24, Z+
    1678:	1f 01       	movw	r2, r30
    167a:	88 23       	and	r24, r24
    167c:	09 f4       	brne	.+2      	; 0x1680 <vfprintf+0x64>
    167e:	17 c3       	rjmp	.+1582   	; 0x1cae <vfprintf+0x692>
    1680:	85 32       	cpi	r24, 0x25	; 37
    1682:	39 f4       	brne	.+14     	; 0x1692 <vfprintf+0x76>
    1684:	93 fd       	sbrc	r25, 3
    1686:	85 91       	lpm	r24, Z+
    1688:	93 ff       	sbrs	r25, 3
    168a:	81 91       	ld	r24, Z+
    168c:	1f 01       	movw	r2, r30
    168e:	85 32       	cpi	r24, 0x25	; 37
    1690:	31 f4       	brne	.+12     	; 0x169e <vfprintf+0x82>
    1692:	b7 01       	movw	r22, r14
    1694:	90 e0       	ldi	r25, 0x00	; 0
    1696:	71 d4       	rcall	.+2274   	; 0x1f7a <fputc>
    1698:	56 01       	movw	r10, r12
    169a:	65 01       	movw	r12, r10
    169c:	e6 cf       	rjmp	.-52     	; 0x166a <vfprintf+0x4e>
    169e:	10 e0       	ldi	r17, 0x00	; 0
    16a0:	51 2c       	mov	r5, r1
    16a2:	91 2c       	mov	r9, r1
    16a4:	ff e1       	ldi	r31, 0x1F	; 31
    16a6:	f9 15       	cp	r31, r9
    16a8:	d8 f0       	brcs	.+54     	; 0x16e0 <vfprintf+0xc4>
    16aa:	8b 32       	cpi	r24, 0x2B	; 43
    16ac:	79 f0       	breq	.+30     	; 0x16cc <vfprintf+0xb0>
    16ae:	38 f4       	brcc	.+14     	; 0x16be <vfprintf+0xa2>
    16b0:	80 32       	cpi	r24, 0x20	; 32
    16b2:	79 f0       	breq	.+30     	; 0x16d2 <vfprintf+0xb6>
    16b4:	83 32       	cpi	r24, 0x23	; 35
    16b6:	a1 f4       	brne	.+40     	; 0x16e0 <vfprintf+0xc4>
    16b8:	f9 2d       	mov	r31, r9
    16ba:	f0 61       	ori	r31, 0x10	; 16
    16bc:	2e c0       	rjmp	.+92     	; 0x171a <vfprintf+0xfe>
    16be:	8d 32       	cpi	r24, 0x2D	; 45
    16c0:	61 f0       	breq	.+24     	; 0x16da <vfprintf+0xbe>
    16c2:	80 33       	cpi	r24, 0x30	; 48
    16c4:	69 f4       	brne	.+26     	; 0x16e0 <vfprintf+0xc4>
    16c6:	29 2d       	mov	r18, r9
    16c8:	21 60       	ori	r18, 0x01	; 1
    16ca:	2d c0       	rjmp	.+90     	; 0x1726 <vfprintf+0x10a>
    16cc:	39 2d       	mov	r19, r9
    16ce:	32 60       	ori	r19, 0x02	; 2
    16d0:	93 2e       	mov	r9, r19
    16d2:	89 2d       	mov	r24, r9
    16d4:	84 60       	ori	r24, 0x04	; 4
    16d6:	98 2e       	mov	r9, r24
    16d8:	2a c0       	rjmp	.+84     	; 0x172e <vfprintf+0x112>
    16da:	e9 2d       	mov	r30, r9
    16dc:	e8 60       	ori	r30, 0x08	; 8
    16de:	15 c0       	rjmp	.+42     	; 0x170a <vfprintf+0xee>
    16e0:	97 fc       	sbrc	r9, 7
    16e2:	2d c0       	rjmp	.+90     	; 0x173e <vfprintf+0x122>
    16e4:	20 ed       	ldi	r18, 0xD0	; 208
    16e6:	28 0f       	add	r18, r24
    16e8:	2a 30       	cpi	r18, 0x0A	; 10
    16ea:	88 f4       	brcc	.+34     	; 0x170e <vfprintf+0xf2>
    16ec:	96 fe       	sbrs	r9, 6
    16ee:	06 c0       	rjmp	.+12     	; 0x16fc <vfprintf+0xe0>
    16f0:	3a e0       	ldi	r19, 0x0A	; 10
    16f2:	13 9f       	mul	r17, r19
    16f4:	20 0d       	add	r18, r0
    16f6:	11 24       	eor	r1, r1
    16f8:	12 2f       	mov	r17, r18
    16fa:	19 c0       	rjmp	.+50     	; 0x172e <vfprintf+0x112>
    16fc:	8a e0       	ldi	r24, 0x0A	; 10
    16fe:	58 9e       	mul	r5, r24
    1700:	20 0d       	add	r18, r0
    1702:	11 24       	eor	r1, r1
    1704:	52 2e       	mov	r5, r18
    1706:	e9 2d       	mov	r30, r9
    1708:	e0 62       	ori	r30, 0x20	; 32
    170a:	9e 2e       	mov	r9, r30
    170c:	10 c0       	rjmp	.+32     	; 0x172e <vfprintf+0x112>
    170e:	8e 32       	cpi	r24, 0x2E	; 46
    1710:	31 f4       	brne	.+12     	; 0x171e <vfprintf+0x102>
    1712:	96 fc       	sbrc	r9, 6
    1714:	cc c2       	rjmp	.+1432   	; 0x1cae <vfprintf+0x692>
    1716:	f9 2d       	mov	r31, r9
    1718:	f0 64       	ori	r31, 0x40	; 64
    171a:	9f 2e       	mov	r9, r31
    171c:	08 c0       	rjmp	.+16     	; 0x172e <vfprintf+0x112>
    171e:	8c 36       	cpi	r24, 0x6C	; 108
    1720:	21 f4       	brne	.+8      	; 0x172a <vfprintf+0x10e>
    1722:	29 2d       	mov	r18, r9
    1724:	20 68       	ori	r18, 0x80	; 128
    1726:	92 2e       	mov	r9, r18
    1728:	02 c0       	rjmp	.+4      	; 0x172e <vfprintf+0x112>
    172a:	88 36       	cpi	r24, 0x68	; 104
    172c:	41 f4       	brne	.+16     	; 0x173e <vfprintf+0x122>
    172e:	f1 01       	movw	r30, r2
    1730:	93 fd       	sbrc	r25, 3
    1732:	85 91       	lpm	r24, Z+
    1734:	93 ff       	sbrs	r25, 3
    1736:	81 91       	ld	r24, Z+
    1738:	1f 01       	movw	r2, r30
    173a:	81 11       	cpse	r24, r1
    173c:	b3 cf       	rjmp	.-154    	; 0x16a4 <vfprintf+0x88>
    173e:	9b eb       	ldi	r25, 0xBB	; 187
    1740:	98 0f       	add	r25, r24
    1742:	93 30       	cpi	r25, 0x03	; 3
    1744:	20 f4       	brcc	.+8      	; 0x174e <vfprintf+0x132>
    1746:	99 2d       	mov	r25, r9
    1748:	90 61       	ori	r25, 0x10	; 16
    174a:	80 5e       	subi	r24, 0xE0	; 224
    174c:	07 c0       	rjmp	.+14     	; 0x175c <vfprintf+0x140>
    174e:	9b e9       	ldi	r25, 0x9B	; 155
    1750:	98 0f       	add	r25, r24
    1752:	93 30       	cpi	r25, 0x03	; 3
    1754:	08 f0       	brcs	.+2      	; 0x1758 <vfprintf+0x13c>
    1756:	59 c1       	rjmp	.+690    	; 0x1a0a <vfprintf+0x3ee>
    1758:	99 2d       	mov	r25, r9
    175a:	9f 7e       	andi	r25, 0xEF	; 239
    175c:	96 ff       	sbrs	r25, 6
    175e:	16 e0       	ldi	r17, 0x06	; 6
    1760:	9f 73       	andi	r25, 0x3F	; 63
    1762:	99 2e       	mov	r9, r25
    1764:	85 36       	cpi	r24, 0x65	; 101
    1766:	19 f4       	brne	.+6      	; 0x176e <vfprintf+0x152>
    1768:	90 64       	ori	r25, 0x40	; 64
    176a:	99 2e       	mov	r9, r25
    176c:	08 c0       	rjmp	.+16     	; 0x177e <vfprintf+0x162>
    176e:	86 36       	cpi	r24, 0x66	; 102
    1770:	21 f4       	brne	.+8      	; 0x177a <vfprintf+0x15e>
    1772:	39 2f       	mov	r19, r25
    1774:	30 68       	ori	r19, 0x80	; 128
    1776:	93 2e       	mov	r9, r19
    1778:	02 c0       	rjmp	.+4      	; 0x177e <vfprintf+0x162>
    177a:	11 11       	cpse	r17, r1
    177c:	11 50       	subi	r17, 0x01	; 1
    177e:	97 fe       	sbrs	r9, 7
    1780:	07 c0       	rjmp	.+14     	; 0x1790 <vfprintf+0x174>
    1782:	1c 33       	cpi	r17, 0x3C	; 60
    1784:	50 f4       	brcc	.+20     	; 0x179a <vfprintf+0x17e>
    1786:	44 24       	eor	r4, r4
    1788:	43 94       	inc	r4
    178a:	41 0e       	add	r4, r17
    178c:	27 e0       	ldi	r18, 0x07	; 7
    178e:	0b c0       	rjmp	.+22     	; 0x17a6 <vfprintf+0x18a>
    1790:	18 30       	cpi	r17, 0x08	; 8
    1792:	38 f0       	brcs	.+14     	; 0x17a2 <vfprintf+0x186>
    1794:	27 e0       	ldi	r18, 0x07	; 7
    1796:	17 e0       	ldi	r17, 0x07	; 7
    1798:	05 c0       	rjmp	.+10     	; 0x17a4 <vfprintf+0x188>
    179a:	27 e0       	ldi	r18, 0x07	; 7
    179c:	9c e3       	ldi	r25, 0x3C	; 60
    179e:	49 2e       	mov	r4, r25
    17a0:	02 c0       	rjmp	.+4      	; 0x17a6 <vfprintf+0x18a>
    17a2:	21 2f       	mov	r18, r17
    17a4:	41 2c       	mov	r4, r1
    17a6:	56 01       	movw	r10, r12
    17a8:	84 e0       	ldi	r24, 0x04	; 4
    17aa:	a8 0e       	add	r10, r24
    17ac:	b1 1c       	adc	r11, r1
    17ae:	f6 01       	movw	r30, r12
    17b0:	60 81       	ld	r22, Z
    17b2:	71 81       	ldd	r23, Z+1	; 0x01
    17b4:	82 81       	ldd	r24, Z+2	; 0x02
    17b6:	93 81       	ldd	r25, Z+3	; 0x03
    17b8:	04 2d       	mov	r16, r4
    17ba:	a3 01       	movw	r20, r6
    17bc:	df d2       	rcall	.+1470   	; 0x1d7c <__ftoa_engine>
    17be:	6c 01       	movw	r12, r24
    17c0:	f9 81       	ldd	r31, Y+1	; 0x01
    17c2:	fc 87       	std	Y+12, r31	; 0x0c
    17c4:	f0 ff       	sbrs	r31, 0
    17c6:	02 c0       	rjmp	.+4      	; 0x17cc <vfprintf+0x1b0>
    17c8:	f3 ff       	sbrs	r31, 3
    17ca:	06 c0       	rjmp	.+12     	; 0x17d8 <vfprintf+0x1bc>
    17cc:	91 fc       	sbrc	r9, 1
    17ce:	06 c0       	rjmp	.+12     	; 0x17dc <vfprintf+0x1c0>
    17d0:	92 fe       	sbrs	r9, 2
    17d2:	06 c0       	rjmp	.+12     	; 0x17e0 <vfprintf+0x1c4>
    17d4:	00 e2       	ldi	r16, 0x20	; 32
    17d6:	05 c0       	rjmp	.+10     	; 0x17e2 <vfprintf+0x1c6>
    17d8:	0d e2       	ldi	r16, 0x2D	; 45
    17da:	03 c0       	rjmp	.+6      	; 0x17e2 <vfprintf+0x1c6>
    17dc:	0b e2       	ldi	r16, 0x2B	; 43
    17de:	01 c0       	rjmp	.+2      	; 0x17e2 <vfprintf+0x1c6>
    17e0:	00 e0       	ldi	r16, 0x00	; 0
    17e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    17e4:	8c 70       	andi	r24, 0x0C	; 12
    17e6:	19 f0       	breq	.+6      	; 0x17ee <vfprintf+0x1d2>
    17e8:	01 11       	cpse	r16, r1
    17ea:	43 c2       	rjmp	.+1158   	; 0x1c72 <vfprintf+0x656>
    17ec:	80 c2       	rjmp	.+1280   	; 0x1cee <vfprintf+0x6d2>
    17ee:	97 fe       	sbrs	r9, 7
    17f0:	10 c0       	rjmp	.+32     	; 0x1812 <vfprintf+0x1f6>
    17f2:	4c 0c       	add	r4, r12
    17f4:	fc 85       	ldd	r31, Y+12	; 0x0c
    17f6:	f4 ff       	sbrs	r31, 4
    17f8:	04 c0       	rjmp	.+8      	; 0x1802 <vfprintf+0x1e6>
    17fa:	8a 81       	ldd	r24, Y+2	; 0x02
    17fc:	81 33       	cpi	r24, 0x31	; 49
    17fe:	09 f4       	brne	.+2      	; 0x1802 <vfprintf+0x1e6>
    1800:	4a 94       	dec	r4
    1802:	14 14       	cp	r1, r4
    1804:	74 f5       	brge	.+92     	; 0x1862 <vfprintf+0x246>
    1806:	28 e0       	ldi	r18, 0x08	; 8
    1808:	24 15       	cp	r18, r4
    180a:	78 f5       	brcc	.+94     	; 0x186a <vfprintf+0x24e>
    180c:	88 e0       	ldi	r24, 0x08	; 8
    180e:	48 2e       	mov	r4, r24
    1810:	2c c0       	rjmp	.+88     	; 0x186a <vfprintf+0x24e>
    1812:	96 fc       	sbrc	r9, 6
    1814:	2a c0       	rjmp	.+84     	; 0x186a <vfprintf+0x24e>
    1816:	81 2f       	mov	r24, r17
    1818:	90 e0       	ldi	r25, 0x00	; 0
    181a:	8c 15       	cp	r24, r12
    181c:	9d 05       	cpc	r25, r13
    181e:	9c f0       	brlt	.+38     	; 0x1846 <vfprintf+0x22a>
    1820:	3c ef       	ldi	r19, 0xFC	; 252
    1822:	c3 16       	cp	r12, r19
    1824:	3f ef       	ldi	r19, 0xFF	; 255
    1826:	d3 06       	cpc	r13, r19
    1828:	74 f0       	brlt	.+28     	; 0x1846 <vfprintf+0x22a>
    182a:	89 2d       	mov	r24, r9
    182c:	80 68       	ori	r24, 0x80	; 128
    182e:	98 2e       	mov	r9, r24
    1830:	0a c0       	rjmp	.+20     	; 0x1846 <vfprintf+0x22a>
    1832:	e2 e0       	ldi	r30, 0x02	; 2
    1834:	f0 e0       	ldi	r31, 0x00	; 0
    1836:	ec 0f       	add	r30, r28
    1838:	fd 1f       	adc	r31, r29
    183a:	e1 0f       	add	r30, r17
    183c:	f1 1d       	adc	r31, r1
    183e:	80 81       	ld	r24, Z
    1840:	80 33       	cpi	r24, 0x30	; 48
    1842:	19 f4       	brne	.+6      	; 0x184a <vfprintf+0x22e>
    1844:	11 50       	subi	r17, 0x01	; 1
    1846:	11 11       	cpse	r17, r1
    1848:	f4 cf       	rjmp	.-24     	; 0x1832 <vfprintf+0x216>
    184a:	97 fe       	sbrs	r9, 7
    184c:	0e c0       	rjmp	.+28     	; 0x186a <vfprintf+0x24e>
    184e:	44 24       	eor	r4, r4
    1850:	43 94       	inc	r4
    1852:	41 0e       	add	r4, r17
    1854:	81 2f       	mov	r24, r17
    1856:	90 e0       	ldi	r25, 0x00	; 0
    1858:	c8 16       	cp	r12, r24
    185a:	d9 06       	cpc	r13, r25
    185c:	2c f4       	brge	.+10     	; 0x1868 <vfprintf+0x24c>
    185e:	1c 19       	sub	r17, r12
    1860:	04 c0       	rjmp	.+8      	; 0x186a <vfprintf+0x24e>
    1862:	44 24       	eor	r4, r4
    1864:	43 94       	inc	r4
    1866:	01 c0       	rjmp	.+2      	; 0x186a <vfprintf+0x24e>
    1868:	10 e0       	ldi	r17, 0x00	; 0
    186a:	97 fe       	sbrs	r9, 7
    186c:	06 c0       	rjmp	.+12     	; 0x187a <vfprintf+0x25e>
    186e:	1c 14       	cp	r1, r12
    1870:	1d 04       	cpc	r1, r13
    1872:	34 f4       	brge	.+12     	; 0x1880 <vfprintf+0x264>
    1874:	c6 01       	movw	r24, r12
    1876:	01 96       	adiw	r24, 0x01	; 1
    1878:	05 c0       	rjmp	.+10     	; 0x1884 <vfprintf+0x268>
    187a:	85 e0       	ldi	r24, 0x05	; 5
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	02 c0       	rjmp	.+4      	; 0x1884 <vfprintf+0x268>
    1880:	81 e0       	ldi	r24, 0x01	; 1
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	01 11       	cpse	r16, r1
    1886:	01 96       	adiw	r24, 0x01	; 1
    1888:	11 23       	and	r17, r17
    188a:	31 f0       	breq	.+12     	; 0x1898 <vfprintf+0x27c>
    188c:	21 2f       	mov	r18, r17
    188e:	30 e0       	ldi	r19, 0x00	; 0
    1890:	2f 5f       	subi	r18, 0xFF	; 255
    1892:	3f 4f       	sbci	r19, 0xFF	; 255
    1894:	82 0f       	add	r24, r18
    1896:	93 1f       	adc	r25, r19
    1898:	25 2d       	mov	r18, r5
    189a:	30 e0       	ldi	r19, 0x00	; 0
    189c:	82 17       	cp	r24, r18
    189e:	93 07       	cpc	r25, r19
    18a0:	14 f4       	brge	.+4      	; 0x18a6 <vfprintf+0x28a>
    18a2:	58 1a       	sub	r5, r24
    18a4:	01 c0       	rjmp	.+2      	; 0x18a8 <vfprintf+0x28c>
    18a6:	51 2c       	mov	r5, r1
    18a8:	89 2d       	mov	r24, r9
    18aa:	89 70       	andi	r24, 0x09	; 9
    18ac:	41 f4       	brne	.+16     	; 0x18be <vfprintf+0x2a2>
    18ae:	55 20       	and	r5, r5
    18b0:	31 f0       	breq	.+12     	; 0x18be <vfprintf+0x2a2>
    18b2:	b7 01       	movw	r22, r14
    18b4:	80 e2       	ldi	r24, 0x20	; 32
    18b6:	90 e0       	ldi	r25, 0x00	; 0
    18b8:	60 d3       	rcall	.+1728   	; 0x1f7a <fputc>
    18ba:	5a 94       	dec	r5
    18bc:	f8 cf       	rjmp	.-16     	; 0x18ae <vfprintf+0x292>
    18be:	00 23       	and	r16, r16
    18c0:	21 f0       	breq	.+8      	; 0x18ca <vfprintf+0x2ae>
    18c2:	b7 01       	movw	r22, r14
    18c4:	80 2f       	mov	r24, r16
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	58 d3       	rcall	.+1712   	; 0x1f7a <fputc>
    18ca:	93 fc       	sbrc	r9, 3
    18cc:	08 c0       	rjmp	.+16     	; 0x18de <vfprintf+0x2c2>
    18ce:	55 20       	and	r5, r5
    18d0:	31 f0       	breq	.+12     	; 0x18de <vfprintf+0x2c2>
    18d2:	b7 01       	movw	r22, r14
    18d4:	80 e3       	ldi	r24, 0x30	; 48
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	50 d3       	rcall	.+1696   	; 0x1f7a <fputc>
    18da:	5a 94       	dec	r5
    18dc:	f8 cf       	rjmp	.-16     	; 0x18ce <vfprintf+0x2b2>
    18de:	97 fe       	sbrs	r9, 7
    18e0:	4a c0       	rjmp	.+148    	; 0x1976 <vfprintf+0x35a>
    18e2:	46 01       	movw	r8, r12
    18e4:	d7 fe       	sbrs	r13, 7
    18e6:	02 c0       	rjmp	.+4      	; 0x18ec <vfprintf+0x2d0>
    18e8:	81 2c       	mov	r8, r1
    18ea:	91 2c       	mov	r9, r1
    18ec:	c6 01       	movw	r24, r12
    18ee:	88 19       	sub	r24, r8
    18f0:	99 09       	sbc	r25, r9
    18f2:	f3 01       	movw	r30, r6
    18f4:	e8 0f       	add	r30, r24
    18f6:	f9 1f       	adc	r31, r25
    18f8:	fe 87       	std	Y+14, r31	; 0x0e
    18fa:	ed 87       	std	Y+13, r30	; 0x0d
    18fc:	96 01       	movw	r18, r12
    18fe:	24 19       	sub	r18, r4
    1900:	31 09       	sbc	r19, r1
    1902:	38 8b       	std	Y+16, r19	; 0x10
    1904:	2f 87       	std	Y+15, r18	; 0x0f
    1906:	01 2f       	mov	r16, r17
    1908:	10 e0       	ldi	r17, 0x00	; 0
    190a:	11 95       	neg	r17
    190c:	01 95       	neg	r16
    190e:	11 09       	sbc	r17, r1
    1910:	3f ef       	ldi	r19, 0xFF	; 255
    1912:	83 16       	cp	r8, r19
    1914:	93 06       	cpc	r9, r19
    1916:	21 f4       	brne	.+8      	; 0x1920 <vfprintf+0x304>
    1918:	b7 01       	movw	r22, r14
    191a:	8e e2       	ldi	r24, 0x2E	; 46
    191c:	90 e0       	ldi	r25, 0x00	; 0
    191e:	2d d3       	rcall	.+1626   	; 0x1f7a <fputc>
    1920:	c8 14       	cp	r12, r8
    1922:	d9 04       	cpc	r13, r9
    1924:	4c f0       	brlt	.+18     	; 0x1938 <vfprintf+0x31c>
    1926:	8f 85       	ldd	r24, Y+15	; 0x0f
    1928:	98 89       	ldd	r25, Y+16	; 0x10
    192a:	88 15       	cp	r24, r8
    192c:	99 05       	cpc	r25, r9
    192e:	24 f4       	brge	.+8      	; 0x1938 <vfprintf+0x31c>
    1930:	ed 85       	ldd	r30, Y+13	; 0x0d
    1932:	fe 85       	ldd	r31, Y+14	; 0x0e
    1934:	81 81       	ldd	r24, Z+1	; 0x01
    1936:	01 c0       	rjmp	.+2      	; 0x193a <vfprintf+0x31e>
    1938:	80 e3       	ldi	r24, 0x30	; 48
    193a:	f1 e0       	ldi	r31, 0x01	; 1
    193c:	8f 1a       	sub	r8, r31
    193e:	91 08       	sbc	r9, r1
    1940:	2d 85       	ldd	r18, Y+13	; 0x0d
    1942:	3e 85       	ldd	r19, Y+14	; 0x0e
    1944:	2f 5f       	subi	r18, 0xFF	; 255
    1946:	3f 4f       	sbci	r19, 0xFF	; 255
    1948:	3e 87       	std	Y+14, r19	; 0x0e
    194a:	2d 87       	std	Y+13, r18	; 0x0d
    194c:	80 16       	cp	r8, r16
    194e:	91 06       	cpc	r9, r17
    1950:	24 f0       	brlt	.+8      	; 0x195a <vfprintf+0x33e>
    1952:	b7 01       	movw	r22, r14
    1954:	90 e0       	ldi	r25, 0x00	; 0
    1956:	11 d3       	rcall	.+1570   	; 0x1f7a <fputc>
    1958:	db cf       	rjmp	.-74     	; 0x1910 <vfprintf+0x2f4>
    195a:	c8 14       	cp	r12, r8
    195c:	d9 04       	cpc	r13, r9
    195e:	41 f4       	brne	.+16     	; 0x1970 <vfprintf+0x354>
    1960:	9a 81       	ldd	r25, Y+2	; 0x02
    1962:	96 33       	cpi	r25, 0x36	; 54
    1964:	20 f4       	brcc	.+8      	; 0x196e <vfprintf+0x352>
    1966:	95 33       	cpi	r25, 0x35	; 53
    1968:	19 f4       	brne	.+6      	; 0x1970 <vfprintf+0x354>
    196a:	3c 85       	ldd	r19, Y+12	; 0x0c
    196c:	34 ff       	sbrs	r19, 4
    196e:	81 e3       	ldi	r24, 0x31	; 49
    1970:	b7 01       	movw	r22, r14
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	48 c0       	rjmp	.+144    	; 0x1a06 <vfprintf+0x3ea>
    1976:	8a 81       	ldd	r24, Y+2	; 0x02
    1978:	81 33       	cpi	r24, 0x31	; 49
    197a:	19 f0       	breq	.+6      	; 0x1982 <vfprintf+0x366>
    197c:	9c 85       	ldd	r25, Y+12	; 0x0c
    197e:	9f 7e       	andi	r25, 0xEF	; 239
    1980:	9c 87       	std	Y+12, r25	; 0x0c
    1982:	b7 01       	movw	r22, r14
    1984:	90 e0       	ldi	r25, 0x00	; 0
    1986:	f9 d2       	rcall	.+1522   	; 0x1f7a <fputc>
    1988:	11 11       	cpse	r17, r1
    198a:	05 c0       	rjmp	.+10     	; 0x1996 <vfprintf+0x37a>
    198c:	94 fc       	sbrc	r9, 4
    198e:	16 c0       	rjmp	.+44     	; 0x19bc <vfprintf+0x3a0>
    1990:	85 e6       	ldi	r24, 0x65	; 101
    1992:	90 e0       	ldi	r25, 0x00	; 0
    1994:	15 c0       	rjmp	.+42     	; 0x19c0 <vfprintf+0x3a4>
    1996:	b7 01       	movw	r22, r14
    1998:	8e e2       	ldi	r24, 0x2E	; 46
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	ee d2       	rcall	.+1500   	; 0x1f7a <fputc>
    199e:	1e 5f       	subi	r17, 0xFE	; 254
    19a0:	82 e0       	ldi	r24, 0x02	; 2
    19a2:	01 e0       	ldi	r16, 0x01	; 1
    19a4:	08 0f       	add	r16, r24
    19a6:	f3 01       	movw	r30, r6
    19a8:	e8 0f       	add	r30, r24
    19aa:	f1 1d       	adc	r31, r1
    19ac:	80 81       	ld	r24, Z
    19ae:	b7 01       	movw	r22, r14
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	e3 d2       	rcall	.+1478   	; 0x1f7a <fputc>
    19b4:	80 2f       	mov	r24, r16
    19b6:	01 13       	cpse	r16, r17
    19b8:	f4 cf       	rjmp	.-24     	; 0x19a2 <vfprintf+0x386>
    19ba:	e8 cf       	rjmp	.-48     	; 0x198c <vfprintf+0x370>
    19bc:	85 e4       	ldi	r24, 0x45	; 69
    19be:	90 e0       	ldi	r25, 0x00	; 0
    19c0:	b7 01       	movw	r22, r14
    19c2:	db d2       	rcall	.+1462   	; 0x1f7a <fputc>
    19c4:	d7 fc       	sbrc	r13, 7
    19c6:	06 c0       	rjmp	.+12     	; 0x19d4 <vfprintf+0x3b8>
    19c8:	c1 14       	cp	r12, r1
    19ca:	d1 04       	cpc	r13, r1
    19cc:	41 f4       	brne	.+16     	; 0x19de <vfprintf+0x3c2>
    19ce:	ec 85       	ldd	r30, Y+12	; 0x0c
    19d0:	e4 ff       	sbrs	r30, 4
    19d2:	05 c0       	rjmp	.+10     	; 0x19de <vfprintf+0x3c2>
    19d4:	d1 94       	neg	r13
    19d6:	c1 94       	neg	r12
    19d8:	d1 08       	sbc	r13, r1
    19da:	8d e2       	ldi	r24, 0x2D	; 45
    19dc:	01 c0       	rjmp	.+2      	; 0x19e0 <vfprintf+0x3c4>
    19de:	8b e2       	ldi	r24, 0x2B	; 43
    19e0:	b7 01       	movw	r22, r14
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	ca d2       	rcall	.+1428   	; 0x1f7a <fputc>
    19e6:	80 e3       	ldi	r24, 0x30	; 48
    19e8:	2a e0       	ldi	r18, 0x0A	; 10
    19ea:	c2 16       	cp	r12, r18
    19ec:	d1 04       	cpc	r13, r1
    19ee:	2c f0       	brlt	.+10     	; 0x19fa <vfprintf+0x3de>
    19f0:	8f 5f       	subi	r24, 0xFF	; 255
    19f2:	fa e0       	ldi	r31, 0x0A	; 10
    19f4:	cf 1a       	sub	r12, r31
    19f6:	d1 08       	sbc	r13, r1
    19f8:	f7 cf       	rjmp	.-18     	; 0x19e8 <vfprintf+0x3cc>
    19fa:	b7 01       	movw	r22, r14
    19fc:	90 e0       	ldi	r25, 0x00	; 0
    19fe:	bd d2       	rcall	.+1402   	; 0x1f7a <fputc>
    1a00:	b7 01       	movw	r22, r14
    1a02:	c6 01       	movw	r24, r12
    1a04:	c0 96       	adiw	r24, 0x30	; 48
    1a06:	b9 d2       	rcall	.+1394   	; 0x1f7a <fputc>
    1a08:	49 c1       	rjmp	.+658    	; 0x1c9c <vfprintf+0x680>
    1a0a:	83 36       	cpi	r24, 0x63	; 99
    1a0c:	31 f0       	breq	.+12     	; 0x1a1a <vfprintf+0x3fe>
    1a0e:	83 37       	cpi	r24, 0x73	; 115
    1a10:	79 f0       	breq	.+30     	; 0x1a30 <vfprintf+0x414>
    1a12:	83 35       	cpi	r24, 0x53	; 83
    1a14:	09 f0       	breq	.+2      	; 0x1a18 <vfprintf+0x3fc>
    1a16:	52 c0       	rjmp	.+164    	; 0x1abc <vfprintf+0x4a0>
    1a18:	1f c0       	rjmp	.+62     	; 0x1a58 <vfprintf+0x43c>
    1a1a:	56 01       	movw	r10, r12
    1a1c:	32 e0       	ldi	r19, 0x02	; 2
    1a1e:	a3 0e       	add	r10, r19
    1a20:	b1 1c       	adc	r11, r1
    1a22:	f6 01       	movw	r30, r12
    1a24:	80 81       	ld	r24, Z
    1a26:	89 83       	std	Y+1, r24	; 0x01
    1a28:	01 e0       	ldi	r16, 0x01	; 1
    1a2a:	10 e0       	ldi	r17, 0x00	; 0
    1a2c:	63 01       	movw	r12, r6
    1a2e:	11 c0       	rjmp	.+34     	; 0x1a52 <vfprintf+0x436>
    1a30:	56 01       	movw	r10, r12
    1a32:	f2 e0       	ldi	r31, 0x02	; 2
    1a34:	af 0e       	add	r10, r31
    1a36:	b1 1c       	adc	r11, r1
    1a38:	f6 01       	movw	r30, r12
    1a3a:	c0 80       	ld	r12, Z
    1a3c:	d1 80       	ldd	r13, Z+1	; 0x01
    1a3e:	96 fe       	sbrs	r9, 6
    1a40:	03 c0       	rjmp	.+6      	; 0x1a48 <vfprintf+0x42c>
    1a42:	61 2f       	mov	r22, r17
    1a44:	70 e0       	ldi	r23, 0x00	; 0
    1a46:	02 c0       	rjmp	.+4      	; 0x1a4c <vfprintf+0x430>
    1a48:	6f ef       	ldi	r22, 0xFF	; 255
    1a4a:	7f ef       	ldi	r23, 0xFF	; 255
    1a4c:	c6 01       	movw	r24, r12
    1a4e:	8a d2       	rcall	.+1300   	; 0x1f64 <strnlen>
    1a50:	8c 01       	movw	r16, r24
    1a52:	f9 2d       	mov	r31, r9
    1a54:	ff 77       	andi	r31, 0x7F	; 127
    1a56:	13 c0       	rjmp	.+38     	; 0x1a7e <vfprintf+0x462>
    1a58:	56 01       	movw	r10, r12
    1a5a:	22 e0       	ldi	r18, 0x02	; 2
    1a5c:	a2 0e       	add	r10, r18
    1a5e:	b1 1c       	adc	r11, r1
    1a60:	f6 01       	movw	r30, r12
    1a62:	c0 80       	ld	r12, Z
    1a64:	d1 80       	ldd	r13, Z+1	; 0x01
    1a66:	96 fe       	sbrs	r9, 6
    1a68:	03 c0       	rjmp	.+6      	; 0x1a70 <vfprintf+0x454>
    1a6a:	61 2f       	mov	r22, r17
    1a6c:	70 e0       	ldi	r23, 0x00	; 0
    1a6e:	02 c0       	rjmp	.+4      	; 0x1a74 <vfprintf+0x458>
    1a70:	6f ef       	ldi	r22, 0xFF	; 255
    1a72:	7f ef       	ldi	r23, 0xFF	; 255
    1a74:	c6 01       	movw	r24, r12
    1a76:	62 d2       	rcall	.+1220   	; 0x1f3c <strnlen_P>
    1a78:	8c 01       	movw	r16, r24
    1a7a:	f9 2d       	mov	r31, r9
    1a7c:	f0 68       	ori	r31, 0x80	; 128
    1a7e:	9f 2e       	mov	r9, r31
    1a80:	f3 fd       	sbrc	r31, 3
    1a82:	18 c0       	rjmp	.+48     	; 0x1ab4 <vfprintf+0x498>
    1a84:	85 2d       	mov	r24, r5
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	08 17       	cp	r16, r24
    1a8a:	19 07       	cpc	r17, r25
    1a8c:	98 f4       	brcc	.+38     	; 0x1ab4 <vfprintf+0x498>
    1a8e:	b7 01       	movw	r22, r14
    1a90:	80 e2       	ldi	r24, 0x20	; 32
    1a92:	90 e0       	ldi	r25, 0x00	; 0
    1a94:	72 d2       	rcall	.+1252   	; 0x1f7a <fputc>
    1a96:	5a 94       	dec	r5
    1a98:	f5 cf       	rjmp	.-22     	; 0x1a84 <vfprintf+0x468>
    1a9a:	f6 01       	movw	r30, r12
    1a9c:	97 fc       	sbrc	r9, 7
    1a9e:	85 91       	lpm	r24, Z+
    1aa0:	97 fe       	sbrs	r9, 7
    1aa2:	81 91       	ld	r24, Z+
    1aa4:	6f 01       	movw	r12, r30
    1aa6:	b7 01       	movw	r22, r14
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	67 d2       	rcall	.+1230   	; 0x1f7a <fputc>
    1aac:	51 10       	cpse	r5, r1
    1aae:	5a 94       	dec	r5
    1ab0:	01 50       	subi	r16, 0x01	; 1
    1ab2:	11 09       	sbc	r17, r1
    1ab4:	01 15       	cp	r16, r1
    1ab6:	11 05       	cpc	r17, r1
    1ab8:	81 f7       	brne	.-32     	; 0x1a9a <vfprintf+0x47e>
    1aba:	f0 c0       	rjmp	.+480    	; 0x1c9c <vfprintf+0x680>
    1abc:	84 36       	cpi	r24, 0x64	; 100
    1abe:	11 f0       	breq	.+4      	; 0x1ac4 <vfprintf+0x4a8>
    1ac0:	89 36       	cpi	r24, 0x69	; 105
    1ac2:	59 f5       	brne	.+86     	; 0x1b1a <vfprintf+0x4fe>
    1ac4:	56 01       	movw	r10, r12
    1ac6:	97 fe       	sbrs	r9, 7
    1ac8:	09 c0       	rjmp	.+18     	; 0x1adc <vfprintf+0x4c0>
    1aca:	24 e0       	ldi	r18, 0x04	; 4
    1acc:	a2 0e       	add	r10, r18
    1ace:	b1 1c       	adc	r11, r1
    1ad0:	f6 01       	movw	r30, r12
    1ad2:	60 81       	ld	r22, Z
    1ad4:	71 81       	ldd	r23, Z+1	; 0x01
    1ad6:	82 81       	ldd	r24, Z+2	; 0x02
    1ad8:	93 81       	ldd	r25, Z+3	; 0x03
    1ada:	0a c0       	rjmp	.+20     	; 0x1af0 <vfprintf+0x4d4>
    1adc:	f2 e0       	ldi	r31, 0x02	; 2
    1ade:	af 0e       	add	r10, r31
    1ae0:	b1 1c       	adc	r11, r1
    1ae2:	f6 01       	movw	r30, r12
    1ae4:	60 81       	ld	r22, Z
    1ae6:	71 81       	ldd	r23, Z+1	; 0x01
    1ae8:	07 2e       	mov	r0, r23
    1aea:	00 0c       	add	r0, r0
    1aec:	88 0b       	sbc	r24, r24
    1aee:	99 0b       	sbc	r25, r25
    1af0:	f9 2d       	mov	r31, r9
    1af2:	ff 76       	andi	r31, 0x6F	; 111
    1af4:	9f 2e       	mov	r9, r31
    1af6:	97 ff       	sbrs	r25, 7
    1af8:	09 c0       	rjmp	.+18     	; 0x1b0c <vfprintf+0x4f0>
    1afa:	90 95       	com	r25
    1afc:	80 95       	com	r24
    1afe:	70 95       	com	r23
    1b00:	61 95       	neg	r22
    1b02:	7f 4f       	sbci	r23, 0xFF	; 255
    1b04:	8f 4f       	sbci	r24, 0xFF	; 255
    1b06:	9f 4f       	sbci	r25, 0xFF	; 255
    1b08:	f0 68       	ori	r31, 0x80	; 128
    1b0a:	9f 2e       	mov	r9, r31
    1b0c:	2a e0       	ldi	r18, 0x0A	; 10
    1b0e:	30 e0       	ldi	r19, 0x00	; 0
    1b10:	a3 01       	movw	r20, r6
    1b12:	fa d2       	rcall	.+1524   	; 0x2108 <__ultoa_invert>
    1b14:	c8 2e       	mov	r12, r24
    1b16:	c6 18       	sub	r12, r6
    1b18:	3e c0       	rjmp	.+124    	; 0x1b96 <vfprintf+0x57a>
    1b1a:	09 2d       	mov	r16, r9
    1b1c:	85 37       	cpi	r24, 0x75	; 117
    1b1e:	21 f4       	brne	.+8      	; 0x1b28 <vfprintf+0x50c>
    1b20:	0f 7e       	andi	r16, 0xEF	; 239
    1b22:	2a e0       	ldi	r18, 0x0A	; 10
    1b24:	30 e0       	ldi	r19, 0x00	; 0
    1b26:	1d c0       	rjmp	.+58     	; 0x1b62 <vfprintf+0x546>
    1b28:	09 7f       	andi	r16, 0xF9	; 249
    1b2a:	8f 36       	cpi	r24, 0x6F	; 111
    1b2c:	91 f0       	breq	.+36     	; 0x1b52 <vfprintf+0x536>
    1b2e:	18 f4       	brcc	.+6      	; 0x1b36 <vfprintf+0x51a>
    1b30:	88 35       	cpi	r24, 0x58	; 88
    1b32:	59 f0       	breq	.+22     	; 0x1b4a <vfprintf+0x52e>
    1b34:	bc c0       	rjmp	.+376    	; 0x1cae <vfprintf+0x692>
    1b36:	80 37       	cpi	r24, 0x70	; 112
    1b38:	19 f0       	breq	.+6      	; 0x1b40 <vfprintf+0x524>
    1b3a:	88 37       	cpi	r24, 0x78	; 120
    1b3c:	11 f0       	breq	.+4      	; 0x1b42 <vfprintf+0x526>
    1b3e:	b7 c0       	rjmp	.+366    	; 0x1cae <vfprintf+0x692>
    1b40:	00 61       	ori	r16, 0x10	; 16
    1b42:	04 ff       	sbrs	r16, 4
    1b44:	09 c0       	rjmp	.+18     	; 0x1b58 <vfprintf+0x53c>
    1b46:	04 60       	ori	r16, 0x04	; 4
    1b48:	07 c0       	rjmp	.+14     	; 0x1b58 <vfprintf+0x53c>
    1b4a:	94 fe       	sbrs	r9, 4
    1b4c:	08 c0       	rjmp	.+16     	; 0x1b5e <vfprintf+0x542>
    1b4e:	06 60       	ori	r16, 0x06	; 6
    1b50:	06 c0       	rjmp	.+12     	; 0x1b5e <vfprintf+0x542>
    1b52:	28 e0       	ldi	r18, 0x08	; 8
    1b54:	30 e0       	ldi	r19, 0x00	; 0
    1b56:	05 c0       	rjmp	.+10     	; 0x1b62 <vfprintf+0x546>
    1b58:	20 e1       	ldi	r18, 0x10	; 16
    1b5a:	30 e0       	ldi	r19, 0x00	; 0
    1b5c:	02 c0       	rjmp	.+4      	; 0x1b62 <vfprintf+0x546>
    1b5e:	20 e1       	ldi	r18, 0x10	; 16
    1b60:	32 e0       	ldi	r19, 0x02	; 2
    1b62:	56 01       	movw	r10, r12
    1b64:	07 ff       	sbrs	r16, 7
    1b66:	09 c0       	rjmp	.+18     	; 0x1b7a <vfprintf+0x55e>
    1b68:	84 e0       	ldi	r24, 0x04	; 4
    1b6a:	a8 0e       	add	r10, r24
    1b6c:	b1 1c       	adc	r11, r1
    1b6e:	f6 01       	movw	r30, r12
    1b70:	60 81       	ld	r22, Z
    1b72:	71 81       	ldd	r23, Z+1	; 0x01
    1b74:	82 81       	ldd	r24, Z+2	; 0x02
    1b76:	93 81       	ldd	r25, Z+3	; 0x03
    1b78:	08 c0       	rjmp	.+16     	; 0x1b8a <vfprintf+0x56e>
    1b7a:	f2 e0       	ldi	r31, 0x02	; 2
    1b7c:	af 0e       	add	r10, r31
    1b7e:	b1 1c       	adc	r11, r1
    1b80:	f6 01       	movw	r30, r12
    1b82:	60 81       	ld	r22, Z
    1b84:	71 81       	ldd	r23, Z+1	; 0x01
    1b86:	80 e0       	ldi	r24, 0x00	; 0
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	a3 01       	movw	r20, r6
    1b8c:	bd d2       	rcall	.+1402   	; 0x2108 <__ultoa_invert>
    1b8e:	c8 2e       	mov	r12, r24
    1b90:	c6 18       	sub	r12, r6
    1b92:	0f 77       	andi	r16, 0x7F	; 127
    1b94:	90 2e       	mov	r9, r16
    1b96:	96 fe       	sbrs	r9, 6
    1b98:	0b c0       	rjmp	.+22     	; 0x1bb0 <vfprintf+0x594>
    1b9a:	09 2d       	mov	r16, r9
    1b9c:	0e 7f       	andi	r16, 0xFE	; 254
    1b9e:	c1 16       	cp	r12, r17
    1ba0:	50 f4       	brcc	.+20     	; 0x1bb6 <vfprintf+0x59a>
    1ba2:	94 fe       	sbrs	r9, 4
    1ba4:	0a c0       	rjmp	.+20     	; 0x1bba <vfprintf+0x59e>
    1ba6:	92 fc       	sbrc	r9, 2
    1ba8:	08 c0       	rjmp	.+16     	; 0x1bba <vfprintf+0x59e>
    1baa:	09 2d       	mov	r16, r9
    1bac:	0e 7e       	andi	r16, 0xEE	; 238
    1bae:	05 c0       	rjmp	.+10     	; 0x1bba <vfprintf+0x59e>
    1bb0:	dc 2c       	mov	r13, r12
    1bb2:	09 2d       	mov	r16, r9
    1bb4:	03 c0       	rjmp	.+6      	; 0x1bbc <vfprintf+0x5a0>
    1bb6:	dc 2c       	mov	r13, r12
    1bb8:	01 c0       	rjmp	.+2      	; 0x1bbc <vfprintf+0x5a0>
    1bba:	d1 2e       	mov	r13, r17
    1bbc:	04 ff       	sbrs	r16, 4
    1bbe:	0d c0       	rjmp	.+26     	; 0x1bda <vfprintf+0x5be>
    1bc0:	fe 01       	movw	r30, r28
    1bc2:	ec 0d       	add	r30, r12
    1bc4:	f1 1d       	adc	r31, r1
    1bc6:	80 81       	ld	r24, Z
    1bc8:	80 33       	cpi	r24, 0x30	; 48
    1bca:	11 f4       	brne	.+4      	; 0x1bd0 <vfprintf+0x5b4>
    1bcc:	09 7e       	andi	r16, 0xE9	; 233
    1bce:	09 c0       	rjmp	.+18     	; 0x1be2 <vfprintf+0x5c6>
    1bd0:	02 ff       	sbrs	r16, 2
    1bd2:	06 c0       	rjmp	.+12     	; 0x1be0 <vfprintf+0x5c4>
    1bd4:	d3 94       	inc	r13
    1bd6:	d3 94       	inc	r13
    1bd8:	04 c0       	rjmp	.+8      	; 0x1be2 <vfprintf+0x5c6>
    1bda:	80 2f       	mov	r24, r16
    1bdc:	86 78       	andi	r24, 0x86	; 134
    1bde:	09 f0       	breq	.+2      	; 0x1be2 <vfprintf+0x5c6>
    1be0:	d3 94       	inc	r13
    1be2:	03 fd       	sbrc	r16, 3
    1be4:	10 c0       	rjmp	.+32     	; 0x1c06 <vfprintf+0x5ea>
    1be6:	00 ff       	sbrs	r16, 0
    1be8:	06 c0       	rjmp	.+12     	; 0x1bf6 <vfprintf+0x5da>
    1bea:	1c 2d       	mov	r17, r12
    1bec:	d5 14       	cp	r13, r5
    1bee:	78 f4       	brcc	.+30     	; 0x1c0e <vfprintf+0x5f2>
    1bf0:	15 0d       	add	r17, r5
    1bf2:	1d 19       	sub	r17, r13
    1bf4:	0c c0       	rjmp	.+24     	; 0x1c0e <vfprintf+0x5f2>
    1bf6:	d5 14       	cp	r13, r5
    1bf8:	50 f4       	brcc	.+20     	; 0x1c0e <vfprintf+0x5f2>
    1bfa:	b7 01       	movw	r22, r14
    1bfc:	80 e2       	ldi	r24, 0x20	; 32
    1bfe:	90 e0       	ldi	r25, 0x00	; 0
    1c00:	bc d1       	rcall	.+888    	; 0x1f7a <fputc>
    1c02:	d3 94       	inc	r13
    1c04:	f8 cf       	rjmp	.-16     	; 0x1bf6 <vfprintf+0x5da>
    1c06:	d5 14       	cp	r13, r5
    1c08:	10 f4       	brcc	.+4      	; 0x1c0e <vfprintf+0x5f2>
    1c0a:	5d 18       	sub	r5, r13
    1c0c:	01 c0       	rjmp	.+2      	; 0x1c10 <vfprintf+0x5f4>
    1c0e:	51 2c       	mov	r5, r1
    1c10:	04 ff       	sbrs	r16, 4
    1c12:	0f c0       	rjmp	.+30     	; 0x1c32 <vfprintf+0x616>
    1c14:	b7 01       	movw	r22, r14
    1c16:	80 e3       	ldi	r24, 0x30	; 48
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	af d1       	rcall	.+862    	; 0x1f7a <fputc>
    1c1c:	02 ff       	sbrs	r16, 2
    1c1e:	16 c0       	rjmp	.+44     	; 0x1c4c <vfprintf+0x630>
    1c20:	01 fd       	sbrc	r16, 1
    1c22:	03 c0       	rjmp	.+6      	; 0x1c2a <vfprintf+0x60e>
    1c24:	88 e7       	ldi	r24, 0x78	; 120
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	02 c0       	rjmp	.+4      	; 0x1c2e <vfprintf+0x612>
    1c2a:	88 e5       	ldi	r24, 0x58	; 88
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	b7 01       	movw	r22, r14
    1c30:	0c c0       	rjmp	.+24     	; 0x1c4a <vfprintf+0x62e>
    1c32:	80 2f       	mov	r24, r16
    1c34:	86 78       	andi	r24, 0x86	; 134
    1c36:	51 f0       	breq	.+20     	; 0x1c4c <vfprintf+0x630>
    1c38:	01 ff       	sbrs	r16, 1
    1c3a:	02 c0       	rjmp	.+4      	; 0x1c40 <vfprintf+0x624>
    1c3c:	8b e2       	ldi	r24, 0x2B	; 43
    1c3e:	01 c0       	rjmp	.+2      	; 0x1c42 <vfprintf+0x626>
    1c40:	80 e2       	ldi	r24, 0x20	; 32
    1c42:	07 fd       	sbrc	r16, 7
    1c44:	8d e2       	ldi	r24, 0x2D	; 45
    1c46:	b7 01       	movw	r22, r14
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	97 d1       	rcall	.+814    	; 0x1f7a <fputc>
    1c4c:	c1 16       	cp	r12, r17
    1c4e:	30 f4       	brcc	.+12     	; 0x1c5c <vfprintf+0x640>
    1c50:	b7 01       	movw	r22, r14
    1c52:	80 e3       	ldi	r24, 0x30	; 48
    1c54:	90 e0       	ldi	r25, 0x00	; 0
    1c56:	91 d1       	rcall	.+802    	; 0x1f7a <fputc>
    1c58:	11 50       	subi	r17, 0x01	; 1
    1c5a:	f8 cf       	rjmp	.-16     	; 0x1c4c <vfprintf+0x630>
    1c5c:	ca 94       	dec	r12
    1c5e:	f3 01       	movw	r30, r6
    1c60:	ec 0d       	add	r30, r12
    1c62:	f1 1d       	adc	r31, r1
    1c64:	80 81       	ld	r24, Z
    1c66:	b7 01       	movw	r22, r14
    1c68:	90 e0       	ldi	r25, 0x00	; 0
    1c6a:	87 d1       	rcall	.+782    	; 0x1f7a <fputc>
    1c6c:	c1 10       	cpse	r12, r1
    1c6e:	f6 cf       	rjmp	.-20     	; 0x1c5c <vfprintf+0x640>
    1c70:	15 c0       	rjmp	.+42     	; 0x1c9c <vfprintf+0x680>
    1c72:	f4 e0       	ldi	r31, 0x04	; 4
    1c74:	f5 15       	cp	r31, r5
    1c76:	50 f5       	brcc	.+84     	; 0x1ccc <vfprintf+0x6b0>
    1c78:	84 e0       	ldi	r24, 0x04	; 4
    1c7a:	58 1a       	sub	r5, r24
    1c7c:	93 fe       	sbrs	r9, 3
    1c7e:	1e c0       	rjmp	.+60     	; 0x1cbc <vfprintf+0x6a0>
    1c80:	01 11       	cpse	r16, r1
    1c82:	25 c0       	rjmp	.+74     	; 0x1cce <vfprintf+0x6b2>
    1c84:	2c 85       	ldd	r18, Y+12	; 0x0c
    1c86:	23 ff       	sbrs	r18, 3
    1c88:	27 c0       	rjmp	.+78     	; 0x1cd8 <vfprintf+0x6bc>
    1c8a:	02 ef       	ldi	r16, 0xF2	; 242
    1c8c:	10 e0       	ldi	r17, 0x00	; 0
    1c8e:	39 2d       	mov	r19, r9
    1c90:	30 71       	andi	r19, 0x10	; 16
    1c92:	93 2e       	mov	r9, r19
    1c94:	f8 01       	movw	r30, r16
    1c96:	84 91       	lpm	r24, Z
    1c98:	81 11       	cpse	r24, r1
    1c9a:	21 c0       	rjmp	.+66     	; 0x1cde <vfprintf+0x6c2>
    1c9c:	55 20       	and	r5, r5
    1c9e:	09 f4       	brne	.+2      	; 0x1ca2 <vfprintf+0x686>
    1ca0:	fc cc       	rjmp	.-1544   	; 0x169a <vfprintf+0x7e>
    1ca2:	b7 01       	movw	r22, r14
    1ca4:	80 e2       	ldi	r24, 0x20	; 32
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	68 d1       	rcall	.+720    	; 0x1f7a <fputc>
    1caa:	5a 94       	dec	r5
    1cac:	f7 cf       	rjmp	.-18     	; 0x1c9c <vfprintf+0x680>
    1cae:	f7 01       	movw	r30, r14
    1cb0:	86 81       	ldd	r24, Z+6	; 0x06
    1cb2:	97 81       	ldd	r25, Z+7	; 0x07
    1cb4:	23 c0       	rjmp	.+70     	; 0x1cfc <vfprintf+0x6e0>
    1cb6:	8f ef       	ldi	r24, 0xFF	; 255
    1cb8:	9f ef       	ldi	r25, 0xFF	; 255
    1cba:	20 c0       	rjmp	.+64     	; 0x1cfc <vfprintf+0x6e0>
    1cbc:	b7 01       	movw	r22, r14
    1cbe:	80 e2       	ldi	r24, 0x20	; 32
    1cc0:	90 e0       	ldi	r25, 0x00	; 0
    1cc2:	5b d1       	rcall	.+694    	; 0x1f7a <fputc>
    1cc4:	5a 94       	dec	r5
    1cc6:	51 10       	cpse	r5, r1
    1cc8:	f9 cf       	rjmp	.-14     	; 0x1cbc <vfprintf+0x6a0>
    1cca:	da cf       	rjmp	.-76     	; 0x1c80 <vfprintf+0x664>
    1ccc:	51 2c       	mov	r5, r1
    1cce:	b7 01       	movw	r22, r14
    1cd0:	80 2f       	mov	r24, r16
    1cd2:	90 e0       	ldi	r25, 0x00	; 0
    1cd4:	52 d1       	rcall	.+676    	; 0x1f7a <fputc>
    1cd6:	d6 cf       	rjmp	.-84     	; 0x1c84 <vfprintf+0x668>
    1cd8:	06 ef       	ldi	r16, 0xF6	; 246
    1cda:	10 e0       	ldi	r17, 0x00	; 0
    1cdc:	d8 cf       	rjmp	.-80     	; 0x1c8e <vfprintf+0x672>
    1cde:	91 10       	cpse	r9, r1
    1ce0:	80 52       	subi	r24, 0x20	; 32
    1ce2:	b7 01       	movw	r22, r14
    1ce4:	90 e0       	ldi	r25, 0x00	; 0
    1ce6:	49 d1       	rcall	.+658    	; 0x1f7a <fputc>
    1ce8:	0f 5f       	subi	r16, 0xFF	; 255
    1cea:	1f 4f       	sbci	r17, 0xFF	; 255
    1cec:	d3 cf       	rjmp	.-90     	; 0x1c94 <vfprintf+0x678>
    1cee:	23 e0       	ldi	r18, 0x03	; 3
    1cf0:	25 15       	cp	r18, r5
    1cf2:	10 f4       	brcc	.+4      	; 0x1cf8 <vfprintf+0x6dc>
    1cf4:	83 e0       	ldi	r24, 0x03	; 3
    1cf6:	c1 cf       	rjmp	.-126    	; 0x1c7a <vfprintf+0x65e>
    1cf8:	51 2c       	mov	r5, r1
    1cfa:	c4 cf       	rjmp	.-120    	; 0x1c84 <vfprintf+0x668>
    1cfc:	60 96       	adiw	r28, 0x10	; 16
    1cfe:	0f b6       	in	r0, 0x3f	; 63
    1d00:	f8 94       	cli
    1d02:	de bf       	out	0x3e, r29	; 62
    1d04:	0f be       	out	0x3f, r0	; 63
    1d06:	cd bf       	out	0x3d, r28	; 61
    1d08:	df 91       	pop	r29
    1d0a:	cf 91       	pop	r28
    1d0c:	1f 91       	pop	r17
    1d0e:	0f 91       	pop	r16
    1d10:	ff 90       	pop	r15
    1d12:	ef 90       	pop	r14
    1d14:	df 90       	pop	r13
    1d16:	cf 90       	pop	r12
    1d18:	bf 90       	pop	r11
    1d1a:	af 90       	pop	r10
    1d1c:	9f 90       	pop	r9
    1d1e:	8f 90       	pop	r8
    1d20:	7f 90       	pop	r7
    1d22:	6f 90       	pop	r6
    1d24:	5f 90       	pop	r5
    1d26:	4f 90       	pop	r4
    1d28:	3f 90       	pop	r3
    1d2a:	2f 90       	pop	r2
    1d2c:	08 95       	ret

00001d2e <__tablejump2__>:
    1d2e:	ee 0f       	add	r30, r30
    1d30:	ff 1f       	adc	r31, r31
    1d32:	88 1f       	adc	r24, r24
    1d34:	8b bf       	out	0x3b, r24	; 59
    1d36:	07 90       	elpm	r0, Z+
    1d38:	f6 91       	elpm	r31, Z
    1d3a:	e0 2d       	mov	r30, r0
    1d3c:	19 94       	eijmp

00001d3e <dtostrf>:
    1d3e:	ef 92       	push	r14
    1d40:	0f 93       	push	r16
    1d42:	1f 93       	push	r17
    1d44:	cf 93       	push	r28
    1d46:	df 93       	push	r29
    1d48:	e8 01       	movw	r28, r16
    1d4a:	47 fd       	sbrc	r20, 7
    1d4c:	02 c0       	rjmp	.+4      	; 0x1d52 <dtostrf+0x14>
    1d4e:	34 e0       	ldi	r19, 0x04	; 4
    1d50:	01 c0       	rjmp	.+2      	; 0x1d54 <dtostrf+0x16>
    1d52:	34 e1       	ldi	r19, 0x14	; 20
    1d54:	04 2e       	mov	r0, r20
    1d56:	00 0c       	add	r0, r0
    1d58:	55 0b       	sbc	r21, r21
    1d5a:	57 ff       	sbrs	r21, 7
    1d5c:	03 c0       	rjmp	.+6      	; 0x1d64 <dtostrf+0x26>
    1d5e:	51 95       	neg	r21
    1d60:	41 95       	neg	r20
    1d62:	51 09       	sbc	r21, r1
    1d64:	e3 2e       	mov	r14, r19
    1d66:	02 2f       	mov	r16, r18
    1d68:	24 2f       	mov	r18, r20
    1d6a:	ae 01       	movw	r20, r28
    1d6c:	f4 d4       	rcall	.+2536   	; 0x2756 <dtoa_prf>
    1d6e:	ce 01       	movw	r24, r28
    1d70:	df 91       	pop	r29
    1d72:	cf 91       	pop	r28
    1d74:	1f 91       	pop	r17
    1d76:	0f 91       	pop	r16
    1d78:	ef 90       	pop	r14
    1d7a:	08 95       	ret

00001d7c <__ftoa_engine>:
    1d7c:	28 30       	cpi	r18, 0x08	; 8
    1d7e:	08 f0       	brcs	.+2      	; 0x1d82 <__ftoa_engine+0x6>
    1d80:	27 e0       	ldi	r18, 0x07	; 7
    1d82:	33 27       	eor	r19, r19
    1d84:	da 01       	movw	r26, r20
    1d86:	99 0f       	add	r25, r25
    1d88:	31 1d       	adc	r19, r1
    1d8a:	87 fd       	sbrc	r24, 7
    1d8c:	91 60       	ori	r25, 0x01	; 1
    1d8e:	00 96       	adiw	r24, 0x00	; 0
    1d90:	61 05       	cpc	r22, r1
    1d92:	71 05       	cpc	r23, r1
    1d94:	39 f4       	brne	.+14     	; 0x1da4 <__ftoa_engine+0x28>
    1d96:	32 60       	ori	r19, 0x02	; 2
    1d98:	2e 5f       	subi	r18, 0xFE	; 254
    1d9a:	3d 93       	st	X+, r19
    1d9c:	30 e3       	ldi	r19, 0x30	; 48
    1d9e:	2a 95       	dec	r18
    1da0:	e1 f7       	brne	.-8      	; 0x1d9a <__ftoa_engine+0x1e>
    1da2:	08 95       	ret
    1da4:	9f 3f       	cpi	r25, 0xFF	; 255
    1da6:	30 f0       	brcs	.+12     	; 0x1db4 <__ftoa_engine+0x38>
    1da8:	80 38       	cpi	r24, 0x80	; 128
    1daa:	71 05       	cpc	r23, r1
    1dac:	61 05       	cpc	r22, r1
    1dae:	09 f0       	breq	.+2      	; 0x1db2 <__ftoa_engine+0x36>
    1db0:	3c 5f       	subi	r19, 0xFC	; 252
    1db2:	3c 5f       	subi	r19, 0xFC	; 252
    1db4:	3d 93       	st	X+, r19
    1db6:	91 30       	cpi	r25, 0x01	; 1
    1db8:	08 f0       	brcs	.+2      	; 0x1dbc <__ftoa_engine+0x40>
    1dba:	80 68       	ori	r24, 0x80	; 128
    1dbc:	91 1d       	adc	r25, r1
    1dbe:	df 93       	push	r29
    1dc0:	cf 93       	push	r28
    1dc2:	1f 93       	push	r17
    1dc4:	0f 93       	push	r16
    1dc6:	ff 92       	push	r15
    1dc8:	ef 92       	push	r14
    1dca:	19 2f       	mov	r17, r25
    1dcc:	98 7f       	andi	r25, 0xF8	; 248
    1dce:	96 95       	lsr	r25
    1dd0:	e9 2f       	mov	r30, r25
    1dd2:	96 95       	lsr	r25
    1dd4:	96 95       	lsr	r25
    1dd6:	e9 0f       	add	r30, r25
    1dd8:	ff 27       	eor	r31, r31
    1dda:	ec 5a       	subi	r30, 0xAC	; 172
    1ddc:	fe 4f       	sbci	r31, 0xFE	; 254
    1dde:	99 27       	eor	r25, r25
    1de0:	33 27       	eor	r19, r19
    1de2:	ee 24       	eor	r14, r14
    1de4:	ff 24       	eor	r15, r15
    1de6:	a7 01       	movw	r20, r14
    1de8:	e7 01       	movw	r28, r14
    1dea:	05 90       	lpm	r0, Z+
    1dec:	08 94       	sec
    1dee:	07 94       	ror	r0
    1df0:	28 f4       	brcc	.+10     	; 0x1dfc <__ftoa_engine+0x80>
    1df2:	36 0f       	add	r19, r22
    1df4:	e7 1e       	adc	r14, r23
    1df6:	f8 1e       	adc	r15, r24
    1df8:	49 1f       	adc	r20, r25
    1dfa:	51 1d       	adc	r21, r1
    1dfc:	66 0f       	add	r22, r22
    1dfe:	77 1f       	adc	r23, r23
    1e00:	88 1f       	adc	r24, r24
    1e02:	99 1f       	adc	r25, r25
    1e04:	06 94       	lsr	r0
    1e06:	a1 f7       	brne	.-24     	; 0x1df0 <__ftoa_engine+0x74>
    1e08:	05 90       	lpm	r0, Z+
    1e0a:	07 94       	ror	r0
    1e0c:	28 f4       	brcc	.+10     	; 0x1e18 <__ftoa_engine+0x9c>
    1e0e:	e7 0e       	add	r14, r23
    1e10:	f8 1e       	adc	r15, r24
    1e12:	49 1f       	adc	r20, r25
    1e14:	56 1f       	adc	r21, r22
    1e16:	c1 1d       	adc	r28, r1
    1e18:	77 0f       	add	r23, r23
    1e1a:	88 1f       	adc	r24, r24
    1e1c:	99 1f       	adc	r25, r25
    1e1e:	66 1f       	adc	r22, r22
    1e20:	06 94       	lsr	r0
    1e22:	a1 f7       	brne	.-24     	; 0x1e0c <__ftoa_engine+0x90>
    1e24:	05 90       	lpm	r0, Z+
    1e26:	07 94       	ror	r0
    1e28:	28 f4       	brcc	.+10     	; 0x1e34 <__ftoa_engine+0xb8>
    1e2a:	f8 0e       	add	r15, r24
    1e2c:	49 1f       	adc	r20, r25
    1e2e:	56 1f       	adc	r21, r22
    1e30:	c7 1f       	adc	r28, r23
    1e32:	d1 1d       	adc	r29, r1
    1e34:	88 0f       	add	r24, r24
    1e36:	99 1f       	adc	r25, r25
    1e38:	66 1f       	adc	r22, r22
    1e3a:	77 1f       	adc	r23, r23
    1e3c:	06 94       	lsr	r0
    1e3e:	a1 f7       	brne	.-24     	; 0x1e28 <__ftoa_engine+0xac>
    1e40:	05 90       	lpm	r0, Z+
    1e42:	07 94       	ror	r0
    1e44:	20 f4       	brcc	.+8      	; 0x1e4e <__ftoa_engine+0xd2>
    1e46:	49 0f       	add	r20, r25
    1e48:	56 1f       	adc	r21, r22
    1e4a:	c7 1f       	adc	r28, r23
    1e4c:	d8 1f       	adc	r29, r24
    1e4e:	99 0f       	add	r25, r25
    1e50:	66 1f       	adc	r22, r22
    1e52:	77 1f       	adc	r23, r23
    1e54:	88 1f       	adc	r24, r24
    1e56:	06 94       	lsr	r0
    1e58:	a9 f7       	brne	.-22     	; 0x1e44 <__ftoa_engine+0xc8>
    1e5a:	84 91       	lpm	r24, Z
    1e5c:	10 95       	com	r17
    1e5e:	17 70       	andi	r17, 0x07	; 7
    1e60:	41 f0       	breq	.+16     	; 0x1e72 <__ftoa_engine+0xf6>
    1e62:	d6 95       	lsr	r29
    1e64:	c7 95       	ror	r28
    1e66:	57 95       	ror	r21
    1e68:	47 95       	ror	r20
    1e6a:	f7 94       	ror	r15
    1e6c:	e7 94       	ror	r14
    1e6e:	1a 95       	dec	r17
    1e70:	c1 f7       	brne	.-16     	; 0x1e62 <__ftoa_engine+0xe6>
    1e72:	ea ef       	ldi	r30, 0xFA	; 250
    1e74:	f0 e0       	ldi	r31, 0x00	; 0
    1e76:	68 94       	set
    1e78:	15 90       	lpm	r1, Z+
    1e7a:	15 91       	lpm	r17, Z+
    1e7c:	35 91       	lpm	r19, Z+
    1e7e:	65 91       	lpm	r22, Z+
    1e80:	95 91       	lpm	r25, Z+
    1e82:	05 90       	lpm	r0, Z+
    1e84:	7f e2       	ldi	r23, 0x2F	; 47
    1e86:	73 95       	inc	r23
    1e88:	e1 18       	sub	r14, r1
    1e8a:	f1 0a       	sbc	r15, r17
    1e8c:	43 0b       	sbc	r20, r19
    1e8e:	56 0b       	sbc	r21, r22
    1e90:	c9 0b       	sbc	r28, r25
    1e92:	d0 09       	sbc	r29, r0
    1e94:	c0 f7       	brcc	.-16     	; 0x1e86 <__ftoa_engine+0x10a>
    1e96:	e1 0c       	add	r14, r1
    1e98:	f1 1e       	adc	r15, r17
    1e9a:	43 1f       	adc	r20, r19
    1e9c:	56 1f       	adc	r21, r22
    1e9e:	c9 1f       	adc	r28, r25
    1ea0:	d0 1d       	adc	r29, r0
    1ea2:	7e f4       	brtc	.+30     	; 0x1ec2 <__ftoa_engine+0x146>
    1ea4:	70 33       	cpi	r23, 0x30	; 48
    1ea6:	11 f4       	brne	.+4      	; 0x1eac <__ftoa_engine+0x130>
    1ea8:	8a 95       	dec	r24
    1eaa:	e6 cf       	rjmp	.-52     	; 0x1e78 <__ftoa_engine+0xfc>
    1eac:	e8 94       	clt
    1eae:	01 50       	subi	r16, 0x01	; 1
    1eb0:	30 f0       	brcs	.+12     	; 0x1ebe <__ftoa_engine+0x142>
    1eb2:	08 0f       	add	r16, r24
    1eb4:	0a f4       	brpl	.+2      	; 0x1eb8 <__ftoa_engine+0x13c>
    1eb6:	00 27       	eor	r16, r16
    1eb8:	02 17       	cp	r16, r18
    1eba:	08 f4       	brcc	.+2      	; 0x1ebe <__ftoa_engine+0x142>
    1ebc:	20 2f       	mov	r18, r16
    1ebe:	23 95       	inc	r18
    1ec0:	02 2f       	mov	r16, r18
    1ec2:	7a 33       	cpi	r23, 0x3A	; 58
    1ec4:	28 f0       	brcs	.+10     	; 0x1ed0 <__ftoa_engine+0x154>
    1ec6:	79 e3       	ldi	r23, 0x39	; 57
    1ec8:	7d 93       	st	X+, r23
    1eca:	2a 95       	dec	r18
    1ecc:	e9 f7       	brne	.-6      	; 0x1ec8 <__ftoa_engine+0x14c>
    1ece:	10 c0       	rjmp	.+32     	; 0x1ef0 <__ftoa_engine+0x174>
    1ed0:	7d 93       	st	X+, r23
    1ed2:	2a 95       	dec	r18
    1ed4:	89 f6       	brne	.-94     	; 0x1e78 <__ftoa_engine+0xfc>
    1ed6:	06 94       	lsr	r0
    1ed8:	97 95       	ror	r25
    1eda:	67 95       	ror	r22
    1edc:	37 95       	ror	r19
    1ede:	17 95       	ror	r17
    1ee0:	17 94       	ror	r1
    1ee2:	e1 18       	sub	r14, r1
    1ee4:	f1 0a       	sbc	r15, r17
    1ee6:	43 0b       	sbc	r20, r19
    1ee8:	56 0b       	sbc	r21, r22
    1eea:	c9 0b       	sbc	r28, r25
    1eec:	d0 09       	sbc	r29, r0
    1eee:	98 f0       	brcs	.+38     	; 0x1f16 <__ftoa_engine+0x19a>
    1ef0:	23 95       	inc	r18
    1ef2:	7e 91       	ld	r23, -X
    1ef4:	73 95       	inc	r23
    1ef6:	7a 33       	cpi	r23, 0x3A	; 58
    1ef8:	08 f0       	brcs	.+2      	; 0x1efc <__ftoa_engine+0x180>
    1efa:	70 e3       	ldi	r23, 0x30	; 48
    1efc:	7c 93       	st	X, r23
    1efe:	20 13       	cpse	r18, r16
    1f00:	b8 f7       	brcc	.-18     	; 0x1ef0 <__ftoa_engine+0x174>
    1f02:	7e 91       	ld	r23, -X
    1f04:	70 61       	ori	r23, 0x10	; 16
    1f06:	7d 93       	st	X+, r23
    1f08:	30 f0       	brcs	.+12     	; 0x1f16 <__ftoa_engine+0x19a>
    1f0a:	83 95       	inc	r24
    1f0c:	71 e3       	ldi	r23, 0x31	; 49
    1f0e:	7d 93       	st	X+, r23
    1f10:	70 e3       	ldi	r23, 0x30	; 48
    1f12:	2a 95       	dec	r18
    1f14:	e1 f7       	brne	.-8      	; 0x1f0e <__ftoa_engine+0x192>
    1f16:	11 24       	eor	r1, r1
    1f18:	ef 90       	pop	r14
    1f1a:	ff 90       	pop	r15
    1f1c:	0f 91       	pop	r16
    1f1e:	1f 91       	pop	r17
    1f20:	cf 91       	pop	r28
    1f22:	df 91       	pop	r29
    1f24:	99 27       	eor	r25, r25
    1f26:	87 fd       	sbrc	r24, 7
    1f28:	90 95       	com	r25
    1f2a:	08 95       	ret

00001f2c <tolower>:
    1f2c:	91 11       	cpse	r25, r1
    1f2e:	08 95       	ret
    1f30:	81 54       	subi	r24, 0x41	; 65
    1f32:	8a 51       	subi	r24, 0x1A	; 26
    1f34:	08 f4       	brcc	.+2      	; 0x1f38 <tolower+0xc>
    1f36:	80 5e       	subi	r24, 0xE0	; 224
    1f38:	85 5a       	subi	r24, 0xA5	; 165
    1f3a:	08 95       	ret

00001f3c <strnlen_P>:
    1f3c:	fc 01       	movw	r30, r24
    1f3e:	05 90       	lpm	r0, Z+
    1f40:	61 50       	subi	r22, 0x01	; 1
    1f42:	70 40       	sbci	r23, 0x00	; 0
    1f44:	01 10       	cpse	r0, r1
    1f46:	d8 f7       	brcc	.-10     	; 0x1f3e <strnlen_P+0x2>
    1f48:	80 95       	com	r24
    1f4a:	90 95       	com	r25
    1f4c:	8e 0f       	add	r24, r30
    1f4e:	9f 1f       	adc	r25, r31
    1f50:	08 95       	ret

00001f52 <strcmp>:
    1f52:	fb 01       	movw	r30, r22
    1f54:	dc 01       	movw	r26, r24
    1f56:	8d 91       	ld	r24, X+
    1f58:	01 90       	ld	r0, Z+
    1f5a:	80 19       	sub	r24, r0
    1f5c:	01 10       	cpse	r0, r1
    1f5e:	d9 f3       	breq	.-10     	; 0x1f56 <strcmp+0x4>
    1f60:	99 0b       	sbc	r25, r25
    1f62:	08 95       	ret

00001f64 <strnlen>:
    1f64:	fc 01       	movw	r30, r24
    1f66:	61 50       	subi	r22, 0x01	; 1
    1f68:	70 40       	sbci	r23, 0x00	; 0
    1f6a:	01 90       	ld	r0, Z+
    1f6c:	01 10       	cpse	r0, r1
    1f6e:	d8 f7       	brcc	.-10     	; 0x1f66 <strnlen+0x2>
    1f70:	80 95       	com	r24
    1f72:	90 95       	com	r25
    1f74:	8e 0f       	add	r24, r30
    1f76:	9f 1f       	adc	r25, r31
    1f78:	08 95       	ret

00001f7a <fputc>:
    1f7a:	0f 93       	push	r16
    1f7c:	1f 93       	push	r17
    1f7e:	cf 93       	push	r28
    1f80:	df 93       	push	r29
    1f82:	fb 01       	movw	r30, r22
    1f84:	23 81       	ldd	r18, Z+3	; 0x03
    1f86:	21 fd       	sbrc	r18, 1
    1f88:	03 c0       	rjmp	.+6      	; 0x1f90 <fputc+0x16>
    1f8a:	8f ef       	ldi	r24, 0xFF	; 255
    1f8c:	9f ef       	ldi	r25, 0xFF	; 255
    1f8e:	2c c0       	rjmp	.+88     	; 0x1fe8 <fputc+0x6e>
    1f90:	22 ff       	sbrs	r18, 2
    1f92:	16 c0       	rjmp	.+44     	; 0x1fc0 <fputc+0x46>
    1f94:	46 81       	ldd	r20, Z+6	; 0x06
    1f96:	57 81       	ldd	r21, Z+7	; 0x07
    1f98:	24 81       	ldd	r18, Z+4	; 0x04
    1f9a:	35 81       	ldd	r19, Z+5	; 0x05
    1f9c:	42 17       	cp	r20, r18
    1f9e:	53 07       	cpc	r21, r19
    1fa0:	44 f4       	brge	.+16     	; 0x1fb2 <fputc+0x38>
    1fa2:	a0 81       	ld	r26, Z
    1fa4:	b1 81       	ldd	r27, Z+1	; 0x01
    1fa6:	9d 01       	movw	r18, r26
    1fa8:	2f 5f       	subi	r18, 0xFF	; 255
    1faa:	3f 4f       	sbci	r19, 0xFF	; 255
    1fac:	31 83       	std	Z+1, r19	; 0x01
    1fae:	20 83       	st	Z, r18
    1fb0:	8c 93       	st	X, r24
    1fb2:	26 81       	ldd	r18, Z+6	; 0x06
    1fb4:	37 81       	ldd	r19, Z+7	; 0x07
    1fb6:	2f 5f       	subi	r18, 0xFF	; 255
    1fb8:	3f 4f       	sbci	r19, 0xFF	; 255
    1fba:	37 83       	std	Z+7, r19	; 0x07
    1fbc:	26 83       	std	Z+6, r18	; 0x06
    1fbe:	14 c0       	rjmp	.+40     	; 0x1fe8 <fputc+0x6e>
    1fc0:	8b 01       	movw	r16, r22
    1fc2:	ec 01       	movw	r28, r24
    1fc4:	fb 01       	movw	r30, r22
    1fc6:	00 84       	ldd	r0, Z+8	; 0x08
    1fc8:	f1 85       	ldd	r31, Z+9	; 0x09
    1fca:	e0 2d       	mov	r30, r0
    1fcc:	19 95       	eicall
    1fce:	89 2b       	or	r24, r25
    1fd0:	e1 f6       	brne	.-72     	; 0x1f8a <fputc+0x10>
    1fd2:	d8 01       	movw	r26, r16
    1fd4:	16 96       	adiw	r26, 0x06	; 6
    1fd6:	8d 91       	ld	r24, X+
    1fd8:	9c 91       	ld	r25, X
    1fda:	17 97       	sbiw	r26, 0x07	; 7
    1fdc:	01 96       	adiw	r24, 0x01	; 1
    1fde:	17 96       	adiw	r26, 0x07	; 7
    1fe0:	9c 93       	st	X, r25
    1fe2:	8e 93       	st	-X, r24
    1fe4:	16 97       	sbiw	r26, 0x06	; 6
    1fe6:	ce 01       	movw	r24, r28
    1fe8:	df 91       	pop	r29
    1fea:	cf 91       	pop	r28
    1fec:	1f 91       	pop	r17
    1fee:	0f 91       	pop	r16
    1ff0:	08 95       	ret

00001ff2 <snprintf>:
    1ff2:	0f 93       	push	r16
    1ff4:	1f 93       	push	r17
    1ff6:	cf 93       	push	r28
    1ff8:	df 93       	push	r29
    1ffa:	cd b7       	in	r28, 0x3d	; 61
    1ffc:	de b7       	in	r29, 0x3e	; 62
    1ffe:	2e 97       	sbiw	r28, 0x0e	; 14
    2000:	0f b6       	in	r0, 0x3f	; 63
    2002:	f8 94       	cli
    2004:	de bf       	out	0x3e, r29	; 62
    2006:	0f be       	out	0x3f, r0	; 63
    2008:	cd bf       	out	0x3d, r28	; 61
    200a:	0e 89       	ldd	r16, Y+22	; 0x16
    200c:	1f 89       	ldd	r17, Y+23	; 0x17
    200e:	88 8d       	ldd	r24, Y+24	; 0x18
    2010:	99 8d       	ldd	r25, Y+25	; 0x19
    2012:	26 e0       	ldi	r18, 0x06	; 6
    2014:	2c 83       	std	Y+4, r18	; 0x04
    2016:	1a 83       	std	Y+2, r17	; 0x02
    2018:	09 83       	std	Y+1, r16	; 0x01
    201a:	97 ff       	sbrs	r25, 7
    201c:	02 c0       	rjmp	.+4      	; 0x2022 <__DATA_REGION_LENGTH__+0x22>
    201e:	80 e0       	ldi	r24, 0x00	; 0
    2020:	90 e8       	ldi	r25, 0x80	; 128
    2022:	01 97       	sbiw	r24, 0x01	; 1
    2024:	9e 83       	std	Y+6, r25	; 0x06
    2026:	8d 83       	std	Y+5, r24	; 0x05
    2028:	ae 01       	movw	r20, r28
    202a:	44 5e       	subi	r20, 0xE4	; 228
    202c:	5f 4f       	sbci	r21, 0xFF	; 255
    202e:	6a 8d       	ldd	r22, Y+26	; 0x1a
    2030:	7b 8d       	ldd	r23, Y+27	; 0x1b
    2032:	ce 01       	movw	r24, r28
    2034:	01 96       	adiw	r24, 0x01	; 1
    2036:	f2 da       	rcall	.-2588   	; 0x161c <vfprintf>
    2038:	4d 81       	ldd	r20, Y+5	; 0x05
    203a:	5e 81       	ldd	r21, Y+6	; 0x06
    203c:	57 fd       	sbrc	r21, 7
    203e:	0a c0       	rjmp	.+20     	; 0x2054 <__DATA_REGION_LENGTH__+0x54>
    2040:	2f 81       	ldd	r18, Y+7	; 0x07
    2042:	38 85       	ldd	r19, Y+8	; 0x08
    2044:	42 17       	cp	r20, r18
    2046:	53 07       	cpc	r21, r19
    2048:	0c f4       	brge	.+2      	; 0x204c <__DATA_REGION_LENGTH__+0x4c>
    204a:	9a 01       	movw	r18, r20
    204c:	f8 01       	movw	r30, r16
    204e:	e2 0f       	add	r30, r18
    2050:	f3 1f       	adc	r31, r19
    2052:	10 82       	st	Z, r1
    2054:	2e 96       	adiw	r28, 0x0e	; 14
    2056:	0f b6       	in	r0, 0x3f	; 63
    2058:	f8 94       	cli
    205a:	de bf       	out	0x3e, r29	; 62
    205c:	0f be       	out	0x3f, r0	; 63
    205e:	cd bf       	out	0x3d, r28	; 61
    2060:	df 91       	pop	r29
    2062:	cf 91       	pop	r28
    2064:	1f 91       	pop	r17
    2066:	0f 91       	pop	r16
    2068:	08 95       	ret

0000206a <sprintf>:
    206a:	0f 93       	push	r16
    206c:	1f 93       	push	r17
    206e:	cf 93       	push	r28
    2070:	df 93       	push	r29
    2072:	cd b7       	in	r28, 0x3d	; 61
    2074:	de b7       	in	r29, 0x3e	; 62
    2076:	2e 97       	sbiw	r28, 0x0e	; 14
    2078:	0f b6       	in	r0, 0x3f	; 63
    207a:	f8 94       	cli
    207c:	de bf       	out	0x3e, r29	; 62
    207e:	0f be       	out	0x3f, r0	; 63
    2080:	cd bf       	out	0x3d, r28	; 61
    2082:	0e 89       	ldd	r16, Y+22	; 0x16
    2084:	1f 89       	ldd	r17, Y+23	; 0x17
    2086:	86 e0       	ldi	r24, 0x06	; 6
    2088:	8c 83       	std	Y+4, r24	; 0x04
    208a:	1a 83       	std	Y+2, r17	; 0x02
    208c:	09 83       	std	Y+1, r16	; 0x01
    208e:	8f ef       	ldi	r24, 0xFF	; 255
    2090:	9f e7       	ldi	r25, 0x7F	; 127
    2092:	9e 83       	std	Y+6, r25	; 0x06
    2094:	8d 83       	std	Y+5, r24	; 0x05
    2096:	ae 01       	movw	r20, r28
    2098:	46 5e       	subi	r20, 0xE6	; 230
    209a:	5f 4f       	sbci	r21, 0xFF	; 255
    209c:	68 8d       	ldd	r22, Y+24	; 0x18
    209e:	79 8d       	ldd	r23, Y+25	; 0x19
    20a0:	ce 01       	movw	r24, r28
    20a2:	01 96       	adiw	r24, 0x01	; 1
    20a4:	bb da       	rcall	.-2698   	; 0x161c <vfprintf>
    20a6:	ef 81       	ldd	r30, Y+7	; 0x07
    20a8:	f8 85       	ldd	r31, Y+8	; 0x08
    20aa:	e0 0f       	add	r30, r16
    20ac:	f1 1f       	adc	r31, r17
    20ae:	10 82       	st	Z, r1
    20b0:	2e 96       	adiw	r28, 0x0e	; 14
    20b2:	0f b6       	in	r0, 0x3f	; 63
    20b4:	f8 94       	cli
    20b6:	de bf       	out	0x3e, r29	; 62
    20b8:	0f be       	out	0x3f, r0	; 63
    20ba:	cd bf       	out	0x3d, r28	; 61
    20bc:	df 91       	pop	r29
    20be:	cf 91       	pop	r28
    20c0:	1f 91       	pop	r17
    20c2:	0f 91       	pop	r16
    20c4:	08 95       	ret

000020c6 <sscanf>:
    20c6:	cf 93       	push	r28
    20c8:	df 93       	push	r29
    20ca:	cd b7       	in	r28, 0x3d	; 61
    20cc:	de b7       	in	r29, 0x3e	; 62
    20ce:	2e 97       	sbiw	r28, 0x0e	; 14
    20d0:	0f b6       	in	r0, 0x3f	; 63
    20d2:	f8 94       	cli
    20d4:	de bf       	out	0x3e, r29	; 62
    20d6:	0f be       	out	0x3f, r0	; 63
    20d8:	cd bf       	out	0x3d, r28	; 61
    20da:	85 e0       	ldi	r24, 0x05	; 5
    20dc:	8c 83       	std	Y+4, r24	; 0x04
    20de:	8c 89       	ldd	r24, Y+20	; 0x14
    20e0:	9d 89       	ldd	r25, Y+21	; 0x15
    20e2:	9a 83       	std	Y+2, r25	; 0x02
    20e4:	89 83       	std	Y+1, r24	; 0x01
    20e6:	ae 01       	movw	r20, r28
    20e8:	48 5e       	subi	r20, 0xE8	; 232
    20ea:	5f 4f       	sbci	r21, 0xFF	; 255
    20ec:	6e 89       	ldd	r22, Y+22	; 0x16
    20ee:	7f 89       	ldd	r23, Y+23	; 0x17
    20f0:	ce 01       	movw	r24, r28
    20f2:	01 96       	adiw	r24, 0x01	; 1
    20f4:	19 d2       	rcall	.+1074   	; 0x2528 <vfscanf>
    20f6:	2e 96       	adiw	r28, 0x0e	; 14
    20f8:	0f b6       	in	r0, 0x3f	; 63
    20fa:	f8 94       	cli
    20fc:	de bf       	out	0x3e, r29	; 62
    20fe:	0f be       	out	0x3f, r0	; 63
    2100:	cd bf       	out	0x3d, r28	; 61
    2102:	df 91       	pop	r29
    2104:	cf 91       	pop	r28
    2106:	08 95       	ret

00002108 <__ultoa_invert>:
    2108:	fa 01       	movw	r30, r20
    210a:	aa 27       	eor	r26, r26
    210c:	28 30       	cpi	r18, 0x08	; 8
    210e:	51 f1       	breq	.+84     	; 0x2164 <__ultoa_invert+0x5c>
    2110:	20 31       	cpi	r18, 0x10	; 16
    2112:	81 f1       	breq	.+96     	; 0x2174 <__ultoa_invert+0x6c>
    2114:	e8 94       	clt
    2116:	6f 93       	push	r22
    2118:	6e 7f       	andi	r22, 0xFE	; 254
    211a:	6e 5f       	subi	r22, 0xFE	; 254
    211c:	7f 4f       	sbci	r23, 0xFF	; 255
    211e:	8f 4f       	sbci	r24, 0xFF	; 255
    2120:	9f 4f       	sbci	r25, 0xFF	; 255
    2122:	af 4f       	sbci	r26, 0xFF	; 255
    2124:	b1 e0       	ldi	r27, 0x01	; 1
    2126:	3e d0       	rcall	.+124    	; 0x21a4 <__ultoa_invert+0x9c>
    2128:	b4 e0       	ldi	r27, 0x04	; 4
    212a:	3c d0       	rcall	.+120    	; 0x21a4 <__ultoa_invert+0x9c>
    212c:	67 0f       	add	r22, r23
    212e:	78 1f       	adc	r23, r24
    2130:	89 1f       	adc	r24, r25
    2132:	9a 1f       	adc	r25, r26
    2134:	a1 1d       	adc	r26, r1
    2136:	68 0f       	add	r22, r24
    2138:	79 1f       	adc	r23, r25
    213a:	8a 1f       	adc	r24, r26
    213c:	91 1d       	adc	r25, r1
    213e:	a1 1d       	adc	r26, r1
    2140:	6a 0f       	add	r22, r26
    2142:	71 1d       	adc	r23, r1
    2144:	81 1d       	adc	r24, r1
    2146:	91 1d       	adc	r25, r1
    2148:	a1 1d       	adc	r26, r1
    214a:	20 d0       	rcall	.+64     	; 0x218c <__ultoa_invert+0x84>
    214c:	09 f4       	brne	.+2      	; 0x2150 <__ultoa_invert+0x48>
    214e:	68 94       	set
    2150:	3f 91       	pop	r19
    2152:	2a e0       	ldi	r18, 0x0A	; 10
    2154:	26 9f       	mul	r18, r22
    2156:	11 24       	eor	r1, r1
    2158:	30 19       	sub	r19, r0
    215a:	30 5d       	subi	r19, 0xD0	; 208
    215c:	31 93       	st	Z+, r19
    215e:	de f6       	brtc	.-74     	; 0x2116 <__ultoa_invert+0xe>
    2160:	cf 01       	movw	r24, r30
    2162:	08 95       	ret
    2164:	46 2f       	mov	r20, r22
    2166:	47 70       	andi	r20, 0x07	; 7
    2168:	40 5d       	subi	r20, 0xD0	; 208
    216a:	41 93       	st	Z+, r20
    216c:	b3 e0       	ldi	r27, 0x03	; 3
    216e:	0f d0       	rcall	.+30     	; 0x218e <__ultoa_invert+0x86>
    2170:	c9 f7       	brne	.-14     	; 0x2164 <__ultoa_invert+0x5c>
    2172:	f6 cf       	rjmp	.-20     	; 0x2160 <__ultoa_invert+0x58>
    2174:	46 2f       	mov	r20, r22
    2176:	4f 70       	andi	r20, 0x0F	; 15
    2178:	40 5d       	subi	r20, 0xD0	; 208
    217a:	4a 33       	cpi	r20, 0x3A	; 58
    217c:	18 f0       	brcs	.+6      	; 0x2184 <__ultoa_invert+0x7c>
    217e:	49 5d       	subi	r20, 0xD9	; 217
    2180:	31 fd       	sbrc	r19, 1
    2182:	40 52       	subi	r20, 0x20	; 32
    2184:	41 93       	st	Z+, r20
    2186:	02 d0       	rcall	.+4      	; 0x218c <__ultoa_invert+0x84>
    2188:	a9 f7       	brne	.-22     	; 0x2174 <__ultoa_invert+0x6c>
    218a:	ea cf       	rjmp	.-44     	; 0x2160 <__ultoa_invert+0x58>
    218c:	b4 e0       	ldi	r27, 0x04	; 4
    218e:	a6 95       	lsr	r26
    2190:	97 95       	ror	r25
    2192:	87 95       	ror	r24
    2194:	77 95       	ror	r23
    2196:	67 95       	ror	r22
    2198:	ba 95       	dec	r27
    219a:	c9 f7       	brne	.-14     	; 0x218e <__ultoa_invert+0x86>
    219c:	00 97       	sbiw	r24, 0x00	; 0
    219e:	61 05       	cpc	r22, r1
    21a0:	71 05       	cpc	r23, r1
    21a2:	08 95       	ret
    21a4:	9b 01       	movw	r18, r22
    21a6:	ac 01       	movw	r20, r24
    21a8:	0a 2e       	mov	r0, r26
    21aa:	06 94       	lsr	r0
    21ac:	57 95       	ror	r21
    21ae:	47 95       	ror	r20
    21b0:	37 95       	ror	r19
    21b2:	27 95       	ror	r18
    21b4:	ba 95       	dec	r27
    21b6:	c9 f7       	brne	.-14     	; 0x21aa <__ultoa_invert+0xa2>
    21b8:	62 0f       	add	r22, r18
    21ba:	73 1f       	adc	r23, r19
    21bc:	84 1f       	adc	r24, r20
    21be:	95 1f       	adc	r25, r21
    21c0:	a0 1d       	adc	r26, r0
    21c2:	08 95       	ret

000021c4 <putval>:
    21c4:	20 fd       	sbrc	r18, 0
    21c6:	09 c0       	rjmp	.+18     	; 0x21da <putval+0x16>
    21c8:	fc 01       	movw	r30, r24
    21ca:	23 fd       	sbrc	r18, 3
    21cc:	05 c0       	rjmp	.+10     	; 0x21d8 <putval+0x14>
    21ce:	22 ff       	sbrs	r18, 2
    21d0:	02 c0       	rjmp	.+4      	; 0x21d6 <putval+0x12>
    21d2:	73 83       	std	Z+3, r23	; 0x03
    21d4:	62 83       	std	Z+2, r22	; 0x02
    21d6:	51 83       	std	Z+1, r21	; 0x01
    21d8:	40 83       	st	Z, r20
    21da:	08 95       	ret

000021dc <mulacc>:
    21dc:	44 fd       	sbrc	r20, 4
    21de:	17 c0       	rjmp	.+46     	; 0x220e <__stack+0xf>
    21e0:	46 fd       	sbrc	r20, 6
    21e2:	17 c0       	rjmp	.+46     	; 0x2212 <__stack+0x13>
    21e4:	ab 01       	movw	r20, r22
    21e6:	bc 01       	movw	r22, r24
    21e8:	da 01       	movw	r26, r20
    21ea:	fb 01       	movw	r30, r22
    21ec:	aa 0f       	add	r26, r26
    21ee:	bb 1f       	adc	r27, r27
    21f0:	ee 1f       	adc	r30, r30
    21f2:	ff 1f       	adc	r31, r31
    21f4:	10 94       	com	r1
    21f6:	d1 f7       	brne	.-12     	; 0x21ec <mulacc+0x10>
    21f8:	4a 0f       	add	r20, r26
    21fa:	5b 1f       	adc	r21, r27
    21fc:	6e 1f       	adc	r22, r30
    21fe:	7f 1f       	adc	r23, r31
    2200:	cb 01       	movw	r24, r22
    2202:	ba 01       	movw	r22, r20
    2204:	66 0f       	add	r22, r22
    2206:	77 1f       	adc	r23, r23
    2208:	88 1f       	adc	r24, r24
    220a:	99 1f       	adc	r25, r25
    220c:	09 c0       	rjmp	.+18     	; 0x2220 <__stack+0x21>
    220e:	33 e0       	ldi	r19, 0x03	; 3
    2210:	01 c0       	rjmp	.+2      	; 0x2214 <__stack+0x15>
    2212:	34 e0       	ldi	r19, 0x04	; 4
    2214:	66 0f       	add	r22, r22
    2216:	77 1f       	adc	r23, r23
    2218:	88 1f       	adc	r24, r24
    221a:	99 1f       	adc	r25, r25
    221c:	31 50       	subi	r19, 0x01	; 1
    221e:	d1 f7       	brne	.-12     	; 0x2214 <__stack+0x15>
    2220:	62 0f       	add	r22, r18
    2222:	71 1d       	adc	r23, r1
    2224:	81 1d       	adc	r24, r1
    2226:	91 1d       	adc	r25, r1
    2228:	08 95       	ret

0000222a <skip_spaces>:
    222a:	0f 93       	push	r16
    222c:	1f 93       	push	r17
    222e:	cf 93       	push	r28
    2230:	df 93       	push	r29
    2232:	8c 01       	movw	r16, r24
    2234:	c8 01       	movw	r24, r16
    2236:	18 d4       	rcall	.+2096   	; 0x2a68 <fgetc>
    2238:	ec 01       	movw	r28, r24
    223a:	97 fd       	sbrc	r25, 7
    223c:	06 c0       	rjmp	.+12     	; 0x224a <skip_spaces+0x20>
    223e:	01 d4       	rcall	.+2050   	; 0x2a42 <isspace>
    2240:	89 2b       	or	r24, r25
    2242:	c1 f7       	brne	.-16     	; 0x2234 <skip_spaces+0xa>
    2244:	b8 01       	movw	r22, r16
    2246:	ce 01       	movw	r24, r28
    2248:	4d d4       	rcall	.+2202   	; 0x2ae4 <ungetc>
    224a:	ce 01       	movw	r24, r28
    224c:	df 91       	pop	r29
    224e:	cf 91       	pop	r28
    2250:	1f 91       	pop	r17
    2252:	0f 91       	pop	r16
    2254:	08 95       	ret

00002256 <conv_int>:
    2256:	8f 92       	push	r8
    2258:	9f 92       	push	r9
    225a:	af 92       	push	r10
    225c:	bf 92       	push	r11
    225e:	ef 92       	push	r14
    2260:	ff 92       	push	r15
    2262:	0f 93       	push	r16
    2264:	1f 93       	push	r17
    2266:	cf 93       	push	r28
    2268:	df 93       	push	r29
    226a:	8c 01       	movw	r16, r24
    226c:	d6 2f       	mov	r29, r22
    226e:	7a 01       	movw	r14, r20
    2270:	b2 2e       	mov	r11, r18
    2272:	fa d3       	rcall	.+2036   	; 0x2a68 <fgetc>
    2274:	9c 01       	movw	r18, r24
    2276:	33 27       	eor	r19, r19
    2278:	2b 32       	cpi	r18, 0x2B	; 43
    227a:	31 05       	cpc	r19, r1
    227c:	31 f0       	breq	.+12     	; 0x228a <conv_int+0x34>
    227e:	2d 32       	cpi	r18, 0x2D	; 45
    2280:	31 05       	cpc	r19, r1
    2282:	59 f4       	brne	.+22     	; 0x229a <conv_int+0x44>
    2284:	8b 2d       	mov	r24, r11
    2286:	80 68       	ori	r24, 0x80	; 128
    2288:	b8 2e       	mov	r11, r24
    228a:	d1 50       	subi	r29, 0x01	; 1
    228c:	11 f4       	brne	.+4      	; 0x2292 <conv_int+0x3c>
    228e:	80 e0       	ldi	r24, 0x00	; 0
    2290:	61 c0       	rjmp	.+194    	; 0x2354 <conv_int+0xfe>
    2292:	c8 01       	movw	r24, r16
    2294:	e9 d3       	rcall	.+2002   	; 0x2a68 <fgetc>
    2296:	97 fd       	sbrc	r25, 7
    2298:	fa cf       	rjmp	.-12     	; 0x228e <conv_int+0x38>
    229a:	cb 2d       	mov	r28, r11
    229c:	cd 7f       	andi	r28, 0xFD	; 253
    229e:	2b 2d       	mov	r18, r11
    22a0:	20 73       	andi	r18, 0x30	; 48
    22a2:	f9 f4       	brne	.+62     	; 0x22e2 <conv_int+0x8c>
    22a4:	80 33       	cpi	r24, 0x30	; 48
    22a6:	e9 f4       	brne	.+58     	; 0x22e2 <conv_int+0x8c>
    22a8:	aa 24       	eor	r10, r10
    22aa:	aa 94       	dec	r10
    22ac:	ad 0e       	add	r10, r29
    22ae:	09 f4       	brne	.+2      	; 0x22b2 <conv_int+0x5c>
    22b0:	3e c0       	rjmp	.+124    	; 0x232e <conv_int+0xd8>
    22b2:	c8 01       	movw	r24, r16
    22b4:	d9 d3       	rcall	.+1970   	; 0x2a68 <fgetc>
    22b6:	97 fd       	sbrc	r25, 7
    22b8:	3a c0       	rjmp	.+116    	; 0x232e <conv_int+0xd8>
    22ba:	9c 01       	movw	r18, r24
    22bc:	2f 7d       	andi	r18, 0xDF	; 223
    22be:	33 27       	eor	r19, r19
    22c0:	28 35       	cpi	r18, 0x58	; 88
    22c2:	31 05       	cpc	r19, r1
    22c4:	41 f4       	brne	.+16     	; 0x22d6 <conv_int+0x80>
    22c6:	c2 64       	ori	r28, 0x42	; 66
    22c8:	d2 50       	subi	r29, 0x02	; 2
    22ca:	89 f1       	breq	.+98     	; 0x232e <conv_int+0xd8>
    22cc:	c8 01       	movw	r24, r16
    22ce:	cc d3       	rcall	.+1944   	; 0x2a68 <fgetc>
    22d0:	97 ff       	sbrs	r25, 7
    22d2:	07 c0       	rjmp	.+14     	; 0x22e2 <conv_int+0x8c>
    22d4:	2c c0       	rjmp	.+88     	; 0x232e <conv_int+0xd8>
    22d6:	b6 fe       	sbrs	r11, 6
    22d8:	02 c0       	rjmp	.+4      	; 0x22de <conv_int+0x88>
    22da:	c2 60       	ori	r28, 0x02	; 2
    22dc:	01 c0       	rjmp	.+2      	; 0x22e0 <conv_int+0x8a>
    22de:	c2 61       	ori	r28, 0x12	; 18
    22e0:	da 2d       	mov	r29, r10
    22e2:	81 2c       	mov	r8, r1
    22e4:	91 2c       	mov	r9, r1
    22e6:	54 01       	movw	r10, r8
    22e8:	20 ed       	ldi	r18, 0xD0	; 208
    22ea:	28 0f       	add	r18, r24
    22ec:	28 30       	cpi	r18, 0x08	; 8
    22ee:	78 f0       	brcs	.+30     	; 0x230e <conv_int+0xb8>
    22f0:	c4 ff       	sbrs	r28, 4
    22f2:	03 c0       	rjmp	.+6      	; 0x22fa <conv_int+0xa4>
    22f4:	b8 01       	movw	r22, r16
    22f6:	f6 d3       	rcall	.+2028   	; 0x2ae4 <ungetc>
    22f8:	17 c0       	rjmp	.+46     	; 0x2328 <conv_int+0xd2>
    22fa:	2a 30       	cpi	r18, 0x0A	; 10
    22fc:	40 f0       	brcs	.+16     	; 0x230e <conv_int+0xb8>
    22fe:	c6 ff       	sbrs	r28, 6
    2300:	f9 cf       	rjmp	.-14     	; 0x22f4 <conv_int+0x9e>
    2302:	2f 7d       	andi	r18, 0xDF	; 223
    2304:	3f ee       	ldi	r19, 0xEF	; 239
    2306:	32 0f       	add	r19, r18
    2308:	36 30       	cpi	r19, 0x06	; 6
    230a:	a0 f7       	brcc	.-24     	; 0x22f4 <conv_int+0x9e>
    230c:	27 50       	subi	r18, 0x07	; 7
    230e:	4c 2f       	mov	r20, r28
    2310:	c5 01       	movw	r24, r10
    2312:	b4 01       	movw	r22, r8
    2314:	63 df       	rcall	.-314    	; 0x21dc <mulacc>
    2316:	4b 01       	movw	r8, r22
    2318:	5c 01       	movw	r10, r24
    231a:	c2 60       	ori	r28, 0x02	; 2
    231c:	d1 50       	subi	r29, 0x01	; 1
    231e:	51 f0       	breq	.+20     	; 0x2334 <conv_int+0xde>
    2320:	c8 01       	movw	r24, r16
    2322:	a2 d3       	rcall	.+1860   	; 0x2a68 <fgetc>
    2324:	97 ff       	sbrs	r25, 7
    2326:	e0 cf       	rjmp	.-64     	; 0x22e8 <conv_int+0x92>
    2328:	c1 fd       	sbrc	r28, 1
    232a:	04 c0       	rjmp	.+8      	; 0x2334 <conv_int+0xde>
    232c:	b0 cf       	rjmp	.-160    	; 0x228e <conv_int+0x38>
    232e:	81 2c       	mov	r8, r1
    2330:	91 2c       	mov	r9, r1
    2332:	54 01       	movw	r10, r8
    2334:	c7 ff       	sbrs	r28, 7
    2336:	08 c0       	rjmp	.+16     	; 0x2348 <conv_int+0xf2>
    2338:	b0 94       	com	r11
    233a:	a0 94       	com	r10
    233c:	90 94       	com	r9
    233e:	80 94       	com	r8
    2340:	81 1c       	adc	r8, r1
    2342:	91 1c       	adc	r9, r1
    2344:	a1 1c       	adc	r10, r1
    2346:	b1 1c       	adc	r11, r1
    2348:	2c 2f       	mov	r18, r28
    234a:	b5 01       	movw	r22, r10
    234c:	a4 01       	movw	r20, r8
    234e:	c7 01       	movw	r24, r14
    2350:	39 df       	rcall	.-398    	; 0x21c4 <putval>
    2352:	81 e0       	ldi	r24, 0x01	; 1
    2354:	df 91       	pop	r29
    2356:	cf 91       	pop	r28
    2358:	1f 91       	pop	r17
    235a:	0f 91       	pop	r16
    235c:	ff 90       	pop	r15
    235e:	ef 90       	pop	r14
    2360:	bf 90       	pop	r11
    2362:	af 90       	pop	r10
    2364:	9f 90       	pop	r9
    2366:	8f 90       	pop	r8
    2368:	08 95       	ret

0000236a <conv_brk>:
    236a:	5f 92       	push	r5
    236c:	6f 92       	push	r6
    236e:	7f 92       	push	r7
    2370:	8f 92       	push	r8
    2372:	9f 92       	push	r9
    2374:	af 92       	push	r10
    2376:	bf 92       	push	r11
    2378:	cf 92       	push	r12
    237a:	df 92       	push	r13
    237c:	ef 92       	push	r14
    237e:	ff 92       	push	r15
    2380:	0f 93       	push	r16
    2382:	1f 93       	push	r17
    2384:	cf 93       	push	r28
    2386:	df 93       	push	r29
    2388:	cd b7       	in	r28, 0x3d	; 61
    238a:	de b7       	in	r29, 0x3e	; 62
    238c:	a0 97       	sbiw	r28, 0x20	; 32
    238e:	0f b6       	in	r0, 0x3f	; 63
    2390:	f8 94       	cli
    2392:	de bf       	out	0x3e, r29	; 62
    2394:	0f be       	out	0x3f, r0	; 63
    2396:	cd bf       	out	0x3d, r28	; 61
    2398:	5c 01       	movw	r10, r24
    239a:	96 2e       	mov	r9, r22
    239c:	7a 01       	movw	r14, r20
    239e:	f9 01       	movw	r30, r18
    23a0:	8e 01       	movw	r16, r28
    23a2:	0f 5f       	subi	r16, 0xFF	; 255
    23a4:	1f 4f       	sbci	r17, 0xFF	; 255
    23a6:	68 01       	movw	r12, r16
    23a8:	80 e2       	ldi	r24, 0x20	; 32
    23aa:	d8 01       	movw	r26, r16
    23ac:	1d 92       	st	X+, r1
    23ae:	8a 95       	dec	r24
    23b0:	e9 f7       	brne	.-6      	; 0x23ac <conv_brk+0x42>
    23b2:	d5 01       	movw	r26, r10
    23b4:	13 96       	adiw	r26, 0x03	; 3
    23b6:	8c 90       	ld	r8, X
    23b8:	80 e0       	ldi	r24, 0x00	; 0
    23ba:	90 e0       	ldi	r25, 0x00	; 0
    23bc:	61 2c       	mov	r6, r1
    23be:	71 2c       	mov	r7, r1
    23c0:	30 e0       	ldi	r19, 0x00	; 0
    23c2:	61 e0       	ldi	r22, 0x01	; 1
    23c4:	70 e0       	ldi	r23, 0x00	; 0
    23c6:	83 fc       	sbrc	r8, 3
    23c8:	25 91       	lpm	r18, Z+
    23ca:	83 fe       	sbrs	r8, 3
    23cc:	21 91       	ld	r18, Z+
    23ce:	8f 01       	movw	r16, r30
    23d0:	52 2e       	mov	r5, r18
    23d2:	21 11       	cpse	r18, r1
    23d4:	03 c0       	rjmp	.+6      	; 0x23dc <conv_brk+0x72>
    23d6:	80 e0       	ldi	r24, 0x00	; 0
    23d8:	90 e0       	ldi	r25, 0x00	; 0
    23da:	90 c0       	rjmp	.+288    	; 0x24fc <conv_brk+0x192>
    23dc:	2e 35       	cpi	r18, 0x5E	; 94
    23de:	11 f4       	brne	.+4      	; 0x23e4 <conv_brk+0x7a>
    23e0:	00 97       	sbiw	r24, 0x00	; 0
    23e2:	51 f1       	breq	.+84     	; 0x2438 <conv_brk+0xce>
    23e4:	43 2f       	mov	r20, r19
    23e6:	50 e0       	ldi	r21, 0x00	; 0
    23e8:	48 17       	cp	r20, r24
    23ea:	59 07       	cpc	r21, r25
    23ec:	3c f4       	brge	.+14     	; 0x23fc <conv_brk+0x92>
    23ee:	2d 35       	cpi	r18, 0x5D	; 93
    23f0:	59 f1       	breq	.+86     	; 0x2448 <conv_brk+0xde>
    23f2:	2d 32       	cpi	r18, 0x2D	; 45
    23f4:	19 f4       	brne	.+6      	; 0x23fc <conv_brk+0x92>
    23f6:	77 20       	and	r7, r7
    23f8:	09 f1       	breq	.+66     	; 0x243c <conv_brk+0xd2>
    23fa:	03 c0       	rjmp	.+6      	; 0x2402 <conv_brk+0x98>
    23fc:	77 20       	and	r7, r7
    23fe:	09 f4       	brne	.+2      	; 0x2402 <conv_brk+0x98>
    2400:	68 c0       	rjmp	.+208    	; 0x24d2 <conv_brk+0x168>
    2402:	45 2d       	mov	r20, r5
    2404:	46 95       	lsr	r20
    2406:	46 95       	lsr	r20
    2408:	46 95       	lsr	r20
    240a:	d6 01       	movw	r26, r12
    240c:	a4 0f       	add	r26, r20
    240e:	b1 1d       	adc	r27, r1
    2410:	45 2d       	mov	r20, r5
    2412:	47 70       	andi	r20, 0x07	; 7
    2414:	8b 01       	movw	r16, r22
    2416:	02 c0       	rjmp	.+4      	; 0x241c <conv_brk+0xb2>
    2418:	00 0f       	add	r16, r16
    241a:	11 1f       	adc	r17, r17
    241c:	4a 95       	dec	r20
    241e:	e2 f7       	brpl	.-8      	; 0x2418 <conv_brk+0xae>
    2420:	a8 01       	movw	r20, r16
    2422:	5c 91       	ld	r21, X
    2424:	45 2b       	or	r20, r21
    2426:	4c 93       	st	X, r20
    2428:	65 14       	cp	r6, r5
    242a:	59 f0       	breq	.+22     	; 0x2442 <conv_brk+0xd8>
    242c:	56 14       	cp	r5, r6
    242e:	10 f4       	brcc	.+4      	; 0x2434 <conv_brk+0xca>
    2430:	53 94       	inc	r5
    2432:	e7 cf       	rjmp	.-50     	; 0x2402 <conv_brk+0x98>
    2434:	5a 94       	dec	r5
    2436:	e5 cf       	rjmp	.-54     	; 0x2402 <conv_brk+0x98>
    2438:	31 e0       	ldi	r19, 0x01	; 1
    243a:	04 c0       	rjmp	.+8      	; 0x2444 <conv_brk+0xda>
    243c:	77 24       	eor	r7, r7
    243e:	73 94       	inc	r7
    2440:	01 c0       	rjmp	.+2      	; 0x2444 <conv_brk+0xda>
    2442:	71 2c       	mov	r7, r1
    2444:	01 96       	adiw	r24, 0x01	; 1
    2446:	bf cf       	rjmp	.-130    	; 0x23c6 <conv_brk+0x5c>
    2448:	77 20       	and	r7, r7
    244a:	19 f0       	breq	.+6      	; 0x2452 <conv_brk+0xe8>
    244c:	8e 81       	ldd	r24, Y+6	; 0x06
    244e:	80 62       	ori	r24, 0x20	; 32
    2450:	8e 83       	std	Y+6, r24	; 0x06
    2452:	31 11       	cpse	r19, r1
    2454:	03 c0       	rjmp	.+6      	; 0x245c <conv_brk+0xf2>
    2456:	88 24       	eor	r8, r8
    2458:	83 94       	inc	r8
    245a:	17 c0       	rjmp	.+46     	; 0x248a <conv_brk+0x120>
    245c:	f6 01       	movw	r30, r12
    245e:	9e 01       	movw	r18, r28
    2460:	2f 5d       	subi	r18, 0xDF	; 223
    2462:	3f 4f       	sbci	r19, 0xFF	; 255
    2464:	80 81       	ld	r24, Z
    2466:	80 95       	com	r24
    2468:	81 93       	st	Z+, r24
    246a:	2e 17       	cp	r18, r30
    246c:	3f 07       	cpc	r19, r31
    246e:	d1 f7       	brne	.-12     	; 0x2464 <conv_brk+0xfa>
    2470:	f2 cf       	rjmp	.-28     	; 0x2456 <conv_brk+0xec>
    2472:	e1 14       	cp	r14, r1
    2474:	f1 04       	cpc	r15, r1
    2476:	29 f0       	breq	.+10     	; 0x2482 <conv_brk+0x118>
    2478:	d7 01       	movw	r26, r14
    247a:	8c 93       	st	X, r24
    247c:	f7 01       	movw	r30, r14
    247e:	31 96       	adiw	r30, 0x01	; 1
    2480:	7f 01       	movw	r14, r30
    2482:	9a 94       	dec	r9
    2484:	81 2c       	mov	r8, r1
    2486:	99 20       	and	r9, r9
    2488:	e9 f0       	breq	.+58     	; 0x24c4 <conv_brk+0x15a>
    248a:	c5 01       	movw	r24, r10
    248c:	ed d2       	rcall	.+1498   	; 0x2a68 <fgetc>
    248e:	97 fd       	sbrc	r25, 7
    2490:	17 c0       	rjmp	.+46     	; 0x24c0 <conv_brk+0x156>
    2492:	fc 01       	movw	r30, r24
    2494:	ff 27       	eor	r31, r31
    2496:	23 e0       	ldi	r18, 0x03	; 3
    2498:	f5 95       	asr	r31
    249a:	e7 95       	ror	r30
    249c:	2a 95       	dec	r18
    249e:	e1 f7       	brne	.-8      	; 0x2498 <conv_brk+0x12e>
    24a0:	ec 0d       	add	r30, r12
    24a2:	fd 1d       	adc	r31, r13
    24a4:	20 81       	ld	r18, Z
    24a6:	30 e0       	ldi	r19, 0x00	; 0
    24a8:	ac 01       	movw	r20, r24
    24aa:	47 70       	andi	r20, 0x07	; 7
    24ac:	55 27       	eor	r21, r21
    24ae:	02 c0       	rjmp	.+4      	; 0x24b4 <conv_brk+0x14a>
    24b0:	35 95       	asr	r19
    24b2:	27 95       	ror	r18
    24b4:	4a 95       	dec	r20
    24b6:	e2 f7       	brpl	.-8      	; 0x24b0 <conv_brk+0x146>
    24b8:	20 fd       	sbrc	r18, 0
    24ba:	db cf       	rjmp	.-74     	; 0x2472 <conv_brk+0x108>
    24bc:	b5 01       	movw	r22, r10
    24be:	12 d3       	rcall	.+1572   	; 0x2ae4 <ungetc>
    24c0:	81 10       	cpse	r8, r1
    24c2:	89 cf       	rjmp	.-238    	; 0x23d6 <conv_brk+0x6c>
    24c4:	e1 14       	cp	r14, r1
    24c6:	f1 04       	cpc	r15, r1
    24c8:	11 f0       	breq	.+4      	; 0x24ce <conv_brk+0x164>
    24ca:	d7 01       	movw	r26, r14
    24cc:	1c 92       	st	X, r1
    24ce:	c8 01       	movw	r24, r16
    24d0:	15 c0       	rjmp	.+42     	; 0x24fc <conv_brk+0x192>
    24d2:	42 2f       	mov	r20, r18
    24d4:	46 95       	lsr	r20
    24d6:	46 95       	lsr	r20
    24d8:	46 95       	lsr	r20
    24da:	d6 01       	movw	r26, r12
    24dc:	a4 0f       	add	r26, r20
    24de:	b1 1d       	adc	r27, r1
    24e0:	42 2f       	mov	r20, r18
    24e2:	47 70       	andi	r20, 0x07	; 7
    24e4:	8b 01       	movw	r16, r22
    24e6:	02 c0       	rjmp	.+4      	; 0x24ec <conv_brk+0x182>
    24e8:	00 0f       	add	r16, r16
    24ea:	11 1f       	adc	r17, r17
    24ec:	4a 95       	dec	r20
    24ee:	e2 f7       	brpl	.-8      	; 0x24e8 <conv_brk+0x17e>
    24f0:	a8 01       	movw	r20, r16
    24f2:	5c 91       	ld	r21, X
    24f4:	45 2b       	or	r20, r21
    24f6:	4c 93       	st	X, r20
    24f8:	62 2e       	mov	r6, r18
    24fa:	a4 cf       	rjmp	.-184    	; 0x2444 <conv_brk+0xda>
    24fc:	a0 96       	adiw	r28, 0x20	; 32
    24fe:	0f b6       	in	r0, 0x3f	; 63
    2500:	f8 94       	cli
    2502:	de bf       	out	0x3e, r29	; 62
    2504:	0f be       	out	0x3f, r0	; 63
    2506:	cd bf       	out	0x3d, r28	; 61
    2508:	df 91       	pop	r29
    250a:	cf 91       	pop	r28
    250c:	1f 91       	pop	r17
    250e:	0f 91       	pop	r16
    2510:	ff 90       	pop	r15
    2512:	ef 90       	pop	r14
    2514:	df 90       	pop	r13
    2516:	cf 90       	pop	r12
    2518:	bf 90       	pop	r11
    251a:	af 90       	pop	r10
    251c:	9f 90       	pop	r9
    251e:	8f 90       	pop	r8
    2520:	7f 90       	pop	r7
    2522:	6f 90       	pop	r6
    2524:	5f 90       	pop	r5
    2526:	08 95       	ret

00002528 <vfscanf>:
    2528:	5f 92       	push	r5
    252a:	6f 92       	push	r6
    252c:	7f 92       	push	r7
    252e:	8f 92       	push	r8
    2530:	9f 92       	push	r9
    2532:	af 92       	push	r10
    2534:	bf 92       	push	r11
    2536:	cf 92       	push	r12
    2538:	df 92       	push	r13
    253a:	ef 92       	push	r14
    253c:	ff 92       	push	r15
    253e:	0f 93       	push	r16
    2540:	1f 93       	push	r17
    2542:	cf 93       	push	r28
    2544:	df 93       	push	r29
    2546:	6c 01       	movw	r12, r24
    2548:	eb 01       	movw	r28, r22
    254a:	5a 01       	movw	r10, r20
    254c:	fc 01       	movw	r30, r24
    254e:	17 82       	std	Z+7, r1	; 0x07
    2550:	16 82       	std	Z+6, r1	; 0x06
    2552:	51 2c       	mov	r5, r1
    2554:	f6 01       	movw	r30, r12
    2556:	e3 80       	ldd	r14, Z+3	; 0x03
    2558:	fe 01       	movw	r30, r28
    255a:	e3 fc       	sbrc	r14, 3
    255c:	85 91       	lpm	r24, Z+
    255e:	e3 fe       	sbrs	r14, 3
    2560:	81 91       	ld	r24, Z+
    2562:	18 2f       	mov	r17, r24
    2564:	ef 01       	movw	r28, r30
    2566:	88 23       	and	r24, r24
    2568:	09 f4       	brne	.+2      	; 0x256c <vfscanf+0x44>
    256a:	e0 c0       	rjmp	.+448    	; 0x272c <vfscanf+0x204>
    256c:	90 e0       	ldi	r25, 0x00	; 0
    256e:	69 d2       	rcall	.+1234   	; 0x2a42 <isspace>
    2570:	89 2b       	or	r24, r25
    2572:	19 f0       	breq	.+6      	; 0x257a <vfscanf+0x52>
    2574:	c6 01       	movw	r24, r12
    2576:	59 de       	rcall	.-846    	; 0x222a <skip_spaces>
    2578:	ed cf       	rjmp	.-38     	; 0x2554 <vfscanf+0x2c>
    257a:	15 32       	cpi	r17, 0x25	; 37
    257c:	41 f4       	brne	.+16     	; 0x258e <vfscanf+0x66>
    257e:	fe 01       	movw	r30, r28
    2580:	e3 fc       	sbrc	r14, 3
    2582:	15 91       	lpm	r17, Z+
    2584:	e3 fe       	sbrs	r14, 3
    2586:	11 91       	ld	r17, Z+
    2588:	ef 01       	movw	r28, r30
    258a:	15 32       	cpi	r17, 0x25	; 37
    258c:	71 f4       	brne	.+28     	; 0x25aa <vfscanf+0x82>
    258e:	c6 01       	movw	r24, r12
    2590:	6b d2       	rcall	.+1238   	; 0x2a68 <fgetc>
    2592:	97 fd       	sbrc	r25, 7
    2594:	c9 c0       	rjmp	.+402    	; 0x2728 <vfscanf+0x200>
    2596:	41 2f       	mov	r20, r17
    2598:	50 e0       	ldi	r21, 0x00	; 0
    259a:	9c 01       	movw	r18, r24
    259c:	33 27       	eor	r19, r19
    259e:	24 17       	cp	r18, r20
    25a0:	35 07       	cpc	r19, r21
    25a2:	c1 f2       	breq	.-80     	; 0x2554 <vfscanf+0x2c>
    25a4:	b6 01       	movw	r22, r12
    25a6:	9e d2       	rcall	.+1340   	; 0x2ae4 <ungetc>
    25a8:	c1 c0       	rjmp	.+386    	; 0x272c <vfscanf+0x204>
    25aa:	1a 32       	cpi	r17, 0x2A	; 42
    25ac:	39 f4       	brne	.+14     	; 0x25bc <vfscanf+0x94>
    25ae:	e3 fc       	sbrc	r14, 3
    25b0:	15 91       	lpm	r17, Z+
    25b2:	e3 fe       	sbrs	r14, 3
    25b4:	11 91       	ld	r17, Z+
    25b6:	ef 01       	movw	r28, r30
    25b8:	01 e0       	ldi	r16, 0x01	; 1
    25ba:	01 c0       	rjmp	.+2      	; 0x25be <vfscanf+0x96>
    25bc:	00 e0       	ldi	r16, 0x00	; 0
    25be:	f1 2c       	mov	r15, r1
    25c0:	20 ed       	ldi	r18, 0xD0	; 208
    25c2:	21 0f       	add	r18, r17
    25c4:	2a 30       	cpi	r18, 0x0A	; 10
    25c6:	78 f4       	brcc	.+30     	; 0x25e6 <vfscanf+0xbe>
    25c8:	02 60       	ori	r16, 0x02	; 2
    25ca:	6f 2d       	mov	r22, r15
    25cc:	70 e0       	ldi	r23, 0x00	; 0
    25ce:	80 e0       	ldi	r24, 0x00	; 0
    25d0:	90 e0       	ldi	r25, 0x00	; 0
    25d2:	40 e2       	ldi	r20, 0x20	; 32
    25d4:	03 de       	rcall	.-1018   	; 0x21dc <mulacc>
    25d6:	f6 2e       	mov	r15, r22
    25d8:	fe 01       	movw	r30, r28
    25da:	e3 fc       	sbrc	r14, 3
    25dc:	15 91       	lpm	r17, Z+
    25de:	e3 fe       	sbrs	r14, 3
    25e0:	11 91       	ld	r17, Z+
    25e2:	ef 01       	movw	r28, r30
    25e4:	ed cf       	rjmp	.-38     	; 0x25c0 <vfscanf+0x98>
    25e6:	01 ff       	sbrs	r16, 1
    25e8:	03 c0       	rjmp	.+6      	; 0x25f0 <vfscanf+0xc8>
    25ea:	f1 10       	cpse	r15, r1
    25ec:	03 c0       	rjmp	.+6      	; 0x25f4 <vfscanf+0xcc>
    25ee:	9e c0       	rjmp	.+316    	; 0x272c <vfscanf+0x204>
    25f0:	ff 24       	eor	r15, r15
    25f2:	fa 94       	dec	r15
    25f4:	18 36       	cpi	r17, 0x68	; 104
    25f6:	19 f0       	breq	.+6      	; 0x25fe <vfscanf+0xd6>
    25f8:	1c 36       	cpi	r17, 0x6C	; 108
    25fa:	51 f0       	breq	.+20     	; 0x2610 <vfscanf+0xe8>
    25fc:	10 c0       	rjmp	.+32     	; 0x261e <vfscanf+0xf6>
    25fe:	fe 01       	movw	r30, r28
    2600:	e3 fc       	sbrc	r14, 3
    2602:	15 91       	lpm	r17, Z+
    2604:	e3 fe       	sbrs	r14, 3
    2606:	11 91       	ld	r17, Z+
    2608:	ef 01       	movw	r28, r30
    260a:	18 36       	cpi	r17, 0x68	; 104
    260c:	41 f4       	brne	.+16     	; 0x261e <vfscanf+0xf6>
    260e:	08 60       	ori	r16, 0x08	; 8
    2610:	04 60       	ori	r16, 0x04	; 4
    2612:	fe 01       	movw	r30, r28
    2614:	e3 fc       	sbrc	r14, 3
    2616:	15 91       	lpm	r17, Z+
    2618:	e3 fe       	sbrs	r14, 3
    261a:	11 91       	ld	r17, Z+
    261c:	ef 01       	movw	r28, r30
    261e:	11 23       	and	r17, r17
    2620:	09 f4       	brne	.+2      	; 0x2624 <vfscanf+0xfc>
    2622:	84 c0       	rjmp	.+264    	; 0x272c <vfscanf+0x204>
    2624:	61 2f       	mov	r22, r17
    2626:	70 e0       	ldi	r23, 0x00	; 0
    2628:	84 ef       	ldi	r24, 0xF4	; 244
    262a:	91 e0       	ldi	r25, 0x01	; 1
    262c:	12 d2       	rcall	.+1060   	; 0x2a52 <strchr_P>
    262e:	89 2b       	or	r24, r25
    2630:	09 f4       	brne	.+2      	; 0x2634 <vfscanf+0x10c>
    2632:	7c c0       	rjmp	.+248    	; 0x272c <vfscanf+0x204>
    2634:	00 fd       	sbrc	r16, 0
    2636:	07 c0       	rjmp	.+14     	; 0x2646 <vfscanf+0x11e>
    2638:	f5 01       	movw	r30, r10
    263a:	80 80       	ld	r8, Z
    263c:	91 80       	ldd	r9, Z+1	; 0x01
    263e:	c5 01       	movw	r24, r10
    2640:	02 96       	adiw	r24, 0x02	; 2
    2642:	5c 01       	movw	r10, r24
    2644:	02 c0       	rjmp	.+4      	; 0x264a <vfscanf+0x122>
    2646:	81 2c       	mov	r8, r1
    2648:	91 2c       	mov	r9, r1
    264a:	1e 36       	cpi	r17, 0x6E	; 110
    264c:	49 f4       	brne	.+18     	; 0x2660 <vfscanf+0x138>
    264e:	f6 01       	movw	r30, r12
    2650:	46 81       	ldd	r20, Z+6	; 0x06
    2652:	57 81       	ldd	r21, Z+7	; 0x07
    2654:	60 e0       	ldi	r22, 0x00	; 0
    2656:	70 e0       	ldi	r23, 0x00	; 0
    2658:	20 2f       	mov	r18, r16
    265a:	c4 01       	movw	r24, r8
    265c:	b3 dd       	rcall	.-1178   	; 0x21c4 <putval>
    265e:	7a cf       	rjmp	.-268    	; 0x2554 <vfscanf+0x2c>
    2660:	13 36       	cpi	r17, 0x63	; 99
    2662:	a1 f4       	brne	.+40     	; 0x268c <vfscanf+0x164>
    2664:	01 fd       	sbrc	r16, 1
    2666:	02 c0       	rjmp	.+4      	; 0x266c <vfscanf+0x144>
    2668:	ff 24       	eor	r15, r15
    266a:	f3 94       	inc	r15
    266c:	c6 01       	movw	r24, r12
    266e:	fc d1       	rcall	.+1016   	; 0x2a68 <fgetc>
    2670:	97 fd       	sbrc	r25, 7
    2672:	5a c0       	rjmp	.+180    	; 0x2728 <vfscanf+0x200>
    2674:	81 14       	cp	r8, r1
    2676:	91 04       	cpc	r9, r1
    2678:	29 f0       	breq	.+10     	; 0x2684 <vfscanf+0x15c>
    267a:	f4 01       	movw	r30, r8
    267c:	80 83       	st	Z, r24
    267e:	c4 01       	movw	r24, r8
    2680:	01 96       	adiw	r24, 0x01	; 1
    2682:	4c 01       	movw	r8, r24
    2684:	fa 94       	dec	r15
    2686:	f1 10       	cpse	r15, r1
    2688:	f1 cf       	rjmp	.-30     	; 0x266c <vfscanf+0x144>
    268a:	4a c0       	rjmp	.+148    	; 0x2720 <vfscanf+0x1f8>
    268c:	1b 35       	cpi	r17, 0x5B	; 91
    268e:	51 f4       	brne	.+20     	; 0x26a4 <vfscanf+0x17c>
    2690:	9e 01       	movw	r18, r28
    2692:	a4 01       	movw	r20, r8
    2694:	6f 2d       	mov	r22, r15
    2696:	c6 01       	movw	r24, r12
    2698:	68 de       	rcall	.-816    	; 0x236a <conv_brk>
    269a:	ec 01       	movw	r28, r24
    269c:	89 2b       	or	r24, r25
    269e:	09 f0       	breq	.+2      	; 0x26a2 <vfscanf+0x17a>
    26a0:	3f c0       	rjmp	.+126    	; 0x2720 <vfscanf+0x1f8>
    26a2:	39 c0       	rjmp	.+114    	; 0x2716 <vfscanf+0x1ee>
    26a4:	c6 01       	movw	r24, r12
    26a6:	c1 dd       	rcall	.-1150   	; 0x222a <skip_spaces>
    26a8:	97 fd       	sbrc	r25, 7
    26aa:	3e c0       	rjmp	.+124    	; 0x2728 <vfscanf+0x200>
    26ac:	1f 36       	cpi	r17, 0x6F	; 111
    26ae:	49 f1       	breq	.+82     	; 0x2702 <vfscanf+0x1da>
    26b0:	28 f4       	brcc	.+10     	; 0x26bc <vfscanf+0x194>
    26b2:	14 36       	cpi	r17, 0x64	; 100
    26b4:	21 f1       	breq	.+72     	; 0x26fe <vfscanf+0x1d6>
    26b6:	19 36       	cpi	r17, 0x69	; 105
    26b8:	39 f1       	breq	.+78     	; 0x2708 <vfscanf+0x1e0>
    26ba:	25 c0       	rjmp	.+74     	; 0x2706 <vfscanf+0x1de>
    26bc:	13 37       	cpi	r17, 0x73	; 115
    26be:	71 f0       	breq	.+28     	; 0x26dc <vfscanf+0x1b4>
    26c0:	15 37       	cpi	r17, 0x75	; 117
    26c2:	e9 f0       	breq	.+58     	; 0x26fe <vfscanf+0x1d6>
    26c4:	20 c0       	rjmp	.+64     	; 0x2706 <vfscanf+0x1de>
    26c6:	81 14       	cp	r8, r1
    26c8:	91 04       	cpc	r9, r1
    26ca:	29 f0       	breq	.+10     	; 0x26d6 <vfscanf+0x1ae>
    26cc:	f4 01       	movw	r30, r8
    26ce:	60 82       	st	Z, r6
    26d0:	c4 01       	movw	r24, r8
    26d2:	01 96       	adiw	r24, 0x01	; 1
    26d4:	4c 01       	movw	r8, r24
    26d6:	fa 94       	dec	r15
    26d8:	ff 20       	and	r15, r15
    26da:	59 f0       	breq	.+22     	; 0x26f2 <vfscanf+0x1ca>
    26dc:	c6 01       	movw	r24, r12
    26de:	c4 d1       	rcall	.+904    	; 0x2a68 <fgetc>
    26e0:	3c 01       	movw	r6, r24
    26e2:	97 fd       	sbrc	r25, 7
    26e4:	06 c0       	rjmp	.+12     	; 0x26f2 <vfscanf+0x1ca>
    26e6:	ad d1       	rcall	.+858    	; 0x2a42 <isspace>
    26e8:	89 2b       	or	r24, r25
    26ea:	69 f3       	breq	.-38     	; 0x26c6 <vfscanf+0x19e>
    26ec:	b6 01       	movw	r22, r12
    26ee:	c3 01       	movw	r24, r6
    26f0:	f9 d1       	rcall	.+1010   	; 0x2ae4 <ungetc>
    26f2:	81 14       	cp	r8, r1
    26f4:	91 04       	cpc	r9, r1
    26f6:	a1 f0       	breq	.+40     	; 0x2720 <vfscanf+0x1f8>
    26f8:	f4 01       	movw	r30, r8
    26fa:	10 82       	st	Z, r1
    26fc:	11 c0       	rjmp	.+34     	; 0x2720 <vfscanf+0x1f8>
    26fe:	00 62       	ori	r16, 0x20	; 32
    2700:	03 c0       	rjmp	.+6      	; 0x2708 <vfscanf+0x1e0>
    2702:	00 61       	ori	r16, 0x10	; 16
    2704:	01 c0       	rjmp	.+2      	; 0x2708 <vfscanf+0x1e0>
    2706:	00 64       	ori	r16, 0x40	; 64
    2708:	20 2f       	mov	r18, r16
    270a:	a4 01       	movw	r20, r8
    270c:	6f 2d       	mov	r22, r15
    270e:	c6 01       	movw	r24, r12
    2710:	a2 dd       	rcall	.-1212   	; 0x2256 <conv_int>
    2712:	81 11       	cpse	r24, r1
    2714:	05 c0       	rjmp	.+10     	; 0x2720 <vfscanf+0x1f8>
    2716:	f6 01       	movw	r30, r12
    2718:	83 81       	ldd	r24, Z+3	; 0x03
    271a:	80 73       	andi	r24, 0x30	; 48
    271c:	29 f4       	brne	.+10     	; 0x2728 <vfscanf+0x200>
    271e:	06 c0       	rjmp	.+12     	; 0x272c <vfscanf+0x204>
    2720:	00 fd       	sbrc	r16, 0
    2722:	18 cf       	rjmp	.-464    	; 0x2554 <vfscanf+0x2c>
    2724:	53 94       	inc	r5
    2726:	16 cf       	rjmp	.-468    	; 0x2554 <vfscanf+0x2c>
    2728:	55 20       	and	r5, r5
    272a:	19 f0       	breq	.+6      	; 0x2732 <vfscanf+0x20a>
    272c:	85 2d       	mov	r24, r5
    272e:	90 e0       	ldi	r25, 0x00	; 0
    2730:	02 c0       	rjmp	.+4      	; 0x2736 <vfscanf+0x20e>
    2732:	8f ef       	ldi	r24, 0xFF	; 255
    2734:	9f ef       	ldi	r25, 0xFF	; 255
    2736:	df 91       	pop	r29
    2738:	cf 91       	pop	r28
    273a:	1f 91       	pop	r17
    273c:	0f 91       	pop	r16
    273e:	ff 90       	pop	r15
    2740:	ef 90       	pop	r14
    2742:	df 90       	pop	r13
    2744:	cf 90       	pop	r12
    2746:	bf 90       	pop	r11
    2748:	af 90       	pop	r10
    274a:	9f 90       	pop	r9
    274c:	8f 90       	pop	r8
    274e:	7f 90       	pop	r7
    2750:	6f 90       	pop	r6
    2752:	5f 90       	pop	r5
    2754:	08 95       	ret

00002756 <dtoa_prf>:
    2756:	8f 92       	push	r8
    2758:	9f 92       	push	r9
    275a:	af 92       	push	r10
    275c:	bf 92       	push	r11
    275e:	cf 92       	push	r12
    2760:	df 92       	push	r13
    2762:	ef 92       	push	r14
    2764:	ff 92       	push	r15
    2766:	0f 93       	push	r16
    2768:	1f 93       	push	r17
    276a:	cf 93       	push	r28
    276c:	df 93       	push	r29
    276e:	cd b7       	in	r28, 0x3d	; 61
    2770:	de b7       	in	r29, 0x3e	; 62
    2772:	29 97       	sbiw	r28, 0x09	; 9
    2774:	0f b6       	in	r0, 0x3f	; 63
    2776:	f8 94       	cli
    2778:	de bf       	out	0x3e, r29	; 62
    277a:	0f be       	out	0x3f, r0	; 63
    277c:	cd bf       	out	0x3d, r28	; 61
    277e:	6a 01       	movw	r12, r20
    2780:	12 2f       	mov	r17, r18
    2782:	b0 2e       	mov	r11, r16
    2784:	2b e3       	ldi	r18, 0x3B	; 59
    2786:	20 17       	cp	r18, r16
    2788:	20 f0       	brcs	.+8      	; 0x2792 <dtoa_prf+0x3c>
    278a:	ff 24       	eor	r15, r15
    278c:	f3 94       	inc	r15
    278e:	f0 0e       	add	r15, r16
    2790:	02 c0       	rjmp	.+4      	; 0x2796 <dtoa_prf+0x40>
    2792:	2c e3       	ldi	r18, 0x3C	; 60
    2794:	f2 2e       	mov	r15, r18
    2796:	0f 2d       	mov	r16, r15
    2798:	27 e0       	ldi	r18, 0x07	; 7
    279a:	ae 01       	movw	r20, r28
    279c:	4f 5f       	subi	r20, 0xFF	; 255
    279e:	5f 4f       	sbci	r21, 0xFF	; 255
    27a0:	ed da       	rcall	.-2598   	; 0x1d7c <__ftoa_engine>
    27a2:	bc 01       	movw	r22, r24
    27a4:	49 81       	ldd	r20, Y+1	; 0x01
    27a6:	84 2f       	mov	r24, r20
    27a8:	89 70       	andi	r24, 0x09	; 9
    27aa:	81 30       	cpi	r24, 0x01	; 1
    27ac:	31 f0       	breq	.+12     	; 0x27ba <dtoa_prf+0x64>
    27ae:	e1 fc       	sbrc	r14, 1
    27b0:	06 c0       	rjmp	.+12     	; 0x27be <dtoa_prf+0x68>
    27b2:	e0 fe       	sbrs	r14, 0
    27b4:	06 c0       	rjmp	.+12     	; 0x27c2 <dtoa_prf+0x6c>
    27b6:	90 e2       	ldi	r25, 0x20	; 32
    27b8:	05 c0       	rjmp	.+10     	; 0x27c4 <dtoa_prf+0x6e>
    27ba:	9d e2       	ldi	r25, 0x2D	; 45
    27bc:	03 c0       	rjmp	.+6      	; 0x27c4 <dtoa_prf+0x6e>
    27be:	9b e2       	ldi	r25, 0x2B	; 43
    27c0:	01 c0       	rjmp	.+2      	; 0x27c4 <dtoa_prf+0x6e>
    27c2:	90 e0       	ldi	r25, 0x00	; 0
    27c4:	5e 2d       	mov	r21, r14
    27c6:	50 71       	andi	r21, 0x10	; 16
    27c8:	43 ff       	sbrs	r20, 3
    27ca:	3c c0       	rjmp	.+120    	; 0x2844 <dtoa_prf+0xee>
    27cc:	91 11       	cpse	r25, r1
    27ce:	02 c0       	rjmp	.+4      	; 0x27d4 <dtoa_prf+0x7e>
    27d0:	83 e0       	ldi	r24, 0x03	; 3
    27d2:	01 c0       	rjmp	.+2      	; 0x27d6 <dtoa_prf+0x80>
    27d4:	84 e0       	ldi	r24, 0x04	; 4
    27d6:	81 17       	cp	r24, r17
    27d8:	18 f4       	brcc	.+6      	; 0x27e0 <dtoa_prf+0x8a>
    27da:	21 2f       	mov	r18, r17
    27dc:	28 1b       	sub	r18, r24
    27de:	01 c0       	rjmp	.+2      	; 0x27e2 <dtoa_prf+0x8c>
    27e0:	20 e0       	ldi	r18, 0x00	; 0
    27e2:	51 11       	cpse	r21, r1
    27e4:	0b c0       	rjmp	.+22     	; 0x27fc <dtoa_prf+0xa6>
    27e6:	f6 01       	movw	r30, r12
    27e8:	82 2f       	mov	r24, r18
    27ea:	30 e2       	ldi	r19, 0x20	; 32
    27ec:	88 23       	and	r24, r24
    27ee:	19 f0       	breq	.+6      	; 0x27f6 <dtoa_prf+0xa0>
    27f0:	31 93       	st	Z+, r19
    27f2:	81 50       	subi	r24, 0x01	; 1
    27f4:	fb cf       	rjmp	.-10     	; 0x27ec <dtoa_prf+0x96>
    27f6:	c2 0e       	add	r12, r18
    27f8:	d1 1c       	adc	r13, r1
    27fa:	20 e0       	ldi	r18, 0x00	; 0
    27fc:	99 23       	and	r25, r25
    27fe:	29 f0       	breq	.+10     	; 0x280a <dtoa_prf+0xb4>
    2800:	d6 01       	movw	r26, r12
    2802:	9c 93       	st	X, r25
    2804:	f6 01       	movw	r30, r12
    2806:	31 96       	adiw	r30, 0x01	; 1
    2808:	6f 01       	movw	r12, r30
    280a:	c6 01       	movw	r24, r12
    280c:	03 96       	adiw	r24, 0x03	; 3
    280e:	e2 fe       	sbrs	r14, 2
    2810:	0a c0       	rjmp	.+20     	; 0x2826 <dtoa_prf+0xd0>
    2812:	3e e4       	ldi	r19, 0x4E	; 78
    2814:	d6 01       	movw	r26, r12
    2816:	3c 93       	st	X, r19
    2818:	41 e4       	ldi	r20, 0x41	; 65
    281a:	11 96       	adiw	r26, 0x01	; 1
    281c:	4c 93       	st	X, r20
    281e:	11 97       	sbiw	r26, 0x01	; 1
    2820:	12 96       	adiw	r26, 0x02	; 2
    2822:	3c 93       	st	X, r19
    2824:	06 c0       	rjmp	.+12     	; 0x2832 <dtoa_prf+0xdc>
    2826:	3e e6       	ldi	r19, 0x6E	; 110
    2828:	f6 01       	movw	r30, r12
    282a:	30 83       	st	Z, r19
    282c:	41 e6       	ldi	r20, 0x61	; 97
    282e:	41 83       	std	Z+1, r20	; 0x01
    2830:	32 83       	std	Z+2, r19	; 0x02
    2832:	fc 01       	movw	r30, r24
    2834:	32 2f       	mov	r19, r18
    2836:	40 e2       	ldi	r20, 0x20	; 32
    2838:	33 23       	and	r19, r19
    283a:	09 f4       	brne	.+2      	; 0x283e <dtoa_prf+0xe8>
    283c:	42 c0       	rjmp	.+132    	; 0x28c2 <dtoa_prf+0x16c>
    283e:	41 93       	st	Z+, r20
    2840:	31 50       	subi	r19, 0x01	; 1
    2842:	fa cf       	rjmp	.-12     	; 0x2838 <dtoa_prf+0xe2>
    2844:	42 ff       	sbrs	r20, 2
    2846:	44 c0       	rjmp	.+136    	; 0x28d0 <dtoa_prf+0x17a>
    2848:	91 11       	cpse	r25, r1
    284a:	02 c0       	rjmp	.+4      	; 0x2850 <dtoa_prf+0xfa>
    284c:	83 e0       	ldi	r24, 0x03	; 3
    284e:	01 c0       	rjmp	.+2      	; 0x2852 <dtoa_prf+0xfc>
    2850:	84 e0       	ldi	r24, 0x04	; 4
    2852:	81 17       	cp	r24, r17
    2854:	18 f4       	brcc	.+6      	; 0x285c <dtoa_prf+0x106>
    2856:	21 2f       	mov	r18, r17
    2858:	28 1b       	sub	r18, r24
    285a:	01 c0       	rjmp	.+2      	; 0x285e <dtoa_prf+0x108>
    285c:	20 e0       	ldi	r18, 0x00	; 0
    285e:	51 11       	cpse	r21, r1
    2860:	0b c0       	rjmp	.+22     	; 0x2878 <dtoa_prf+0x122>
    2862:	f6 01       	movw	r30, r12
    2864:	82 2f       	mov	r24, r18
    2866:	30 e2       	ldi	r19, 0x20	; 32
    2868:	88 23       	and	r24, r24
    286a:	19 f0       	breq	.+6      	; 0x2872 <dtoa_prf+0x11c>
    286c:	31 93       	st	Z+, r19
    286e:	81 50       	subi	r24, 0x01	; 1
    2870:	fb cf       	rjmp	.-10     	; 0x2868 <dtoa_prf+0x112>
    2872:	c2 0e       	add	r12, r18
    2874:	d1 1c       	adc	r13, r1
    2876:	20 e0       	ldi	r18, 0x00	; 0
    2878:	99 23       	and	r25, r25
    287a:	29 f0       	breq	.+10     	; 0x2886 <dtoa_prf+0x130>
    287c:	d6 01       	movw	r26, r12
    287e:	9c 93       	st	X, r25
    2880:	f6 01       	movw	r30, r12
    2882:	31 96       	adiw	r30, 0x01	; 1
    2884:	6f 01       	movw	r12, r30
    2886:	c6 01       	movw	r24, r12
    2888:	03 96       	adiw	r24, 0x03	; 3
    288a:	e2 fe       	sbrs	r14, 2
    288c:	0b c0       	rjmp	.+22     	; 0x28a4 <dtoa_prf+0x14e>
    288e:	39 e4       	ldi	r19, 0x49	; 73
    2890:	d6 01       	movw	r26, r12
    2892:	3c 93       	st	X, r19
    2894:	3e e4       	ldi	r19, 0x4E	; 78
    2896:	11 96       	adiw	r26, 0x01	; 1
    2898:	3c 93       	st	X, r19
    289a:	11 97       	sbiw	r26, 0x01	; 1
    289c:	36 e4       	ldi	r19, 0x46	; 70
    289e:	12 96       	adiw	r26, 0x02	; 2
    28a0:	3c 93       	st	X, r19
    28a2:	07 c0       	rjmp	.+14     	; 0x28b2 <dtoa_prf+0x15c>
    28a4:	39 e6       	ldi	r19, 0x69	; 105
    28a6:	f6 01       	movw	r30, r12
    28a8:	30 83       	st	Z, r19
    28aa:	3e e6       	ldi	r19, 0x6E	; 110
    28ac:	31 83       	std	Z+1, r19	; 0x01
    28ae:	36 e6       	ldi	r19, 0x66	; 102
    28b0:	32 83       	std	Z+2, r19	; 0x02
    28b2:	fc 01       	movw	r30, r24
    28b4:	32 2f       	mov	r19, r18
    28b6:	40 e2       	ldi	r20, 0x20	; 32
    28b8:	33 23       	and	r19, r19
    28ba:	19 f0       	breq	.+6      	; 0x28c2 <dtoa_prf+0x16c>
    28bc:	41 93       	st	Z+, r20
    28be:	31 50       	subi	r19, 0x01	; 1
    28c0:	fb cf       	rjmp	.-10     	; 0x28b8 <dtoa_prf+0x162>
    28c2:	fc 01       	movw	r30, r24
    28c4:	e2 0f       	add	r30, r18
    28c6:	f1 1d       	adc	r31, r1
    28c8:	10 82       	st	Z, r1
    28ca:	8e ef       	ldi	r24, 0xFE	; 254
    28cc:	9f ef       	ldi	r25, 0xFF	; 255
    28ce:	a6 c0       	rjmp	.+332    	; 0x2a1c <dtoa_prf+0x2c6>
    28d0:	21 e0       	ldi	r18, 0x01	; 1
    28d2:	30 e0       	ldi	r19, 0x00	; 0
    28d4:	91 11       	cpse	r25, r1
    28d6:	02 c0       	rjmp	.+4      	; 0x28dc <dtoa_prf+0x186>
    28d8:	20 e0       	ldi	r18, 0x00	; 0
    28da:	30 e0       	ldi	r19, 0x00	; 0
    28dc:	16 16       	cp	r1, r22
    28de:	17 06       	cpc	r1, r23
    28e0:	1c f4       	brge	.+6      	; 0x28e8 <dtoa_prf+0x192>
    28e2:	fb 01       	movw	r30, r22
    28e4:	31 96       	adiw	r30, 0x01	; 1
    28e6:	02 c0       	rjmp	.+4      	; 0x28ec <dtoa_prf+0x196>
    28e8:	e1 e0       	ldi	r30, 0x01	; 1
    28ea:	f0 e0       	ldi	r31, 0x00	; 0
    28ec:	2e 0f       	add	r18, r30
    28ee:	3f 1f       	adc	r19, r31
    28f0:	bb 20       	and	r11, r11
    28f2:	21 f0       	breq	.+8      	; 0x28fc <dtoa_prf+0x1a6>
    28f4:	eb 2d       	mov	r30, r11
    28f6:	f0 e0       	ldi	r31, 0x00	; 0
    28f8:	31 96       	adiw	r30, 0x01	; 1
    28fa:	02 c0       	rjmp	.+4      	; 0x2900 <dtoa_prf+0x1aa>
    28fc:	e0 e0       	ldi	r30, 0x00	; 0
    28fe:	f0 e0       	ldi	r31, 0x00	; 0
    2900:	2e 0f       	add	r18, r30
    2902:	3f 1f       	adc	r19, r31
    2904:	e1 2f       	mov	r30, r17
    2906:	f0 e0       	ldi	r31, 0x00	; 0
    2908:	2e 17       	cp	r18, r30
    290a:	3f 07       	cpc	r19, r31
    290c:	1c f4       	brge	.+6      	; 0x2914 <dtoa_prf+0x1be>
    290e:	12 1b       	sub	r17, r18
    2910:	21 2f       	mov	r18, r17
    2912:	01 c0       	rjmp	.+2      	; 0x2916 <dtoa_prf+0x1c0>
    2914:	20 e0       	ldi	r18, 0x00	; 0
    2916:	8e 2d       	mov	r24, r14
    2918:	88 71       	andi	r24, 0x18	; 24
    291a:	59 f4       	brne	.+22     	; 0x2932 <dtoa_prf+0x1dc>
    291c:	f6 01       	movw	r30, r12
    291e:	82 2f       	mov	r24, r18
    2920:	30 e2       	ldi	r19, 0x20	; 32
    2922:	88 23       	and	r24, r24
    2924:	19 f0       	breq	.+6      	; 0x292c <dtoa_prf+0x1d6>
    2926:	31 93       	st	Z+, r19
    2928:	81 50       	subi	r24, 0x01	; 1
    292a:	fb cf       	rjmp	.-10     	; 0x2922 <dtoa_prf+0x1cc>
    292c:	c2 0e       	add	r12, r18
    292e:	d1 1c       	adc	r13, r1
    2930:	20 e0       	ldi	r18, 0x00	; 0
    2932:	99 23       	and	r25, r25
    2934:	29 f0       	breq	.+10     	; 0x2940 <dtoa_prf+0x1ea>
    2936:	d6 01       	movw	r26, r12
    2938:	9c 93       	st	X, r25
    293a:	f6 01       	movw	r30, r12
    293c:	31 96       	adiw	r30, 0x01	; 1
    293e:	6f 01       	movw	r12, r30
    2940:	51 11       	cpse	r21, r1
    2942:	0b c0       	rjmp	.+22     	; 0x295a <dtoa_prf+0x204>
    2944:	f6 01       	movw	r30, r12
    2946:	82 2f       	mov	r24, r18
    2948:	90 e3       	ldi	r25, 0x30	; 48
    294a:	88 23       	and	r24, r24
    294c:	19 f0       	breq	.+6      	; 0x2954 <dtoa_prf+0x1fe>
    294e:	91 93       	st	Z+, r25
    2950:	81 50       	subi	r24, 0x01	; 1
    2952:	fb cf       	rjmp	.-10     	; 0x294a <dtoa_prf+0x1f4>
    2954:	c2 0e       	add	r12, r18
    2956:	d1 1c       	adc	r13, r1
    2958:	20 e0       	ldi	r18, 0x00	; 0
    295a:	0f 2d       	mov	r16, r15
    295c:	06 0f       	add	r16, r22
    295e:	9a 81       	ldd	r25, Y+2	; 0x02
    2960:	34 2f       	mov	r19, r20
    2962:	30 71       	andi	r19, 0x10	; 16
    2964:	44 ff       	sbrs	r20, 4
    2966:	03 c0       	rjmp	.+6      	; 0x296e <dtoa_prf+0x218>
    2968:	91 33       	cpi	r25, 0x31	; 49
    296a:	09 f4       	brne	.+2      	; 0x296e <dtoa_prf+0x218>
    296c:	01 50       	subi	r16, 0x01	; 1
    296e:	10 16       	cp	r1, r16
    2970:	24 f4       	brge	.+8      	; 0x297a <dtoa_prf+0x224>
    2972:	09 30       	cpi	r16, 0x09	; 9
    2974:	18 f0       	brcs	.+6      	; 0x297c <dtoa_prf+0x226>
    2976:	08 e0       	ldi	r16, 0x08	; 8
    2978:	01 c0       	rjmp	.+2      	; 0x297c <dtoa_prf+0x226>
    297a:	01 e0       	ldi	r16, 0x01	; 1
    297c:	ab 01       	movw	r20, r22
    297e:	77 ff       	sbrs	r23, 7
    2980:	02 c0       	rjmp	.+4      	; 0x2986 <dtoa_prf+0x230>
    2982:	40 e0       	ldi	r20, 0x00	; 0
    2984:	50 e0       	ldi	r21, 0x00	; 0
    2986:	fb 01       	movw	r30, r22
    2988:	e4 1b       	sub	r30, r20
    298a:	f5 0b       	sbc	r31, r21
    298c:	a1 e0       	ldi	r26, 0x01	; 1
    298e:	b0 e0       	ldi	r27, 0x00	; 0
    2990:	ac 0f       	add	r26, r28
    2992:	bd 1f       	adc	r27, r29
    2994:	ea 0f       	add	r30, r26
    2996:	fb 1f       	adc	r31, r27
    2998:	8e e2       	ldi	r24, 0x2E	; 46
    299a:	a8 2e       	mov	r10, r24
    299c:	4b 01       	movw	r8, r22
    299e:	80 1a       	sub	r8, r16
    29a0:	91 08       	sbc	r9, r1
    29a2:	0b 2d       	mov	r16, r11
    29a4:	10 e0       	ldi	r17, 0x00	; 0
    29a6:	11 95       	neg	r17
    29a8:	01 95       	neg	r16
    29aa:	11 09       	sbc	r17, r1
    29ac:	4f 3f       	cpi	r20, 0xFF	; 255
    29ae:	bf ef       	ldi	r27, 0xFF	; 255
    29b0:	5b 07       	cpc	r21, r27
    29b2:	21 f4       	brne	.+8      	; 0x29bc <dtoa_prf+0x266>
    29b4:	d6 01       	movw	r26, r12
    29b6:	ac 92       	st	X, r10
    29b8:	11 96       	adiw	r26, 0x01	; 1
    29ba:	6d 01       	movw	r12, r26
    29bc:	64 17       	cp	r22, r20
    29be:	75 07       	cpc	r23, r21
    29c0:	2c f0       	brlt	.+10     	; 0x29cc <dtoa_prf+0x276>
    29c2:	84 16       	cp	r8, r20
    29c4:	95 06       	cpc	r9, r21
    29c6:	14 f4       	brge	.+4      	; 0x29cc <dtoa_prf+0x276>
    29c8:	81 81       	ldd	r24, Z+1	; 0x01
    29ca:	01 c0       	rjmp	.+2      	; 0x29ce <dtoa_prf+0x278>
    29cc:	80 e3       	ldi	r24, 0x30	; 48
    29ce:	41 50       	subi	r20, 0x01	; 1
    29d0:	51 09       	sbc	r21, r1
    29d2:	31 96       	adiw	r30, 0x01	; 1
    29d4:	d6 01       	movw	r26, r12
    29d6:	11 96       	adiw	r26, 0x01	; 1
    29d8:	7d 01       	movw	r14, r26
    29da:	40 17       	cp	r20, r16
    29dc:	51 07       	cpc	r21, r17
    29de:	24 f0       	brlt	.+8      	; 0x29e8 <dtoa_prf+0x292>
    29e0:	d6 01       	movw	r26, r12
    29e2:	8c 93       	st	X, r24
    29e4:	67 01       	movw	r12, r14
    29e6:	e2 cf       	rjmp	.-60     	; 0x29ac <dtoa_prf+0x256>
    29e8:	64 17       	cp	r22, r20
    29ea:	75 07       	cpc	r23, r21
    29ec:	39 f4       	brne	.+14     	; 0x29fc <dtoa_prf+0x2a6>
    29ee:	96 33       	cpi	r25, 0x36	; 54
    29f0:	20 f4       	brcc	.+8      	; 0x29fa <dtoa_prf+0x2a4>
    29f2:	95 33       	cpi	r25, 0x35	; 53
    29f4:	19 f4       	brne	.+6      	; 0x29fc <dtoa_prf+0x2a6>
    29f6:	31 11       	cpse	r19, r1
    29f8:	01 c0       	rjmp	.+2      	; 0x29fc <dtoa_prf+0x2a6>
    29fa:	81 e3       	ldi	r24, 0x31	; 49
    29fc:	f6 01       	movw	r30, r12
    29fe:	80 83       	st	Z, r24
    2a00:	f7 01       	movw	r30, r14
    2a02:	82 2f       	mov	r24, r18
    2a04:	90 e2       	ldi	r25, 0x20	; 32
    2a06:	88 23       	and	r24, r24
    2a08:	19 f0       	breq	.+6      	; 0x2a10 <dtoa_prf+0x2ba>
    2a0a:	91 93       	st	Z+, r25
    2a0c:	81 50       	subi	r24, 0x01	; 1
    2a0e:	fb cf       	rjmp	.-10     	; 0x2a06 <dtoa_prf+0x2b0>
    2a10:	f7 01       	movw	r30, r14
    2a12:	e2 0f       	add	r30, r18
    2a14:	f1 1d       	adc	r31, r1
    2a16:	10 82       	st	Z, r1
    2a18:	80 e0       	ldi	r24, 0x00	; 0
    2a1a:	90 e0       	ldi	r25, 0x00	; 0
    2a1c:	29 96       	adiw	r28, 0x09	; 9
    2a1e:	0f b6       	in	r0, 0x3f	; 63
    2a20:	f8 94       	cli
    2a22:	de bf       	out	0x3e, r29	; 62
    2a24:	0f be       	out	0x3f, r0	; 63
    2a26:	cd bf       	out	0x3d, r28	; 61
    2a28:	df 91       	pop	r29
    2a2a:	cf 91       	pop	r28
    2a2c:	1f 91       	pop	r17
    2a2e:	0f 91       	pop	r16
    2a30:	ff 90       	pop	r15
    2a32:	ef 90       	pop	r14
    2a34:	df 90       	pop	r13
    2a36:	cf 90       	pop	r12
    2a38:	bf 90       	pop	r11
    2a3a:	af 90       	pop	r10
    2a3c:	9f 90       	pop	r9
    2a3e:	8f 90       	pop	r8
    2a40:	08 95       	ret

00002a42 <isspace>:
    2a42:	91 11       	cpse	r25, r1
    2a44:	68 c0       	rjmp	.+208    	; 0x2b16 <__ctype_isfalse>
    2a46:	80 32       	cpi	r24, 0x20	; 32
    2a48:	19 f0       	breq	.+6      	; 0x2a50 <isspace+0xe>
    2a4a:	89 50       	subi	r24, 0x09	; 9
    2a4c:	85 50       	subi	r24, 0x05	; 5
    2a4e:	d0 f7       	brcc	.-12     	; 0x2a44 <isspace+0x2>
    2a50:	08 95       	ret

00002a52 <strchr_P>:
    2a52:	fc 01       	movw	r30, r24
    2a54:	05 90       	lpm	r0, Z+
    2a56:	06 16       	cp	r0, r22
    2a58:	21 f0       	breq	.+8      	; 0x2a62 <strchr_P+0x10>
    2a5a:	00 20       	and	r0, r0
    2a5c:	d9 f7       	brne	.-10     	; 0x2a54 <strchr_P+0x2>
    2a5e:	c0 01       	movw	r24, r0
    2a60:	08 95       	ret
    2a62:	31 97       	sbiw	r30, 0x01	; 1
    2a64:	cf 01       	movw	r24, r30
    2a66:	08 95       	ret

00002a68 <fgetc>:
    2a68:	cf 93       	push	r28
    2a6a:	df 93       	push	r29
    2a6c:	ec 01       	movw	r28, r24
    2a6e:	2b 81       	ldd	r18, Y+3	; 0x03
    2a70:	20 ff       	sbrs	r18, 0
    2a72:	33 c0       	rjmp	.+102    	; 0x2ada <fgetc+0x72>
    2a74:	26 ff       	sbrs	r18, 6
    2a76:	0a c0       	rjmp	.+20     	; 0x2a8c <fgetc+0x24>
    2a78:	2f 7b       	andi	r18, 0xBF	; 191
    2a7a:	2b 83       	std	Y+3, r18	; 0x03
    2a7c:	8e 81       	ldd	r24, Y+6	; 0x06
    2a7e:	9f 81       	ldd	r25, Y+7	; 0x07
    2a80:	01 96       	adiw	r24, 0x01	; 1
    2a82:	9f 83       	std	Y+7, r25	; 0x07
    2a84:	8e 83       	std	Y+6, r24	; 0x06
    2a86:	8a 81       	ldd	r24, Y+2	; 0x02
    2a88:	90 e0       	ldi	r25, 0x00	; 0
    2a8a:	29 c0       	rjmp	.+82     	; 0x2ade <fgetc+0x76>
    2a8c:	22 ff       	sbrs	r18, 2
    2a8e:	0f c0       	rjmp	.+30     	; 0x2aae <fgetc+0x46>
    2a90:	e8 81       	ld	r30, Y
    2a92:	f9 81       	ldd	r31, Y+1	; 0x01
    2a94:	80 81       	ld	r24, Z
    2a96:	08 2e       	mov	r0, r24
    2a98:	00 0c       	add	r0, r0
    2a9a:	99 0b       	sbc	r25, r25
    2a9c:	00 97       	sbiw	r24, 0x00	; 0
    2a9e:	19 f4       	brne	.+6      	; 0x2aa6 <fgetc+0x3e>
    2aa0:	20 62       	ori	r18, 0x20	; 32
    2aa2:	2b 83       	std	Y+3, r18	; 0x03
    2aa4:	1a c0       	rjmp	.+52     	; 0x2ada <fgetc+0x72>
    2aa6:	31 96       	adiw	r30, 0x01	; 1
    2aa8:	f9 83       	std	Y+1, r31	; 0x01
    2aaa:	e8 83       	st	Y, r30
    2aac:	0e c0       	rjmp	.+28     	; 0x2aca <fgetc+0x62>
    2aae:	ea 85       	ldd	r30, Y+10	; 0x0a
    2ab0:	fb 85       	ldd	r31, Y+11	; 0x0b
    2ab2:	19 95       	eicall
    2ab4:	97 ff       	sbrs	r25, 7
    2ab6:	09 c0       	rjmp	.+18     	; 0x2aca <fgetc+0x62>
    2ab8:	2b 81       	ldd	r18, Y+3	; 0x03
    2aba:	01 96       	adiw	r24, 0x01	; 1
    2abc:	11 f0       	breq	.+4      	; 0x2ac2 <fgetc+0x5a>
    2abe:	80 e2       	ldi	r24, 0x20	; 32
    2ac0:	01 c0       	rjmp	.+2      	; 0x2ac4 <fgetc+0x5c>
    2ac2:	80 e1       	ldi	r24, 0x10	; 16
    2ac4:	82 2b       	or	r24, r18
    2ac6:	8b 83       	std	Y+3, r24	; 0x03
    2ac8:	08 c0       	rjmp	.+16     	; 0x2ada <fgetc+0x72>
    2aca:	2e 81       	ldd	r18, Y+6	; 0x06
    2acc:	3f 81       	ldd	r19, Y+7	; 0x07
    2ace:	2f 5f       	subi	r18, 0xFF	; 255
    2ad0:	3f 4f       	sbci	r19, 0xFF	; 255
    2ad2:	3f 83       	std	Y+7, r19	; 0x07
    2ad4:	2e 83       	std	Y+6, r18	; 0x06
    2ad6:	99 27       	eor	r25, r25
    2ad8:	02 c0       	rjmp	.+4      	; 0x2ade <fgetc+0x76>
    2ada:	8f ef       	ldi	r24, 0xFF	; 255
    2adc:	9f ef       	ldi	r25, 0xFF	; 255
    2ade:	df 91       	pop	r29
    2ae0:	cf 91       	pop	r28
    2ae2:	08 95       	ret

00002ae4 <ungetc>:
    2ae4:	fb 01       	movw	r30, r22
    2ae6:	23 81       	ldd	r18, Z+3	; 0x03
    2ae8:	20 ff       	sbrs	r18, 0
    2aea:	12 c0       	rjmp	.+36     	; 0x2b10 <ungetc+0x2c>
    2aec:	26 fd       	sbrc	r18, 6
    2aee:	10 c0       	rjmp	.+32     	; 0x2b10 <ungetc+0x2c>
    2af0:	8f 3f       	cpi	r24, 0xFF	; 255
    2af2:	3f ef       	ldi	r19, 0xFF	; 255
    2af4:	93 07       	cpc	r25, r19
    2af6:	61 f0       	breq	.+24     	; 0x2b10 <ungetc+0x2c>
    2af8:	82 83       	std	Z+2, r24	; 0x02
    2afa:	2f 7d       	andi	r18, 0xDF	; 223
    2afc:	20 64       	ori	r18, 0x40	; 64
    2afe:	23 83       	std	Z+3, r18	; 0x03
    2b00:	26 81       	ldd	r18, Z+6	; 0x06
    2b02:	37 81       	ldd	r19, Z+7	; 0x07
    2b04:	21 50       	subi	r18, 0x01	; 1
    2b06:	31 09       	sbc	r19, r1
    2b08:	37 83       	std	Z+7, r19	; 0x07
    2b0a:	26 83       	std	Z+6, r18	; 0x06
    2b0c:	99 27       	eor	r25, r25
    2b0e:	08 95       	ret
    2b10:	8f ef       	ldi	r24, 0xFF	; 255
    2b12:	9f ef       	ldi	r25, 0xFF	; 255
    2b14:	08 95       	ret

00002b16 <__ctype_isfalse>:
    2b16:	99 27       	eor	r25, r25
    2b18:	88 27       	eor	r24, r24

00002b1a <__ctype_istrue>:
    2b1a:	08 95       	ret

00002b1c <_exit>:
    2b1c:	f8 94       	cli

00002b1e <__stop_program>:
    2b1e:	ff cf       	rjmp	.-2      	; 0x2b1e <__stop_program>
